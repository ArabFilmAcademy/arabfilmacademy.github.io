(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["styles"],{

/***/ 2:
/*!*****************************!*\
  !*** multi ./src/main.scss ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /home/omar/WebstormProjects/arabfilmacademy/src/main.scss */"q+Kr");


/***/ }),

/***/ "JPst":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
// eslint-disable-next-line func-names
module.exports = function (useSourceMap) {
  var list = []; // return the list of modules as css string

  list.toString = function toString() {
    return this.map(function (item) {
      var content = cssWithMappingToString(item, useSourceMap);

      if (item[2]) {
        return "@media ".concat(item[2], " {").concat(content, "}");
      }

      return content;
    }).join('');
  }; // import a list of modules into the list
  // eslint-disable-next-line func-names


  list.i = function (modules, mediaQuery, dedupe) {
    if (typeof modules === 'string') {
      // eslint-disable-next-line no-param-reassign
      modules = [[null, modules, '']];
    }

    var alreadyImportedModules = {};

    if (dedupe) {
      for (var i = 0; i < this.length; i++) {
        // eslint-disable-next-line prefer-destructuring
        var id = this[i][0];

        if (id != null) {
          alreadyImportedModules[id] = true;
        }
      }
    }

    for (var _i = 0; _i < modules.length; _i++) {
      var item = [].concat(modules[_i]);

      if (dedupe && alreadyImportedModules[item[0]]) {
        // eslint-disable-next-line no-continue
        continue;
      }

      if (mediaQuery) {
        if (!item[2]) {
          item[2] = mediaQuery;
        } else {
          item[2] = "".concat(mediaQuery, " and ").concat(item[2]);
        }
      }

      list.push(item);
    }
  };

  return list;
};

function cssWithMappingToString(item, useSourceMap) {
  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring

  var cssMapping = item[3];

  if (!cssMapping) {
    return content;
  }

  if (useSourceMap && typeof btoa === 'function') {
    var sourceMapping = toComment(cssMapping);
    var sourceURLs = cssMapping.sources.map(function (source) {
      return "/*# sourceURL=".concat(cssMapping.sourceRoot || '').concat(source, " */");
    });
    return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
  }

  return [content].join('\n');
} // Adapted from convert-source-map (MIT)


function toComment(sourceMap) {
  // eslint-disable-next-line no-undef
  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
  var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);
  return "/*# ".concat(data, " */");
}

/***/ }),

/***/ "LboF":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var isOldIE = function isOldIE() {
  var memo;
  return function memorize() {
    if (typeof memo === 'undefined') {
      // Test for IE <= 9 as proposed by Browserhacks
      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
      // Tests for existence of standard globals is to allow style-loader
      // to operate correctly into non-standard environments
      // @see https://github.com/webpack-contrib/style-loader/issues/177
      memo = Boolean(window && document && document.all && !window.atob);
    }

    return memo;
  };
}();

var getTarget = function getTarget() {
  var memo = {};
  return function memorize(target) {
    if (typeof memo[target] === 'undefined') {
      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself

      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
        try {
          // This will throw an exception if access to iframe is blocked
          // due to cross-origin restrictions
          styleTarget = styleTarget.contentDocument.head;
        } catch (e) {
          // istanbul ignore next
          styleTarget = null;
        }
      }

      memo[target] = styleTarget;
    }

    return memo[target];
  };
}();

var stylesInDom = [];

function getIndexByIdentifier(identifier) {
  var result = -1;

  for (var i = 0; i < stylesInDom.length; i++) {
    if (stylesInDom[i].identifier === identifier) {
      result = i;
      break;
    }
  }

  return result;
}

function modulesToDom(list, options) {
  var idCountMap = {};
  var identifiers = [];

  for (var i = 0; i < list.length; i++) {
    var item = list[i];
    var id = options.base ? item[0] + options.base : item[0];
    var count = idCountMap[id] || 0;
    var identifier = "".concat(id, " ").concat(count);
    idCountMap[id] = count + 1;
    var index = getIndexByIdentifier(identifier);
    var obj = {
      css: item[1],
      media: item[2],
      sourceMap: item[3]
    };

    if (index !== -1) {
      stylesInDom[index].references++;
      stylesInDom[index].updater(obj);
    } else {
      stylesInDom.push({
        identifier: identifier,
        updater: addStyle(obj, options),
        references: 1
      });
    }

    identifiers.push(identifier);
  }

  return identifiers;
}

function insertStyleElement(options) {
  var style = document.createElement('style');
  var attributes = options.attributes || {};

  if (typeof attributes.nonce === 'undefined') {
    var nonce =  true ? __webpack_require__.nc : undefined;

    if (nonce) {
      attributes.nonce = nonce;
    }
  }

  Object.keys(attributes).forEach(function (key) {
    style.setAttribute(key, attributes[key]);
  });

  if (typeof options.insert === 'function') {
    options.insert(style);
  } else {
    var target = getTarget(options.insert || 'head');

    if (!target) {
      throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
    }

    target.appendChild(style);
  }

  return style;
}

function removeStyleElement(style) {
  // istanbul ignore if
  if (style.parentNode === null) {
    return false;
  }

  style.parentNode.removeChild(style);
}
/* istanbul ignore next  */


var replaceText = function replaceText() {
  var textStore = [];
  return function replace(index, replacement) {
    textStore[index] = replacement;
    return textStore.filter(Boolean).join('\n');
  };
}();

function applyToSingletonTag(style, index, remove, obj) {
  var css = remove ? '' : obj.media ? "@media ".concat(obj.media, " {").concat(obj.css, "}") : obj.css; // For old IE

  /* istanbul ignore if  */

  if (style.styleSheet) {
    style.styleSheet.cssText = replaceText(index, css);
  } else {
    var cssNode = document.createTextNode(css);
    var childNodes = style.childNodes;

    if (childNodes[index]) {
      style.removeChild(childNodes[index]);
    }

    if (childNodes.length) {
      style.insertBefore(cssNode, childNodes[index]);
    } else {
      style.appendChild(cssNode);
    }
  }
}

function applyToTag(style, options, obj) {
  var css = obj.css;
  var media = obj.media;
  var sourceMap = obj.sourceMap;

  if (media) {
    style.setAttribute('media', media);
  } else {
    style.removeAttribute('media');
  }

  if (sourceMap && btoa) {
    css += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");
  } // For old IE

  /* istanbul ignore if  */


  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    while (style.firstChild) {
      style.removeChild(style.firstChild);
    }

    style.appendChild(document.createTextNode(css));
  }
}

var singleton = null;
var singletonCounter = 0;

function addStyle(obj, options) {
  var style;
  var update;
  var remove;

  if (options.singleton) {
    var styleIndex = singletonCounter++;
    style = singleton || (singleton = insertStyleElement(options));
    update = applyToSingletonTag.bind(null, style, styleIndex, false);
    remove = applyToSingletonTag.bind(null, style, styleIndex, true);
  } else {
    style = insertStyleElement(options);
    update = applyToTag.bind(null, style, options);

    remove = function remove() {
      removeStyleElement(style);
    };
  }

  update(obj);
  return function updateStyle(newObj) {
    if (newObj) {
      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {
        return;
      }

      update(obj = newObj);
    } else {
      remove();
    }
  };
}

module.exports = function (list, options) {
  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
  // tags it will allow on a page

  if (!options.singleton && typeof options.singleton !== 'boolean') {
    options.singleton = isOldIE();
  }

  list = list || [];
  var lastIdentifiers = modulesToDom(list, options);
  return function update(newList) {
    newList = newList || [];

    if (Object.prototype.toString.call(newList) !== '[object Array]') {
      return;
    }

    for (var i = 0; i < lastIdentifiers.length; i++) {
      var identifier = lastIdentifiers[i];
      var index = getIndexByIdentifier(identifier);
      stylesInDom[index].references--;
    }

    var newLastIdentifiers = modulesToDom(newList, options);

    for (var _i = 0; _i < lastIdentifiers.length; _i++) {
      var _identifier = lastIdentifiers[_i];

      var _index = getIndexByIdentifier(_identifier);

      if (stylesInDom[_index].references === 0) {
        stylesInDom[_index].updater();

        stylesInDom.splice(_index, 1);
      }
    }

    lastIdentifiers = newLastIdentifiers;
  };
};

/***/ }),

/***/ "iN72":
/*!*******************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js??ref--13-1!./node_modules/postcss-loader/src??embedded!./node_modules/resolve-url-loader??ref--13-3!./node_modules/sass-loader/dist/cjs.js??ref--13-4!./src/main.scss ***!
  \*******************************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ "JPst");
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);
// Module
___CSS_LOADER_EXPORT___.push([module.i, "@charset \"UTF-8\";\n/*\n * Entry point of global application style.\n * Component-specific style should not go here and be included directly as part of the components.\n */\n/*\n * Application global variables.\n */\n/* Colors for the ripple elements.*/\n/* stylelint-disable-next-line material/theme-mixin-api */\n/* stylelint-disable-next-line material/theme-mixin-api */\n/* stylelint-disable material/no-prefixes */\n/* stylelint-enable */\n@font-face {\n  font-family: \"Material Icons\";\n  font-style: normal;\n  font-weight: 400;\n  font-display: block;\n  src: url('MaterialIcons-Regular.eot');\n  /* For IE6-8 */\n  src: local(\"☺\"), url('MaterialIcons-Regular.woff2') format(\"woff2\"), url('MaterialIcons-Regular.woff') format(\"woff\"), url('MaterialIcons-Regular.ttf') format(\"truetype\");\n}\n.material-icons {\n  font-family: \"Material Icons\";\n  font-weight: normal;\n  font-style: normal;\n  font-size: 24px;\n  /* Preferred icon size */\n  display: inline-block;\n  line-height: 1;\n  text-transform: none;\n  letter-spacing: normal;\n  word-wrap: normal;\n  white-space: nowrap;\n  direction: ltr;\n  /* Support for all WebKit browsers. */\n  -webkit-font-smoothing: antialiased;\n  /* Support for Safari and Chrome. */\n  text-rendering: optimizeLegibility;\n  /* Support for Firefox. */\n  -moz-osx-font-smoothing: grayscale;\n  /* Support for IE. */\n  font-feature-settings: \"liga\";\n}\n.material-icons._10k:before {\n  content: \"\\e951\";\n}\n.material-icons._10mp:before {\n  content: \"\\e952\";\n}\n.material-icons._11mp:before {\n  content: \"\\e953\";\n}\n.material-icons._12mp:before {\n  content: \"\\e954\";\n}\n.material-icons._13mp:before {\n  content: \"\\e955\";\n}\n.material-icons._14mp:before {\n  content: \"\\e956\";\n}\n.material-icons._15mp:before {\n  content: \"\\e957\";\n}\n.material-icons._16mp:before {\n  content: \"\\e958\";\n}\n.material-icons._17mp:before {\n  content: \"\\e959\";\n}\n.material-icons._18mp:before {\n  content: \"\\e95a\";\n}\n.material-icons._19mp:before {\n  content: \"\\e95b\";\n}\n.material-icons._1k:before {\n  content: \"\\e95c\";\n}\n.material-icons._1k_plus:before {\n  content: \"\\e95d\";\n}\n.material-icons._20mp:before {\n  content: \"\\e95e\";\n}\n.material-icons._21mp:before {\n  content: \"\\e95f\";\n}\n.material-icons._22mp:before {\n  content: \"\\e960\";\n}\n.material-icons._23mp:before {\n  content: \"\\e961\";\n}\n.material-icons._24mp:before {\n  content: \"\\e962\";\n}\n.material-icons._2k:before {\n  content: \"\\e963\";\n}\n.material-icons._2k_plus:before {\n  content: \"\\e964\";\n}\n.material-icons._2mp:before {\n  content: \"\\e965\";\n}\n.material-icons._360:before {\n  content: \"\\e577\";\n}\n.material-icons._3d_rotation:before {\n  content: \"\\e84d\";\n}\n.material-icons._3k:before {\n  content: \"\\e966\";\n}\n.material-icons._3k_plus:before {\n  content: \"\\e967\";\n}\n.material-icons._3mp:before {\n  content: \"\\e968\";\n}\n.material-icons._4k:before {\n  content: \"\\e072\";\n}\n.material-icons._4k_plus:before {\n  content: \"\\e969\";\n}\n.material-icons._4mp:before {\n  content: \"\\e96a\";\n}\n.material-icons._5g:before {\n  content: \"\\ef38\";\n}\n.material-icons._5k:before {\n  content: \"\\e96b\";\n}\n.material-icons._5k_plus:before {\n  content: \"\\e96c\";\n}\n.material-icons._5mp:before {\n  content: \"\\e96d\";\n}\n.material-icons._6_ft_apart:before {\n  content: \"\\f21e\";\n}\n.material-icons._6k:before {\n  content: \"\\e96e\";\n}\n.material-icons._6k_plus:before {\n  content: \"\\e96f\";\n}\n.material-icons._6mp:before {\n  content: \"\\e970\";\n}\n.material-icons._7k:before {\n  content: \"\\e971\";\n}\n.material-icons._7k_plus:before {\n  content: \"\\e972\";\n}\n.material-icons._7mp:before {\n  content: \"\\e973\";\n}\n.material-icons._8k:before {\n  content: \"\\e974\";\n}\n.material-icons._8k_plus:before {\n  content: \"\\e975\";\n}\n.material-icons._8mp:before {\n  content: \"\\e976\";\n}\n.material-icons._9k:before {\n  content: \"\\e977\";\n}\n.material-icons._9k_plus:before {\n  content: \"\\e978\";\n}\n.material-icons._9mp:before {\n  content: \"\\e979\";\n}\n.material-icons.ac_unit:before {\n  content: \"\\eb3b\";\n}\n.material-icons.access_alarm:before {\n  content: \"\\e190\";\n}\n.material-icons.access_alarms:before {\n  content: \"\\e191\";\n}\n.material-icons.access_time:before {\n  content: \"\\e192\";\n}\n.material-icons.accessibility:before {\n  content: \"\\e84e\";\n}\n.material-icons.accessibility_new:before {\n  content: \"\\e92c\";\n}\n.material-icons.accessible:before {\n  content: \"\\e914\";\n}\n.material-icons.accessible_forward:before {\n  content: \"\\e934\";\n}\n.material-icons.account_balance:before {\n  content: \"\\e84f\";\n}\n.material-icons.account_balance_wallet:before {\n  content: \"\\e850\";\n}\n.material-icons.account_box:before {\n  content: \"\\e851\";\n}\n.material-icons.account_circle:before {\n  content: \"\\e853\";\n}\n.material-icons.account_tree:before {\n  content: \"\\e97a\";\n}\n.material-icons.ad_units:before {\n  content: \"\\ef39\";\n}\n.material-icons.adb:before {\n  content: \"\\e60e\";\n}\n.material-icons.add:before {\n  content: \"\\e145\";\n}\n.material-icons.add_a_photo:before {\n  content: \"\\e439\";\n}\n.material-icons.add_alarm:before {\n  content: \"\\e193\";\n}\n.material-icons.add_alert:before {\n  content: \"\\e003\";\n}\n.material-icons.add_box:before {\n  content: \"\\e146\";\n}\n.material-icons.add_business:before {\n  content: \"\\e729\";\n}\n.material-icons.add_call:before {\n  content: \"\\e0e8\";\n}\n.material-icons.add_chart:before {\n  content: \"\\e97b\";\n}\n.material-icons.add_circle:before {\n  content: \"\\e147\";\n}\n.material-icons.add_circle_outline:before {\n  content: \"\\e148\";\n}\n.material-icons.add_comment:before {\n  content: \"\\e266\";\n}\n.material-icons.add_ic_call:before {\n  content: \"\\e97c\";\n}\n.material-icons.add_link:before {\n  content: \"\\e178\";\n}\n.material-icons.add_location:before {\n  content: \"\\e567\";\n}\n.material-icons.add_location_alt:before {\n  content: \"\\ef3a\";\n}\n.material-icons.add_moderator:before {\n  content: \"\\e97d\";\n}\n.material-icons.add_photo_alternate:before {\n  content: \"\\e43e\";\n}\n.material-icons.add_road:before {\n  content: \"\\ef3b\";\n}\n.material-icons.add_shopping_cart:before {\n  content: \"\\e854\";\n}\n.material-icons.add_task:before {\n  content: \"\\f23a\";\n}\n.material-icons.add_to_drive:before {\n  content: \"\\e65c\";\n}\n.material-icons.add_to_home_screen:before {\n  content: \"\\e1fe\";\n}\n.material-icons.add_to_photos:before {\n  content: \"\\e39d\";\n}\n.material-icons.add_to_queue:before {\n  content: \"\\e05c\";\n}\n.material-icons.addchart:before {\n  content: \"\\ef3c\";\n}\n.material-icons.adjust:before {\n  content: \"\\e39e\";\n}\n.material-icons.admin_panel_settings:before {\n  content: \"\\ef3d\";\n}\n.material-icons.agriculture:before {\n  content: \"\\ea79\";\n}\n.material-icons.airline_seat_flat:before {\n  content: \"\\e630\";\n}\n.material-icons.airline_seat_flat_angled:before {\n  content: \"\\e631\";\n}\n.material-icons.airline_seat_individual_suite:before {\n  content: \"\\e632\";\n}\n.material-icons.airline_seat_legroom_extra:before {\n  content: \"\\e633\";\n}\n.material-icons.airline_seat_legroom_normal:before {\n  content: \"\\e634\";\n}\n.material-icons.airline_seat_legroom_reduced:before {\n  content: \"\\e635\";\n}\n.material-icons.airline_seat_recline_extra:before {\n  content: \"\\e636\";\n}\n.material-icons.airline_seat_recline_normal:before {\n  content: \"\\e637\";\n}\n.material-icons.airplanemode_active:before {\n  content: \"\\e195\";\n}\n.material-icons.airplanemode_inactive:before {\n  content: \"\\e194\";\n}\n.material-icons.airplanemode_off:before {\n  content: \"\\e194\";\n}\n.material-icons.airplanemode_on:before {\n  content: \"\\e195\";\n}\n.material-icons.airplay:before {\n  content: \"\\e055\";\n}\n.material-icons.airport_shuttle:before {\n  content: \"\\eb3c\";\n}\n.material-icons.alarm:before {\n  content: \"\\e855\";\n}\n.material-icons.alarm_add:before {\n  content: \"\\e856\";\n}\n.material-icons.alarm_off:before {\n  content: \"\\e857\";\n}\n.material-icons.alarm_on:before {\n  content: \"\\e858\";\n}\n.material-icons.album:before {\n  content: \"\\e019\";\n}\n.material-icons.align_horizontal_center:before {\n  content: \"\\e00f\";\n}\n.material-icons.align_horizontal_left:before {\n  content: \"\\e00d\";\n}\n.material-icons.align_horizontal_right:before {\n  content: \"\\e010\";\n}\n.material-icons.align_vertical_bottom:before {\n  content: \"\\e015\";\n}\n.material-icons.align_vertical_center:before {\n  content: \"\\e011\";\n}\n.material-icons.align_vertical_top:before {\n  content: \"\\e00c\";\n}\n.material-icons.all_inbox:before {\n  content: \"\\e97f\";\n}\n.material-icons.all_inclusive:before {\n  content: \"\\eb3d\";\n}\n.material-icons.all_out:before {\n  content: \"\\e90b\";\n}\n.material-icons.alt_route:before {\n  content: \"\\f184\";\n}\n.material-icons.alternate_email:before {\n  content: \"\\e0e6\";\n}\n.material-icons.amp_stories:before {\n  content: \"\\ea13\";\n}\n.material-icons.analytics:before {\n  content: \"\\ef3e\";\n}\n.material-icons.anchor:before {\n  content: \"\\f1cd\";\n}\n.material-icons.android:before {\n  content: \"\\e859\";\n}\n.material-icons.animation:before {\n  content: \"\\e71c\";\n}\n.material-icons.announcement:before {\n  content: \"\\e85a\";\n}\n.material-icons.apartment:before {\n  content: \"\\ea40\";\n}\n.material-icons.api:before {\n  content: \"\\f1b7\";\n}\n.material-icons.app_blocking:before {\n  content: \"\\ef3f\";\n}\n.material-icons.app_registration:before {\n  content: \"\\ef40\";\n}\n.material-icons.app_settings_alt:before {\n  content: \"\\ef41\";\n}\n.material-icons.approval:before {\n  content: \"\\e982\";\n}\n.material-icons.apps:before {\n  content: \"\\e5c3\";\n}\n.material-icons.architecture:before {\n  content: \"\\ea3b\";\n}\n.material-icons.archive:before {\n  content: \"\\e149\";\n}\n.material-icons.arrow_back:before {\n  content: \"\\e5c4\";\n}\n.material-icons.arrow_back_ios:before {\n  content: \"\\e5e0\";\n}\n.material-icons.arrow_circle_down:before {\n  content: \"\\f181\";\n}\n.material-icons.arrow_circle_up:before {\n  content: \"\\f182\";\n}\n.material-icons.arrow_downward:before {\n  content: \"\\e5db\";\n}\n.material-icons.arrow_drop_down:before {\n  content: \"\\e5c5\";\n}\n.material-icons.arrow_drop_down_circle:before {\n  content: \"\\e5c6\";\n}\n.material-icons.arrow_drop_up:before {\n  content: \"\\e5c7\";\n}\n.material-icons.arrow_forward:before {\n  content: \"\\e5c8\";\n}\n.material-icons.arrow_forward_ios:before {\n  content: \"\\e5e1\";\n}\n.material-icons.arrow_left:before {\n  content: \"\\e5de\";\n}\n.material-icons.arrow_right:before {\n  content: \"\\e5df\";\n}\n.material-icons.arrow_right_alt:before {\n  content: \"\\e941\";\n}\n.material-icons.arrow_upward:before {\n  content: \"\\e5d8\";\n}\n.material-icons.art_track:before {\n  content: \"\\e060\";\n}\n.material-icons.article:before {\n  content: \"\\ef42\";\n}\n.material-icons.aspect_ratio:before {\n  content: \"\\e85b\";\n}\n.material-icons.assessment:before {\n  content: \"\\e85c\";\n}\n.material-icons.assignment:before {\n  content: \"\\e85d\";\n}\n.material-icons.assignment_ind:before {\n  content: \"\\e85e\";\n}\n.material-icons.assignment_late:before {\n  content: \"\\e85f\";\n}\n.material-icons.assignment_return:before {\n  content: \"\\e860\";\n}\n.material-icons.assignment_returned:before {\n  content: \"\\e861\";\n}\n.material-icons.assignment_turned_in:before {\n  content: \"\\e862\";\n}\n.material-icons.assistant:before {\n  content: \"\\e39f\";\n}\n.material-icons.assistant_direction:before {\n  content: \"\\e988\";\n}\n.material-icons.assistant_navigation:before {\n  content: \"\\e989\";\n}\n.material-icons.assistant_photo:before {\n  content: \"\\e3a0\";\n}\n.material-icons.atm:before {\n  content: \"\\e573\";\n}\n.material-icons.attach_email:before {\n  content: \"\\ea5e\";\n}\n.material-icons.attach_file:before {\n  content: \"\\e226\";\n}\n.material-icons.attach_money:before {\n  content: \"\\e227\";\n}\n.material-icons.attachment:before {\n  content: \"\\e2bc\";\n}\n.material-icons.attractions:before {\n  content: \"\\ea52\";\n}\n.material-icons.audiotrack:before {\n  content: \"\\e3a1\";\n}\n.material-icons.auto_awesome:before {\n  content: \"\\e65f\";\n}\n.material-icons.auto_awesome_mosaic:before {\n  content: \"\\e660\";\n}\n.material-icons.auto_awesome_motion:before {\n  content: \"\\e661\";\n}\n.material-icons.auto_delete:before {\n  content: \"\\ea4c\";\n}\n.material-icons.auto_fix_high:before {\n  content: \"\\e663\";\n}\n.material-icons.auto_fix_normal:before {\n  content: \"\\e664\";\n}\n.material-icons.auto_fix_off:before {\n  content: \"\\e665\";\n}\n.material-icons.auto_stories:before {\n  content: \"\\e666\";\n}\n.material-icons.autorenew:before {\n  content: \"\\e863\";\n}\n.material-icons.av_timer:before {\n  content: \"\\e01b\";\n}\n.material-icons.baby_changing_station:before {\n  content: \"\\f19b\";\n}\n.material-icons.backpack:before {\n  content: \"\\f19c\";\n}\n.material-icons.backspace:before {\n  content: \"\\e14a\";\n}\n.material-icons.backup:before {\n  content: \"\\e864\";\n}\n.material-icons.backup_table:before {\n  content: \"\\ef43\";\n}\n.material-icons.badge:before {\n  content: \"\\ea67\";\n}\n.material-icons.bakery_dining:before {\n  content: \"\\ea53\";\n}\n.material-icons.ballot:before {\n  content: \"\\e172\";\n}\n.material-icons.bar_chart:before {\n  content: \"\\e26b\";\n}\n.material-icons.batch_prediction:before {\n  content: \"\\f0f5\";\n}\n.material-icons.bathtub:before {\n  content: \"\\ea41\";\n}\n.material-icons.battery_alert:before {\n  content: \"\\e19c\";\n}\n.material-icons.battery_charging_full:before {\n  content: \"\\e1a3\";\n}\n.material-icons.battery_full:before {\n  content: \"\\e1a4\";\n}\n.material-icons.battery_std:before {\n  content: \"\\e1a5\";\n}\n.material-icons.battery_unknown:before {\n  content: \"\\e1a6\";\n}\n.material-icons.beach_access:before {\n  content: \"\\eb3e\";\n}\n.material-icons.bedtime:before {\n  content: \"\\ef44\";\n}\n.material-icons.beenhere:before {\n  content: \"\\e52d\";\n}\n.material-icons.bento:before {\n  content: \"\\f1f4\";\n}\n.material-icons.bike_scooter:before {\n  content: \"\\ef45\";\n}\n.material-icons.biotech:before {\n  content: \"\\ea3a\";\n}\n.material-icons.block:before {\n  content: \"\\e14b\";\n}\n.material-icons.block_flipped:before {\n  content: \"\\ef46\";\n}\n.material-icons.bluetooth:before {\n  content: \"\\e1a7\";\n}\n.material-icons.bluetooth_audio:before {\n  content: \"\\e60f\";\n}\n.material-icons.bluetooth_connected:before {\n  content: \"\\e1a8\";\n}\n.material-icons.bluetooth_disabled:before {\n  content: \"\\e1a9\";\n}\n.material-icons.bluetooth_searching:before {\n  content: \"\\e1aa\";\n}\n.material-icons.blur_circular:before {\n  content: \"\\e3a2\";\n}\n.material-icons.blur_linear:before {\n  content: \"\\e3a3\";\n}\n.material-icons.blur_off:before {\n  content: \"\\e3a4\";\n}\n.material-icons.blur_on:before {\n  content: \"\\e3a5\";\n}\n.material-icons.bolt:before {\n  content: \"\\ea0b\";\n}\n.material-icons.book:before {\n  content: \"\\e865\";\n}\n.material-icons.book_online:before {\n  content: \"\\f217\";\n}\n.material-icons.bookmark:before {\n  content: \"\\e866\";\n}\n.material-icons.bookmark_border:before {\n  content: \"\\e867\";\n}\n.material-icons.bookmark_outline:before {\n  content: \"\\e867\";\n}\n.material-icons.bookmarks:before {\n  content: \"\\e98b\";\n}\n.material-icons.border_all:before {\n  content: \"\\e228\";\n}\n.material-icons.border_bottom:before {\n  content: \"\\e229\";\n}\n.material-icons.border_clear:before {\n  content: \"\\e22a\";\n}\n.material-icons.border_color:before {\n  content: \"\\e22b\";\n}\n.material-icons.border_horizontal:before {\n  content: \"\\e22c\";\n}\n.material-icons.border_inner:before {\n  content: \"\\e22d\";\n}\n.material-icons.border_left:before {\n  content: \"\\e22e\";\n}\n.material-icons.border_outer:before {\n  content: \"\\e22f\";\n}\n.material-icons.border_right:before {\n  content: \"\\e230\";\n}\n.material-icons.border_style:before {\n  content: \"\\e231\";\n}\n.material-icons.border_top:before {\n  content: \"\\e232\";\n}\n.material-icons.border_vertical:before {\n  content: \"\\e233\";\n}\n.material-icons.branding_watermark:before {\n  content: \"\\e06b\";\n}\n.material-icons.breakfast_dining:before {\n  content: \"\\ea54\";\n}\n.material-icons.brightness_1:before {\n  content: \"\\e3a6\";\n}\n.material-icons.brightness_2:before {\n  content: \"\\e3a7\";\n}\n.material-icons.brightness_3:before {\n  content: \"\\e3a8\";\n}\n.material-icons.brightness_4:before {\n  content: \"\\e3a9\";\n}\n.material-icons.brightness_5:before {\n  content: \"\\e3aa\";\n}\n.material-icons.brightness_6:before {\n  content: \"\\e3ab\";\n}\n.material-icons.brightness_7:before {\n  content: \"\\e3ac\";\n}\n.material-icons.brightness_auto:before {\n  content: \"\\e1ab\";\n}\n.material-icons.brightness_high:before {\n  content: \"\\e1ac\";\n}\n.material-icons.brightness_low:before {\n  content: \"\\e1ad\";\n}\n.material-icons.brightness_medium:before {\n  content: \"\\e1ae\";\n}\n.material-icons.broken_image:before {\n  content: \"\\e3ad\";\n}\n.material-icons.browser_not_supported:before {\n  content: \"\\ef47\";\n}\n.material-icons.brunch_dining:before {\n  content: \"\\ea73\";\n}\n.material-icons.brush:before {\n  content: \"\\e3ae\";\n}\n.material-icons.bubble_chart:before {\n  content: \"\\e6dd\";\n}\n.material-icons.bug_report:before {\n  content: \"\\e868\";\n}\n.material-icons.build:before {\n  content: \"\\e869\";\n}\n.material-icons.build_circle:before {\n  content: \"\\ef48\";\n}\n.material-icons.burst_mode:before {\n  content: \"\\e43c\";\n}\n.material-icons.bus_alert:before {\n  content: \"\\e98f\";\n}\n.material-icons.business:before {\n  content: \"\\e0af\";\n}\n.material-icons.business_center:before {\n  content: \"\\eb3f\";\n}\n.material-icons.cached:before {\n  content: \"\\e86a\";\n}\n.material-icons.cake:before {\n  content: \"\\e7e9\";\n}\n.material-icons.calculate:before {\n  content: \"\\ea5f\";\n}\n.material-icons.calendar_today:before {\n  content: \"\\e935\";\n}\n.material-icons.calendar_view_day:before {\n  content: \"\\e936\";\n}\n.material-icons.call:before {\n  content: \"\\e0b0\";\n}\n.material-icons.call_end:before {\n  content: \"\\e0b1\";\n}\n.material-icons.call_made:before {\n  content: \"\\e0b2\";\n}\n.material-icons.call_merge:before {\n  content: \"\\e0b3\";\n}\n.material-icons.call_missed:before {\n  content: \"\\e0b4\";\n}\n.material-icons.call_missed_outgoing:before {\n  content: \"\\e0e4\";\n}\n.material-icons.call_received:before {\n  content: \"\\e0b5\";\n}\n.material-icons.call_split:before {\n  content: \"\\e0b6\";\n}\n.material-icons.call_to_action:before {\n  content: \"\\e06c\";\n}\n.material-icons.camera:before {\n  content: \"\\e3af\";\n}\n.material-icons.camera_alt:before {\n  content: \"\\e3b0\";\n}\n.material-icons.camera_enhance:before {\n  content: \"\\e8fc\";\n}\n.material-icons.camera_front:before {\n  content: \"\\e3b1\";\n}\n.material-icons.camera_rear:before {\n  content: \"\\e3b2\";\n}\n.material-icons.camera_roll:before {\n  content: \"\\e3b3\";\n}\n.material-icons.campaign:before {\n  content: \"\\ef49\";\n}\n.material-icons.cancel:before {\n  content: \"\\e5c9\";\n}\n.material-icons.cancel_presentation:before {\n  content: \"\\e0e9\";\n}\n.material-icons.cancel_schedule_send:before {\n  content: \"\\ea39\";\n}\n.material-icons.car_rental:before {\n  content: \"\\ea55\";\n}\n.material-icons.car_repair:before {\n  content: \"\\ea56\";\n}\n.material-icons.card_giftcard:before {\n  content: \"\\e8f6\";\n}\n.material-icons.card_membership:before {\n  content: \"\\e8f7\";\n}\n.material-icons.card_travel:before {\n  content: \"\\e8f8\";\n}\n.material-icons.carpenter:before {\n  content: \"\\f1f8\";\n}\n.material-icons.cases:before {\n  content: \"\\e992\";\n}\n.material-icons.casino:before {\n  content: \"\\eb40\";\n}\n.material-icons.cast:before {\n  content: \"\\e307\";\n}\n.material-icons.cast_connected:before {\n  content: \"\\e308\";\n}\n.material-icons.cast_for_education:before {\n  content: \"\\efec\";\n}\n.material-icons.category:before {\n  content: \"\\e574\";\n}\n.material-icons.celebration:before {\n  content: \"\\ea65\";\n}\n.material-icons.cell_wifi:before {\n  content: \"\\e0ec\";\n}\n.material-icons.center_focus_strong:before {\n  content: \"\\e3b4\";\n}\n.material-icons.center_focus_weak:before {\n  content: \"\\e3b5\";\n}\n.material-icons.change_history:before {\n  content: \"\\e86b\";\n}\n.material-icons.charging_station:before {\n  content: \"\\f19d\";\n}\n.material-icons.chat:before {\n  content: \"\\e0b7\";\n}\n.material-icons.chat_bubble:before {\n  content: \"\\e0ca\";\n}\n.material-icons.chat_bubble_outline:before {\n  content: \"\\e0cb\";\n}\n.material-icons.check:before {\n  content: \"\\e5ca\";\n}\n.material-icons.check_box:before {\n  content: \"\\e834\";\n}\n.material-icons.check_box_outline_blank:before {\n  content: \"\\e835\";\n}\n.material-icons.check_circle:before {\n  content: \"\\e86c\";\n}\n.material-icons.check_circle_outline:before {\n  content: \"\\e92d\";\n}\n.material-icons.checkroom:before {\n  content: \"\\f19e\";\n}\n.material-icons.chevron_left:before {\n  content: \"\\e5cb\";\n}\n.material-icons.chevron_right:before {\n  content: \"\\e5cc\";\n}\n.material-icons.child_care:before {\n  content: \"\\eb41\";\n}\n.material-icons.child_friendly:before {\n  content: \"\\eb42\";\n}\n.material-icons.chrome_reader_mode:before {\n  content: \"\\e86d\";\n}\n.material-icons.circle:before {\n  content: \"\\ef4a\";\n}\n.material-icons.circle_notifications:before {\n  content: \"\\e994\";\n}\n.material-icons.class:before {\n  content: \"\\e86e\";\n}\n.material-icons.clean_hands:before {\n  content: \"\\f21f\";\n}\n.material-icons.cleaning_services:before {\n  content: \"\\f0ff\";\n}\n.material-icons.clear:before {\n  content: \"\\e14c\";\n}\n.material-icons.clear_all:before {\n  content: \"\\e0b8\";\n}\n.material-icons.close:before {\n  content: \"\\e5cd\";\n}\n.material-icons.close_fullscreen:before {\n  content: \"\\f1cf\";\n}\n.material-icons.closed_caption:before {\n  content: \"\\e01c\";\n}\n.material-icons.closed_caption_disabled:before {\n  content: \"\\f1dc\";\n}\n.material-icons.closed_caption_off:before {\n  content: \"\\e996\";\n}\n.material-icons.cloud:before {\n  content: \"\\e2bd\";\n}\n.material-icons.cloud_circle:before {\n  content: \"\\e2be\";\n}\n.material-icons.cloud_done:before {\n  content: \"\\e2bf\";\n}\n.material-icons.cloud_download:before {\n  content: \"\\e2c0\";\n}\n.material-icons.cloud_off:before {\n  content: \"\\e2c1\";\n}\n.material-icons.cloud_queue:before {\n  content: \"\\e2c2\";\n}\n.material-icons.cloud_upload:before {\n  content: \"\\e2c3\";\n}\n.material-icons.code:before {\n  content: \"\\e86f\";\n}\n.material-icons.collections:before {\n  content: \"\\e3b6\";\n}\n.material-icons.collections_bookmark:before {\n  content: \"\\e431\";\n}\n.material-icons.color_lens:before {\n  content: \"\\e3b7\";\n}\n.material-icons.colorize:before {\n  content: \"\\e3b8\";\n}\n.material-icons.comment:before {\n  content: \"\\e0b9\";\n}\n.material-icons.comment_bank:before {\n  content: \"\\ea4e\";\n}\n.material-icons.commute:before {\n  content: \"\\e940\";\n}\n.material-icons.compare:before {\n  content: \"\\e3b9\";\n}\n.material-icons.compare_arrows:before {\n  content: \"\\e915\";\n}\n.material-icons.compass_calibration:before {\n  content: \"\\e57c\";\n}\n.material-icons.compress:before {\n  content: \"\\e94d\";\n}\n.material-icons.computer:before {\n  content: \"\\e30a\";\n}\n.material-icons.confirmation_num:before {\n  content: \"\\e638\";\n}\n.material-icons.confirmation_number:before {\n  content: \"\\e638\";\n}\n.material-icons.connect_without_contact:before {\n  content: \"\\f223\";\n}\n.material-icons.connected_tv:before {\n  content: \"\\e998\";\n}\n.material-icons.construction:before {\n  content: \"\\ea3c\";\n}\n.material-icons.contact_mail:before {\n  content: \"\\e0d0\";\n}\n.material-icons.contact_page:before {\n  content: \"\\f22e\";\n}\n.material-icons.contact_phone:before {\n  content: \"\\e0cf\";\n}\n.material-icons.contact_support:before {\n  content: \"\\e94c\";\n}\n.material-icons.contactless:before {\n  content: \"\\ea71\";\n}\n.material-icons.contacts:before {\n  content: \"\\e0ba\";\n}\n.material-icons.content_copy:before {\n  content: \"\\e14d\";\n}\n.material-icons.content_cut:before {\n  content: \"\\e14e\";\n}\n.material-icons.content_paste:before {\n  content: \"\\e14f\";\n}\n.material-icons.control_camera:before {\n  content: \"\\e074\";\n}\n.material-icons.control_point:before {\n  content: \"\\e3ba\";\n}\n.material-icons.control_point_duplicate:before {\n  content: \"\\e3bb\";\n}\n.material-icons.copyright:before {\n  content: \"\\e90c\";\n}\n.material-icons.coronavirus:before {\n  content: \"\\f221\";\n}\n.material-icons.corporate_fare:before {\n  content: \"\\f1d0\";\n}\n.material-icons.countertops:before {\n  content: \"\\f1f7\";\n}\n.material-icons.create:before {\n  content: \"\\e150\";\n}\n.material-icons.create_new_folder:before {\n  content: \"\\e2cc\";\n}\n.material-icons.credit_card:before {\n  content: \"\\e870\";\n}\n.material-icons.crop:before {\n  content: \"\\e3be\";\n}\n.material-icons.crop_16_9:before {\n  content: \"\\e3bc\";\n}\n.material-icons.crop_3_2:before {\n  content: \"\\e3bd\";\n}\n.material-icons.crop_5_4:before {\n  content: \"\\e3bf\";\n}\n.material-icons.crop_7_5:before {\n  content: \"\\e3c0\";\n}\n.material-icons.crop_din:before {\n  content: \"\\e3c1\";\n}\n.material-icons.crop_free:before {\n  content: \"\\e3c2\";\n}\n.material-icons.crop_landscape:before {\n  content: \"\\e3c3\";\n}\n.material-icons.crop_original:before {\n  content: \"\\e3c4\";\n}\n.material-icons.crop_portrait:before {\n  content: \"\\e3c5\";\n}\n.material-icons.crop_rotate:before {\n  content: \"\\e437\";\n}\n.material-icons.crop_square:before {\n  content: \"\\e3c6\";\n}\n.material-icons.dangerous:before {\n  content: \"\\e99a\";\n}\n.material-icons.dashboard:before {\n  content: \"\\e871\";\n}\n.material-icons.dashboard_customize:before {\n  content: \"\\e99b\";\n}\n.material-icons.data_usage:before {\n  content: \"\\e1af\";\n}\n.material-icons.date_range:before {\n  content: \"\\e916\";\n}\n.material-icons.deck:before {\n  content: \"\\ea42\";\n}\n.material-icons.dehaze:before {\n  content: \"\\e3c7\";\n}\n.material-icons.delete:before {\n  content: \"\\e872\";\n}\n.material-icons.delete_forever:before {\n  content: \"\\e92b\";\n}\n.material-icons.delete_outline:before {\n  content: \"\\e92e\";\n}\n.material-icons.delete_sweep:before {\n  content: \"\\e16c\";\n}\n.material-icons.delivery_dining:before {\n  content: \"\\ea72\";\n}\n.material-icons.departure_board:before {\n  content: \"\\e576\";\n}\n.material-icons.description:before {\n  content: \"\\e873\";\n}\n.material-icons.design_services:before {\n  content: \"\\f10a\";\n}\n.material-icons.desktop_access_disabled:before {\n  content: \"\\e99d\";\n}\n.material-icons.desktop_mac:before {\n  content: \"\\e30b\";\n}\n.material-icons.desktop_windows:before {\n  content: \"\\e30c\";\n}\n.material-icons.details:before {\n  content: \"\\e3c8\";\n}\n.material-icons.developer_board:before {\n  content: \"\\e30d\";\n}\n.material-icons.developer_mode:before {\n  content: \"\\e1b0\";\n}\n.material-icons.device_hub:before {\n  content: \"\\e335\";\n}\n.material-icons.device_thermostat:before {\n  content: \"\\e1ff\";\n}\n.material-icons.device_unknown:before {\n  content: \"\\e339\";\n}\n.material-icons.devices:before {\n  content: \"\\e1b1\";\n}\n.material-icons.devices_other:before {\n  content: \"\\e337\";\n}\n.material-icons.dialer_sip:before {\n  content: \"\\e0bb\";\n}\n.material-icons.dialpad:before {\n  content: \"\\e0bc\";\n}\n.material-icons.dinner_dining:before {\n  content: \"\\ea57\";\n}\n.material-icons.directions:before {\n  content: \"\\e52e\";\n}\n.material-icons.directions_bike:before {\n  content: \"\\e52f\";\n}\n.material-icons.directions_boat:before {\n  content: \"\\e532\";\n}\n.material-icons.directions_bus:before {\n  content: \"\\e530\";\n}\n.material-icons.directions_car:before {\n  content: \"\\e531\";\n}\n.material-icons.directions_ferry:before {\n  content: \"\\e532\";\n}\n.material-icons.directions_off:before {\n  content: \"\\f10f\";\n}\n.material-icons.directions_railway:before {\n  content: \"\\e534\";\n}\n.material-icons.directions_run:before {\n  content: \"\\e566\";\n}\n.material-icons.directions_subway:before {\n  content: \"\\e533\";\n}\n.material-icons.directions_train:before {\n  content: \"\\e534\";\n}\n.material-icons.directions_transit:before {\n  content: \"\\e535\";\n}\n.material-icons.directions_walk:before {\n  content: \"\\e536\";\n}\n.material-icons.dirty_lens:before {\n  content: \"\\ef4b\";\n}\n.material-icons.disabled_by_default:before {\n  content: \"\\f230\";\n}\n.material-icons.disc_full:before {\n  content: \"\\e610\";\n}\n.material-icons.dnd_forwardslash:before {\n  content: \"\\e611\";\n}\n.material-icons.dns:before {\n  content: \"\\e875\";\n}\n.material-icons.do_not_disturb:before {\n  content: \"\\e612\";\n}\n.material-icons.do_not_disturb_alt:before {\n  content: \"\\e611\";\n}\n.material-icons.do_not_disturb_off:before {\n  content: \"\\e643\";\n}\n.material-icons.do_not_disturb_on:before {\n  content: \"\\e644\";\n}\n.material-icons.do_not_step:before {\n  content: \"\\f19f\";\n}\n.material-icons.do_not_touch:before {\n  content: \"\\f1b0\";\n}\n.material-icons.dock:before {\n  content: \"\\e30e\";\n}\n.material-icons.domain:before {\n  content: \"\\e7ee\";\n}\n.material-icons.domain_disabled:before {\n  content: \"\\e0ef\";\n}\n.material-icons.domain_verification:before {\n  content: \"\\ef4c\";\n}\n.material-icons.done:before {\n  content: \"\\e876\";\n}\n.material-icons.done_all:before {\n  content: \"\\e877\";\n}\n.material-icons.done_outline:before {\n  content: \"\\e92f\";\n}\n.material-icons.donut_large:before {\n  content: \"\\e917\";\n}\n.material-icons.donut_small:before {\n  content: \"\\e918\";\n}\n.material-icons.double_arrow:before {\n  content: \"\\ea50\";\n}\n.material-icons.drafts:before {\n  content: \"\\e151\";\n}\n.material-icons.drag_handle:before {\n  content: \"\\e25d\";\n}\n.material-icons.drag_indicator:before {\n  content: \"\\e945\";\n}\n.material-icons.drive_eta:before {\n  content: \"\\e613\";\n}\n.material-icons.drive_file_move:before {\n  content: \"\\e675\";\n}\n.material-icons.drive_file_move_outline:before {\n  content: \"\\e9a1\";\n}\n.material-icons.drive_file_rename_outline:before {\n  content: \"\\e9a2\";\n}\n.material-icons.drive_folder_upload:before {\n  content: \"\\e9a3\";\n}\n.material-icons.dry:before {\n  content: \"\\f1b3\";\n}\n.material-icons.dry_cleaning:before {\n  content: \"\\ea58\";\n}\n.material-icons.duo:before {\n  content: \"\\e9a5\";\n}\n.material-icons.dvr:before {\n  content: \"\\e1b2\";\n}\n.material-icons.dynamic_feed:before {\n  content: \"\\ea14\";\n}\n.material-icons.dynamic_form:before {\n  content: \"\\f1bf\";\n}\n.material-icons.east:before {\n  content: \"\\f1df\";\n}\n.material-icons.eco:before {\n  content: \"\\ea35\";\n}\n.material-icons.edit:before {\n  content: \"\\e3c9\";\n}\n.material-icons.edit_attributes:before {\n  content: \"\\e578\";\n}\n.material-icons.edit_location:before {\n  content: \"\\e568\";\n}\n.material-icons.edit_off:before {\n  content: \"\\e950\";\n}\n.material-icons.edit_road:before {\n  content: \"\\ef4d\";\n}\n.material-icons.eject:before {\n  content: \"\\e8fb\";\n}\n.material-icons.elderly:before {\n  content: \"\\f21a\";\n}\n.material-icons.electric_bike:before {\n  content: \"\\eb1b\";\n}\n.material-icons.electric_car:before {\n  content: \"\\eb1c\";\n}\n.material-icons.electric_moped:before {\n  content: \"\\eb1d\";\n}\n.material-icons.electric_rickshaw:before {\n  content: \"\\eb1e\";\n}\n.material-icons.electric_scooter:before {\n  content: \"\\eb1f\";\n}\n.material-icons.electrical_services:before {\n  content: \"\\f102\";\n}\n.material-icons.elevator:before {\n  content: \"\\f1a0\";\n}\n.material-icons.email:before {\n  content: \"\\e0be\";\n}\n.material-icons.emoji_emotions:before {\n  content: \"\\ea22\";\n}\n.material-icons.emoji_events:before {\n  content: \"\\ea23\";\n}\n.material-icons.emoji_flags:before {\n  content: \"\\ea1a\";\n}\n.material-icons.emoji_food_beverage:before {\n  content: \"\\ea1b\";\n}\n.material-icons.emoji_nature:before {\n  content: \"\\ea1c\";\n}\n.material-icons.emoji_objects:before {\n  content: \"\\ea24\";\n}\n.material-icons.emoji_people:before {\n  content: \"\\ea1d\";\n}\n.material-icons.emoji_symbols:before {\n  content: \"\\ea1e\";\n}\n.material-icons.emoji_transportation:before {\n  content: \"\\ea1f\";\n}\n.material-icons.engineering:before {\n  content: \"\\ea3d\";\n}\n.material-icons.enhance_photo_translate:before {\n  content: \"\\e8fc\";\n}\n.material-icons.enhanced_encryption:before {\n  content: \"\\e63f\";\n}\n.material-icons.equalizer:before {\n  content: \"\\e01d\";\n}\n.material-icons.error:before {\n  content: \"\\e000\";\n}\n.material-icons.error_outline:before {\n  content: \"\\e001\";\n}\n.material-icons.escalator:before {\n  content: \"\\f1a1\";\n}\n.material-icons.escalator_warning:before {\n  content: \"\\f1ac\";\n}\n.material-icons.euro:before {\n  content: \"\\ea15\";\n}\n.material-icons.euro_symbol:before {\n  content: \"\\e926\";\n}\n.material-icons.ev_station:before {\n  content: \"\\e56d\";\n}\n.material-icons.event:before {\n  content: \"\\e878\";\n}\n.material-icons.event_available:before {\n  content: \"\\e614\";\n}\n.material-icons.event_busy:before {\n  content: \"\\e615\";\n}\n.material-icons.event_note:before {\n  content: \"\\e616\";\n}\n.material-icons.event_seat:before {\n  content: \"\\e903\";\n}\n.material-icons.exit_to_app:before {\n  content: \"\\e879\";\n}\n.material-icons.expand:before {\n  content: \"\\e94f\";\n}\n.material-icons.expand_less:before {\n  content: \"\\e5ce\";\n}\n.material-icons.expand_more:before {\n  content: \"\\e5cf\";\n}\n.material-icons.explicit:before {\n  content: \"\\e01e\";\n}\n.material-icons.explore:before {\n  content: \"\\e87a\";\n}\n.material-icons.explore_off:before {\n  content: \"\\e9a8\";\n}\n.material-icons.exposure:before {\n  content: \"\\e3ca\";\n}\n.material-icons.exposure_minus_1:before {\n  content: \"\\e3cb\";\n}\n.material-icons.exposure_minus_2:before {\n  content: \"\\e3cc\";\n}\n.material-icons.exposure_neg_1:before {\n  content: \"\\e3cb\";\n}\n.material-icons.exposure_neg_2:before {\n  content: \"\\e3cc\";\n}\n.material-icons.exposure_plus_1:before {\n  content: \"\\e3cd\";\n}\n.material-icons.exposure_plus_2:before {\n  content: \"\\e3ce\";\n}\n.material-icons.exposure_zero:before {\n  content: \"\\e3cf\";\n}\n.material-icons.extension:before {\n  content: \"\\e87b\";\n}\n.material-icons.face:before {\n  content: \"\\e87c\";\n}\n.material-icons.face_retouching_natural:before {\n  content: \"\\ef4e\";\n}\n.material-icons.facebook:before {\n  content: \"\\f234\";\n}\n.material-icons.fact_check:before {\n  content: \"\\f0c5\";\n}\n.material-icons.family_restroom:before {\n  content: \"\\f1a2\";\n}\n.material-icons.fast_forward:before {\n  content: \"\\e01f\";\n}\n.material-icons.fast_rewind:before {\n  content: \"\\e020\";\n}\n.material-icons.fastfood:before {\n  content: \"\\e57a\";\n}\n.material-icons.favorite:before {\n  content: \"\\e87d\";\n}\n.material-icons.favorite_border:before {\n  content: \"\\e87e\";\n}\n.material-icons.favorite_outline:before {\n  content: \"\\e87e\";\n}\n.material-icons.featured_play_list:before {\n  content: \"\\e06d\";\n}\n.material-icons.featured_video:before {\n  content: \"\\e06e\";\n}\n.material-icons.feedback:before {\n  content: \"\\e87f\";\n}\n.material-icons.fence:before {\n  content: \"\\f1f6\";\n}\n.material-icons.festival:before {\n  content: \"\\ea68\";\n}\n.material-icons.fiber_dvr:before {\n  content: \"\\e05d\";\n}\n.material-icons.fiber_manual_record:before {\n  content: \"\\e061\";\n}\n.material-icons.fiber_new:before {\n  content: \"\\e05e\";\n}\n.material-icons.fiber_pin:before {\n  content: \"\\e06a\";\n}\n.material-icons.fiber_smart_record:before {\n  content: \"\\e062\";\n}\n.material-icons.file_copy:before {\n  content: \"\\e173\";\n}\n.material-icons.file_download:before {\n  content: \"\\e2c4\";\n}\n.material-icons.file_download_done:before {\n  content: \"\\e9aa\";\n}\n.material-icons.file_present:before {\n  content: \"\\ea0e\";\n}\n.material-icons.file_upload:before {\n  content: \"\\e2c6\";\n}\n.material-icons.filter:before {\n  content: \"\\e3d3\";\n}\n.material-icons.filter_1:before {\n  content: \"\\e3d0\";\n}\n.material-icons.filter_2:before {\n  content: \"\\e3d1\";\n}\n.material-icons.filter_3:before {\n  content: \"\\e3d2\";\n}\n.material-icons.filter_4:before {\n  content: \"\\e3d4\";\n}\n.material-icons.filter_5:before {\n  content: \"\\e3d5\";\n}\n.material-icons.filter_6:before {\n  content: \"\\e3d6\";\n}\n.material-icons.filter_7:before {\n  content: \"\\e3d7\";\n}\n.material-icons.filter_8:before {\n  content: \"\\e3d8\";\n}\n.material-icons.filter_9:before {\n  content: \"\\e3d9\";\n}\n.material-icons.filter_9_plus:before {\n  content: \"\\e3da\";\n}\n.material-icons.filter_alt:before {\n  content: \"\\ef4f\";\n}\n.material-icons.filter_b_and_w:before {\n  content: \"\\e3db\";\n}\n.material-icons.filter_center_focus:before {\n  content: \"\\e3dc\";\n}\n.material-icons.filter_drama:before {\n  content: \"\\e3dd\";\n}\n.material-icons.filter_frames:before {\n  content: \"\\e3de\";\n}\n.material-icons.filter_hdr:before {\n  content: \"\\e3df\";\n}\n.material-icons.filter_list:before {\n  content: \"\\e152\";\n}\n.material-icons.filter_list_alt:before {\n  content: \"\\e94e\";\n}\n.material-icons.filter_none:before {\n  content: \"\\e3e0\";\n}\n.material-icons.filter_tilt_shift:before {\n  content: \"\\e3e2\";\n}\n.material-icons.filter_vintage:before {\n  content: \"\\e3e3\";\n}\n.material-icons.find_in_page:before {\n  content: \"\\e880\";\n}\n.material-icons.find_replace:before {\n  content: \"\\e881\";\n}\n.material-icons.fingerprint:before {\n  content: \"\\e90d\";\n}\n.material-icons.fire_extinguisher:before {\n  content: \"\\f1d8\";\n}\n.material-icons.fire_hydrant:before {\n  content: \"\\f1a3\";\n}\n.material-icons.fireplace:before {\n  content: \"\\ea43\";\n}\n.material-icons.first_page:before {\n  content: \"\\e5dc\";\n}\n.material-icons.fit_screen:before {\n  content: \"\\ea10\";\n}\n.material-icons.fitness_center:before {\n  content: \"\\eb43\";\n}\n.material-icons.flag:before {\n  content: \"\\e153\";\n}\n.material-icons.flaky:before {\n  content: \"\\ef50\";\n}\n.material-icons.flare:before {\n  content: \"\\e3e4\";\n}\n.material-icons.flash_auto:before {\n  content: \"\\e3e5\";\n}\n.material-icons.flash_off:before {\n  content: \"\\e3e6\";\n}\n.material-icons.flash_on:before {\n  content: \"\\e3e7\";\n}\n.material-icons.flight:before {\n  content: \"\\e539\";\n}\n.material-icons.flight_land:before {\n  content: \"\\e904\";\n}\n.material-icons.flight_takeoff:before {\n  content: \"\\e905\";\n}\n.material-icons.flip:before {\n  content: \"\\e3e8\";\n}\n.material-icons.flip_camera_android:before {\n  content: \"\\ea37\";\n}\n.material-icons.flip_camera_ios:before {\n  content: \"\\ea38\";\n}\n.material-icons.flip_to_back:before {\n  content: \"\\e882\";\n}\n.material-icons.flip_to_front:before {\n  content: \"\\e883\";\n}\n.material-icons.folder:before {\n  content: \"\\e2c7\";\n}\n.material-icons.folder_open:before {\n  content: \"\\e2c8\";\n}\n.material-icons.folder_shared:before {\n  content: \"\\e2c9\";\n}\n.material-icons.folder_special:before {\n  content: \"\\e617\";\n}\n.material-icons.follow_the_signs:before {\n  content: \"\\f222\";\n}\n.material-icons.font_download:before {\n  content: \"\\e167\";\n}\n.material-icons.food_bank:before {\n  content: \"\\f1f2\";\n}\n.material-icons.format_align_center:before {\n  content: \"\\e234\";\n}\n.material-icons.format_align_justify:before {\n  content: \"\\e235\";\n}\n.material-icons.format_align_left:before {\n  content: \"\\e236\";\n}\n.material-icons.format_align_right:before {\n  content: \"\\e237\";\n}\n.material-icons.format_bold:before {\n  content: \"\\e238\";\n}\n.material-icons.format_clear:before {\n  content: \"\\e239\";\n}\n.material-icons.format_color_fill:before {\n  content: \"\\e23a\";\n}\n.material-icons.format_color_reset:before {\n  content: \"\\e23b\";\n}\n.material-icons.format_color_text:before {\n  content: \"\\e23c\";\n}\n.material-icons.format_indent_decrease:before {\n  content: \"\\e23d\";\n}\n.material-icons.format_indent_increase:before {\n  content: \"\\e23e\";\n}\n.material-icons.format_italic:before {\n  content: \"\\e23f\";\n}\n.material-icons.format_line_spacing:before {\n  content: \"\\e240\";\n}\n.material-icons.format_list_bulleted:before {\n  content: \"\\e241\";\n}\n.material-icons.format_list_numbered:before {\n  content: \"\\e242\";\n}\n.material-icons.format_list_numbered_rtl:before {\n  content: \"\\e267\";\n}\n.material-icons.format_paint:before {\n  content: \"\\e243\";\n}\n.material-icons.format_quote:before {\n  content: \"\\e244\";\n}\n.material-icons.format_shapes:before {\n  content: \"\\e25e\";\n}\n.material-icons.format_size:before {\n  content: \"\\e245\";\n}\n.material-icons.format_strikethrough:before {\n  content: \"\\e246\";\n}\n.material-icons.format_textdirection_l_to_r:before {\n  content: \"\\e247\";\n}\n.material-icons.format_textdirection_r_to_l:before {\n  content: \"\\e248\";\n}\n.material-icons.format_underline:before {\n  content: \"\\e249\";\n}\n.material-icons.format_underlined:before {\n  content: \"\\e249\";\n}\n.material-icons.forum:before {\n  content: \"\\e0bf\";\n}\n.material-icons.forward:before {\n  content: \"\\e154\";\n}\n.material-icons.forward_10:before {\n  content: \"\\e056\";\n}\n.material-icons.forward_30:before {\n  content: \"\\e057\";\n}\n.material-icons.forward_5:before {\n  content: \"\\e058\";\n}\n.material-icons.forward_to_inbox:before {\n  content: \"\\f187\";\n}\n.material-icons.foundation:before {\n  content: \"\\f200\";\n}\n.material-icons.free_breakfast:before {\n  content: \"\\eb44\";\n}\n.material-icons.fullscreen:before {\n  content: \"\\e5d0\";\n}\n.material-icons.fullscreen_exit:before {\n  content: \"\\e5d1\";\n}\n.material-icons.functions:before {\n  content: \"\\e24a\";\n}\n.material-icons.g_translate:before {\n  content: \"\\e927\";\n}\n.material-icons.gamepad:before {\n  content: \"\\e30f\";\n}\n.material-icons.games:before {\n  content: \"\\e021\";\n}\n.material-icons.gavel:before {\n  content: \"\\e90e\";\n}\n.material-icons.gesture:before {\n  content: \"\\e155\";\n}\n.material-icons.get_app:before {\n  content: \"\\e884\";\n}\n.material-icons.gif:before {\n  content: \"\\e908\";\n}\n.material-icons.goat:before {\n  content: \"\\ebff\";\n}\n.material-icons.golf_course:before {\n  content: \"\\eb45\";\n}\n.material-icons.gps_fixed:before {\n  content: \"\\e1b3\";\n}\n.material-icons.gps_not_fixed:before {\n  content: \"\\e1b4\";\n}\n.material-icons.gps_off:before {\n  content: \"\\e1b5\";\n}\n.material-icons.grade:before {\n  content: \"\\e885\";\n}\n.material-icons.gradient:before {\n  content: \"\\e3e9\";\n}\n.material-icons.grading:before {\n  content: \"\\ea4f\";\n}\n.material-icons.grain:before {\n  content: \"\\e3ea\";\n}\n.material-icons.graphic_eq:before {\n  content: \"\\e1b8\";\n}\n.material-icons.grass:before {\n  content: \"\\f205\";\n}\n.material-icons.grid_off:before {\n  content: \"\\e3eb\";\n}\n.material-icons.grid_on:before {\n  content: \"\\e3ec\";\n}\n.material-icons.grid_view:before {\n  content: \"\\e9b0\";\n}\n.material-icons.group:before {\n  content: \"\\e7ef\";\n}\n.material-icons.group_add:before {\n  content: \"\\e7f0\";\n}\n.material-icons.group_work:before {\n  content: \"\\e886\";\n}\n.material-icons.groups:before {\n  content: \"\\f233\";\n}\n.material-icons.hail:before {\n  content: \"\\e9b1\";\n}\n.material-icons.handyman:before {\n  content: \"\\f10b\";\n}\n.material-icons.hardware:before {\n  content: \"\\ea59\";\n}\n.material-icons.hd:before {\n  content: \"\\e052\";\n}\n.material-icons.hdr_enhanced_select:before {\n  content: \"\\ef51\";\n}\n.material-icons.hdr_off:before {\n  content: \"\\e3ed\";\n}\n.material-icons.hdr_on:before {\n  content: \"\\e3ee\";\n}\n.material-icons.hdr_strong:before {\n  content: \"\\e3f1\";\n}\n.material-icons.hdr_weak:before {\n  content: \"\\e3f2\";\n}\n.material-icons.headset:before {\n  content: \"\\e310\";\n}\n.material-icons.headset_mic:before {\n  content: \"\\e311\";\n}\n.material-icons.headset_off:before {\n  content: \"\\e33a\";\n}\n.material-icons.healing:before {\n  content: \"\\e3f3\";\n}\n.material-icons.hearing:before {\n  content: \"\\e023\";\n}\n.material-icons.hearing_disabled:before {\n  content: \"\\f104\";\n}\n.material-icons.height:before {\n  content: \"\\ea16\";\n}\n.material-icons.help:before {\n  content: \"\\e887\";\n}\n.material-icons.help_center:before {\n  content: \"\\f1c0\";\n}\n.material-icons.help_outline:before {\n  content: \"\\e8fd\";\n}\n.material-icons.high_quality:before {\n  content: \"\\e024\";\n}\n.material-icons.highlight:before {\n  content: \"\\e25f\";\n}\n.material-icons.highlight_alt:before {\n  content: \"\\ef52\";\n}\n.material-icons.highlight_off:before {\n  content: \"\\e888\";\n}\n.material-icons.highlight_remove:before {\n  content: \"\\e888\";\n}\n.material-icons.history:before {\n  content: \"\\e889\";\n}\n.material-icons.history_edu:before {\n  content: \"\\ea3e\";\n}\n.material-icons.history_toggle_off:before {\n  content: \"\\f17d\";\n}\n.material-icons.home:before {\n  content: \"\\e88a\";\n}\n.material-icons.home_filled:before {\n  content: \"\\e9b2\";\n}\n.material-icons.home_repair_service:before {\n  content: \"\\f100\";\n}\n.material-icons.home_work:before {\n  content: \"\\ea09\";\n}\n.material-icons.horizontal_distribute:before {\n  content: \"\\e014\";\n}\n.material-icons.horizontal_rule:before {\n  content: \"\\f108\";\n}\n.material-icons.horizontal_split:before {\n  content: \"\\e947\";\n}\n.material-icons.hot_tub:before {\n  content: \"\\eb46\";\n}\n.material-icons.hotel:before {\n  content: \"\\e53a\";\n}\n.material-icons.hourglass_bottom:before {\n  content: \"\\ea5c\";\n}\n.material-icons.hourglass_disabled:before {\n  content: \"\\ef53\";\n}\n.material-icons.hourglass_empty:before {\n  content: \"\\e88b\";\n}\n.material-icons.hourglass_full:before {\n  content: \"\\e88c\";\n}\n.material-icons.hourglass_top:before {\n  content: \"\\ea5b\";\n}\n.material-icons.house:before {\n  content: \"\\ea44\";\n}\n.material-icons.house_siding:before {\n  content: \"\\f202\";\n}\n.material-icons.how_to_reg:before {\n  content: \"\\e174\";\n}\n.material-icons.how_to_vote:before {\n  content: \"\\e175\";\n}\n.material-icons.http:before {\n  content: \"\\e902\";\n}\n.material-icons.https:before {\n  content: \"\\e88d\";\n}\n.material-icons.hvac:before {\n  content: \"\\f10e\";\n}\n.material-icons.icecream:before {\n  content: \"\\ea69\";\n}\n.material-icons.image:before {\n  content: \"\\e3f4\";\n}\n.material-icons.image_aspect_ratio:before {\n  content: \"\\e3f5\";\n}\n.material-icons.image_not_supported:before {\n  content: \"\\f116\";\n}\n.material-icons.image_search:before {\n  content: \"\\e43f\";\n}\n.material-icons.imagesearch_roller:before {\n  content: \"\\e9b4\";\n}\n.material-icons.import_contacts:before {\n  content: \"\\e0e0\";\n}\n.material-icons.import_export:before {\n  content: \"\\e0c3\";\n}\n.material-icons.important_devices:before {\n  content: \"\\e912\";\n}\n.material-icons.inbox:before {\n  content: \"\\e156\";\n}\n.material-icons.indeterminate_check_box:before {\n  content: \"\\e909\";\n}\n.material-icons.info:before {\n  content: \"\\e88e\";\n}\n.material-icons.info_outline:before {\n  content: \"\\e88f\";\n}\n.material-icons.input:before {\n  content: \"\\e890\";\n}\n.material-icons.insert_chart:before {\n  content: \"\\e24b\";\n}\n.material-icons.insert_chart_outlined:before {\n  content: \"\\e26a\";\n}\n.material-icons.insert_comment:before {\n  content: \"\\e24c\";\n}\n.material-icons.insert_drive_file:before {\n  content: \"\\e24d\";\n}\n.material-icons.insert_emoticon:before {\n  content: \"\\e24e\";\n}\n.material-icons.insert_invitation:before {\n  content: \"\\e24f\";\n}\n.material-icons.insert_link:before {\n  content: \"\\e250\";\n}\n.material-icons.insert_photo:before {\n  content: \"\\e251\";\n}\n.material-icons.insights:before {\n  content: \"\\f092\";\n}\n.material-icons.integration_instructions:before {\n  content: \"\\ef54\";\n}\n.material-icons.inventory:before {\n  content: \"\\e179\";\n}\n.material-icons.invert_colors:before {\n  content: \"\\e891\";\n}\n.material-icons.invert_colors_off:before {\n  content: \"\\e0c4\";\n}\n.material-icons.invert_colors_on:before {\n  content: \"\\e891\";\n}\n.material-icons.ios_share:before {\n  content: \"\\e6b8\";\n}\n.material-icons.iso:before {\n  content: \"\\e3f6\";\n}\n.material-icons.keyboard:before {\n  content: \"\\e312\";\n}\n.material-icons.keyboard_arrow_down:before {\n  content: \"\\e313\";\n}\n.material-icons.keyboard_arrow_left:before {\n  content: \"\\e314\";\n}\n.material-icons.keyboard_arrow_right:before {\n  content: \"\\e315\";\n}\n.material-icons.keyboard_arrow_up:before {\n  content: \"\\e316\";\n}\n.material-icons.keyboard_backspace:before {\n  content: \"\\e317\";\n}\n.material-icons.keyboard_capslock:before {\n  content: \"\\e318\";\n}\n.material-icons.keyboard_control:before {\n  content: \"\\e5d3\";\n}\n.material-icons.keyboard_hide:before {\n  content: \"\\e31a\";\n}\n.material-icons.keyboard_return:before {\n  content: \"\\e31b\";\n}\n.material-icons.keyboard_tab:before {\n  content: \"\\e31c\";\n}\n.material-icons.keyboard_voice:before {\n  content: \"\\e31d\";\n}\n.material-icons.king_bed:before {\n  content: \"\\ea45\";\n}\n.material-icons.kitchen:before {\n  content: \"\\eb47\";\n}\n.material-icons.label:before {\n  content: \"\\e892\";\n}\n.material-icons.label_important:before {\n  content: \"\\e937\";\n}\n.material-icons.label_important_outline:before {\n  content: \"\\e948\";\n}\n.material-icons.label_off:before {\n  content: \"\\e9b6\";\n}\n.material-icons.label_outline:before {\n  content: \"\\e893\";\n}\n.material-icons.landscape:before {\n  content: \"\\e3f7\";\n}\n.material-icons.language:before {\n  content: \"\\e894\";\n}\n.material-icons.laptop:before {\n  content: \"\\e31e\";\n}\n.material-icons.laptop_chromebook:before {\n  content: \"\\e31f\";\n}\n.material-icons.laptop_mac:before {\n  content: \"\\e320\";\n}\n.material-icons.laptop_windows:before {\n  content: \"\\e321\";\n}\n.material-icons.last_page:before {\n  content: \"\\e5dd\";\n}\n.material-icons.launch:before {\n  content: \"\\e895\";\n}\n.material-icons.layers:before {\n  content: \"\\e53b\";\n}\n.material-icons.layers_clear:before {\n  content: \"\\e53c\";\n}\n.material-icons.leaderboard:before {\n  content: \"\\f20c\";\n}\n.material-icons.leak_add:before {\n  content: \"\\e3f8\";\n}\n.material-icons.leak_remove:before {\n  content: \"\\e3f9\";\n}\n.material-icons.leave_bags_at_home:before {\n  content: \"\\f21b\";\n}\n.material-icons.legend_toggle:before {\n  content: \"\\f11b\";\n}\n.material-icons.lens:before {\n  content: \"\\e3fa\";\n}\n.material-icons.library_add:before {\n  content: \"\\e02e\";\n}\n.material-icons.library_add_check:before {\n  content: \"\\e9b7\";\n}\n.material-icons.library_books:before {\n  content: \"\\e02f\";\n}\n.material-icons.library_music:before {\n  content: \"\\e030\";\n}\n.material-icons.lightbulb:before {\n  content: \"\\e0f0\";\n}\n.material-icons.lightbulb_outline:before {\n  content: \"\\e90f\";\n}\n.material-icons.line_style:before {\n  content: \"\\e919\";\n}\n.material-icons.line_weight:before {\n  content: \"\\e91a\";\n}\n.material-icons.linear_scale:before {\n  content: \"\\e260\";\n}\n.material-icons.link:before {\n  content: \"\\e157\";\n}\n.material-icons.link_off:before {\n  content: \"\\e16f\";\n}\n.material-icons.linked_camera:before {\n  content: \"\\e438\";\n}\n.material-icons.liquor:before {\n  content: \"\\ea60\";\n}\n.material-icons.list:before {\n  content: \"\\e896\";\n}\n.material-icons.list_alt:before {\n  content: \"\\e0ee\";\n}\n.material-icons.live_help:before {\n  content: \"\\e0c6\";\n}\n.material-icons.live_tv:before {\n  content: \"\\e639\";\n}\n.material-icons.local_activity:before {\n  content: \"\\e53f\";\n}\n.material-icons.local_airport:before {\n  content: \"\\e53d\";\n}\n.material-icons.local_atm:before {\n  content: \"\\e53e\";\n}\n.material-icons.local_attraction:before {\n  content: \"\\e53f\";\n}\n.material-icons.local_bar:before {\n  content: \"\\e540\";\n}\n.material-icons.local_cafe:before {\n  content: \"\\e541\";\n}\n.material-icons.local_car_wash:before {\n  content: \"\\e542\";\n}\n.material-icons.local_convenience_store:before {\n  content: \"\\e543\";\n}\n.material-icons.local_dining:before {\n  content: \"\\e556\";\n}\n.material-icons.local_drink:before {\n  content: \"\\e544\";\n}\n.material-icons.local_fire_department:before {\n  content: \"\\ef55\";\n}\n.material-icons.local_florist:before {\n  content: \"\\e545\";\n}\n.material-icons.local_gas_station:before {\n  content: \"\\e546\";\n}\n.material-icons.local_grocery_store:before {\n  content: \"\\e547\";\n}\n.material-icons.local_hospital:before {\n  content: \"\\e548\";\n}\n.material-icons.local_hotel:before {\n  content: \"\\e549\";\n}\n.material-icons.local_laundry_service:before {\n  content: \"\\e54a\";\n}\n.material-icons.local_library:before {\n  content: \"\\e54b\";\n}\n.material-icons.local_mall:before {\n  content: \"\\e54c\";\n}\n.material-icons.local_movies:before {\n  content: \"\\e54d\";\n}\n.material-icons.local_offer:before {\n  content: \"\\e54e\";\n}\n.material-icons.local_parking:before {\n  content: \"\\e54f\";\n}\n.material-icons.local_pharmacy:before {\n  content: \"\\e550\";\n}\n.material-icons.local_phone:before {\n  content: \"\\e551\";\n}\n.material-icons.local_pizza:before {\n  content: \"\\e552\";\n}\n.material-icons.local_play:before {\n  content: \"\\e553\";\n}\n.material-icons.local_police:before {\n  content: \"\\ef56\";\n}\n.material-icons.local_post_office:before {\n  content: \"\\e554\";\n}\n.material-icons.local_print_shop:before {\n  content: \"\\e555\";\n}\n.material-icons.local_printshop:before {\n  content: \"\\e555\";\n}\n.material-icons.local_restaurant:before {\n  content: \"\\e556\";\n}\n.material-icons.local_see:before {\n  content: \"\\e557\";\n}\n.material-icons.local_shipping:before {\n  content: \"\\e558\";\n}\n.material-icons.local_taxi:before {\n  content: \"\\e559\";\n}\n.material-icons.location_city:before {\n  content: \"\\e7f1\";\n}\n.material-icons.location_disabled:before {\n  content: \"\\e1b6\";\n}\n.material-icons.location_history:before {\n  content: \"\\e55a\";\n}\n.material-icons.location_off:before {\n  content: \"\\e0c7\";\n}\n.material-icons.location_on:before {\n  content: \"\\e0c8\";\n}\n.material-icons.location_pin:before {\n  content: \"\\f1db\";\n}\n.material-icons.location_searching:before {\n  content: \"\\e1b7\";\n}\n.material-icons.lock:before {\n  content: \"\\e897\";\n}\n.material-icons.lock_clock:before {\n  content: \"\\ef57\";\n}\n.material-icons.lock_open:before {\n  content: \"\\e898\";\n}\n.material-icons.lock_outline:before {\n  content: \"\\e899\";\n}\n.material-icons.login:before {\n  content: \"\\ea77\";\n}\n.material-icons.logout:before {\n  content: \"\\e9ba\";\n}\n.material-icons.looks:before {\n  content: \"\\e3fc\";\n}\n.material-icons.looks_3:before {\n  content: \"\\e3fb\";\n}\n.material-icons.looks_4:before {\n  content: \"\\e3fd\";\n}\n.material-icons.looks_5:before {\n  content: \"\\e3fe\";\n}\n.material-icons.looks_6:before {\n  content: \"\\e3ff\";\n}\n.material-icons.looks_one:before {\n  content: \"\\e400\";\n}\n.material-icons.looks_two:before {\n  content: \"\\e401\";\n}\n.material-icons.loop:before {\n  content: \"\\e028\";\n}\n.material-icons.loupe:before {\n  content: \"\\e402\";\n}\n.material-icons.low_priority:before {\n  content: \"\\e16d\";\n}\n.material-icons.loyalty:before {\n  content: \"\\e89a\";\n}\n.material-icons.luggage:before {\n  content: \"\\f235\";\n}\n.material-icons.lunch_dining:before {\n  content: \"\\ea61\";\n}\n.material-icons.mail:before {\n  content: \"\\e158\";\n}\n.material-icons.mail_outline:before {\n  content: \"\\e0e1\";\n}\n.material-icons.map:before {\n  content: \"\\e55b\";\n}\n.material-icons.maps_ugc:before {\n  content: \"\\ef58\";\n}\n.material-icons.margin:before {\n  content: \"\\e9bb\";\n}\n.material-icons.mark_as_unread:before {\n  content: \"\\e9bc\";\n}\n.material-icons.mark_chat_read:before {\n  content: \"\\f18b\";\n}\n.material-icons.mark_chat_unread:before {\n  content: \"\\f189\";\n}\n.material-icons.mark_email_read:before {\n  content: \"\\f18c\";\n}\n.material-icons.mark_email_unread:before {\n  content: \"\\f18a\";\n}\n.material-icons.markunread:before {\n  content: \"\\e159\";\n}\n.material-icons.markunread_mailbox:before {\n  content: \"\\e89b\";\n}\n.material-icons.masks:before {\n  content: \"\\f218\";\n}\n.material-icons.maximize:before {\n  content: \"\\e930\";\n}\n.material-icons.mediation:before {\n  content: \"\\efa7\";\n}\n.material-icons.medical_services:before {\n  content: \"\\f109\";\n}\n.material-icons.meeting_room:before {\n  content: \"\\eb4f\";\n}\n.material-icons.memory:before {\n  content: \"\\e322\";\n}\n.material-icons.menu:before {\n  content: \"\\e5d2\";\n}\n.material-icons.menu_book:before {\n  content: \"\\ea19\";\n}\n.material-icons.menu_open:before {\n  content: \"\\e9bd\";\n}\n.material-icons.merge_type:before {\n  content: \"\\e252\";\n}\n.material-icons.message:before {\n  content: \"\\e0c9\";\n}\n.material-icons.messenger:before {\n  content: \"\\e0ca\";\n}\n.material-icons.messenger_outline:before {\n  content: \"\\e0cb\";\n}\n.material-icons.mic:before {\n  content: \"\\e029\";\n}\n.material-icons.mic_external_off:before {\n  content: \"\\ef59\";\n}\n.material-icons.mic_external_on:before {\n  content: \"\\ef5a\";\n}\n.material-icons.mic_none:before {\n  content: \"\\e02a\";\n}\n.material-icons.mic_off:before {\n  content: \"\\e02b\";\n}\n.material-icons.microwave:before {\n  content: \"\\f204\";\n}\n.material-icons.military_tech:before {\n  content: \"\\ea3f\";\n}\n.material-icons.minimize:before {\n  content: \"\\e931\";\n}\n.material-icons.miscellaneous_services:before {\n  content: \"\\f10c\";\n}\n.material-icons.missed_video_call:before {\n  content: \"\\e073\";\n}\n.material-icons.mms:before {\n  content: \"\\e618\";\n}\n.material-icons.mobile_friendly:before {\n  content: \"\\e200\";\n}\n.material-icons.mobile_off:before {\n  content: \"\\e201\";\n}\n.material-icons.mobile_screen_share:before {\n  content: \"\\e0e7\";\n}\n.material-icons.mode_comment:before {\n  content: \"\\e253\";\n}\n.material-icons.mode_edit:before {\n  content: \"\\e254\";\n}\n.material-icons.model_training:before {\n  content: \"\\f0cf\";\n}\n.material-icons.monetization_on:before {\n  content: \"\\e263\";\n}\n.material-icons.money:before {\n  content: \"\\e57d\";\n}\n.material-icons.money_off:before {\n  content: \"\\e25c\";\n}\n.material-icons.monitor:before {\n  content: \"\\ef5b\";\n}\n.material-icons.monochrome_photos:before {\n  content: \"\\e403\";\n}\n.material-icons.mood:before {\n  content: \"\\e7f2\";\n}\n.material-icons.mood_bad:before {\n  content: \"\\e7f3\";\n}\n.material-icons.moped:before {\n  content: \"\\eb28\";\n}\n.material-icons.more:before {\n  content: \"\\e619\";\n}\n.material-icons.more_horiz:before {\n  content: \"\\e5d3\";\n}\n.material-icons.more_time:before {\n  content: \"\\ea5d\";\n}\n.material-icons.more_vert:before {\n  content: \"\\e5d4\";\n}\n.material-icons.motion_photos_off:before {\n  content: \"\\e9c0\";\n}\n.material-icons.motion_photos_on:before {\n  content: \"\\e9c1\";\n}\n.material-icons.motion_photos_pause:before {\n  content: \"\\f227\";\n}\n.material-icons.motion_photos_paused:before {\n  content: \"\\e9c2\";\n}\n.material-icons.motorcycle:before {\n  content: \"\\e91b\";\n}\n.material-icons.mouse:before {\n  content: \"\\e323\";\n}\n.material-icons.move_to_inbox:before {\n  content: \"\\e168\";\n}\n.material-icons.movie:before {\n  content: \"\\e02c\";\n}\n.material-icons.movie_creation:before {\n  content: \"\\e404\";\n}\n.material-icons.movie_filter:before {\n  content: \"\\e43a\";\n}\n.material-icons.mp:before {\n  content: \"\\e9c3\";\n}\n.material-icons.multiline_chart:before {\n  content: \"\\e6df\";\n}\n.material-icons.multiple_stop:before {\n  content: \"\\f1b9\";\n}\n.material-icons.multitrack_audio:before {\n  content: \"\\e1b8\";\n}\n.material-icons.museum:before {\n  content: \"\\ea36\";\n}\n.material-icons.music_note:before {\n  content: \"\\e405\";\n}\n.material-icons.music_off:before {\n  content: \"\\e440\";\n}\n.material-icons.music_video:before {\n  content: \"\\e063\";\n}\n.material-icons.my_library_add:before {\n  content: \"\\e02e\";\n}\n.material-icons.my_library_books:before {\n  content: \"\\e02f\";\n}\n.material-icons.my_library_music:before {\n  content: \"\\e030\";\n}\n.material-icons.my_location:before {\n  content: \"\\e55c\";\n}\n.material-icons.nat:before {\n  content: \"\\ef5c\";\n}\n.material-icons.nature:before {\n  content: \"\\e406\";\n}\n.material-icons.nature_people:before {\n  content: \"\\e407\";\n}\n.material-icons.navigate_before:before {\n  content: \"\\e408\";\n}\n.material-icons.navigate_next:before {\n  content: \"\\e409\";\n}\n.material-icons.navigation:before {\n  content: \"\\e55d\";\n}\n.material-icons.near_me:before {\n  content: \"\\e569\";\n}\n.material-icons.near_me_disabled:before {\n  content: \"\\f1ef\";\n}\n.material-icons.network_cell:before {\n  content: \"\\e1b9\";\n}\n.material-icons.network_check:before {\n  content: \"\\e640\";\n}\n.material-icons.network_locked:before {\n  content: \"\\e61a\";\n}\n.material-icons.network_wifi:before {\n  content: \"\\e1ba\";\n}\n.material-icons.new_releases:before {\n  content: \"\\e031\";\n}\n.material-icons.next_plan:before {\n  content: \"\\ef5d\";\n}\n.material-icons.next_week:before {\n  content: \"\\e16a\";\n}\n.material-icons.nfc:before {\n  content: \"\\e1bb\";\n}\n.material-icons.night_shelter:before {\n  content: \"\\f1f1\";\n}\n.material-icons.nightlife:before {\n  content: \"\\ea62\";\n}\n.material-icons.nightlight_round:before {\n  content: \"\\ef5e\";\n}\n.material-icons.nights_stay:before {\n  content: \"\\ea46\";\n}\n.material-icons.no_backpack:before {\n  content: \"\\f237\";\n}\n.material-icons.no_cell:before {\n  content: \"\\f1a4\";\n}\n.material-icons.no_drinks:before {\n  content: \"\\f1a5\";\n}\n.material-icons.no_encryption:before {\n  content: \"\\e641\";\n}\n.material-icons.no_flash:before {\n  content: \"\\f1a6\";\n}\n.material-icons.no_food:before {\n  content: \"\\f1a7\";\n}\n.material-icons.no_luggage:before {\n  content: \"\\f23b\";\n}\n.material-icons.no_meals:before {\n  content: \"\\f1d6\";\n}\n.material-icons.no_meals_ouline:before {\n  content: \"\\f229\";\n}\n.material-icons.no_meeting_room:before {\n  content: \"\\eb4e\";\n}\n.material-icons.no_photography:before {\n  content: \"\\f1a8\";\n}\n.material-icons.no_sim:before {\n  content: \"\\e0cc\";\n}\n.material-icons.no_stroller:before {\n  content: \"\\f1af\";\n}\n.material-icons.no_transfer:before {\n  content: \"\\f1d5\";\n}\n.material-icons.north:before {\n  content: \"\\f1e0\";\n}\n.material-icons.north_east:before {\n  content: \"\\f1e1\";\n}\n.material-icons.north_west:before {\n  content: \"\\f1e2\";\n}\n.material-icons.not_accessible:before {\n  content: \"\\f0fe\";\n}\n.material-icons.not_interested:before {\n  content: \"\\e033\";\n}\n.material-icons.not_listed_location:before {\n  content: \"\\e575\";\n}\n.material-icons.not_started:before {\n  content: \"\\f0d1\";\n}\n.material-icons.note:before {\n  content: \"\\e06f\";\n}\n.material-icons.note_add:before {\n  content: \"\\e89c\";\n}\n.material-icons.notes:before {\n  content: \"\\e26c\";\n}\n.material-icons.notification_important:before {\n  content: \"\\e004\";\n}\n.material-icons.notifications:before {\n  content: \"\\e7f4\";\n}\n.material-icons.notifications_active:before {\n  content: \"\\e7f7\";\n}\n.material-icons.notifications_none:before {\n  content: \"\\e7f5\";\n}\n.material-icons.notifications_off:before {\n  content: \"\\e7f6\";\n}\n.material-icons.notifications_on:before {\n  content: \"\\e7f7\";\n}\n.material-icons.notifications_paused:before {\n  content: \"\\e7f8\";\n}\n.material-icons.now_wallpaper:before {\n  content: \"\\e1bc\";\n}\n.material-icons.now_widgets:before {\n  content: \"\\e1bd\";\n}\n.material-icons.offline_bolt:before {\n  content: \"\\e932\";\n}\n.material-icons.offline_pin:before {\n  content: \"\\e90a\";\n}\n.material-icons.offline_share:before {\n  content: \"\\e9c5\";\n}\n.material-icons.ondemand_video:before {\n  content: \"\\e63a\";\n}\n.material-icons.online_prediction:before {\n  content: \"\\f0eb\";\n}\n.material-icons.opacity:before {\n  content: \"\\e91c\";\n}\n.material-icons.open_in_browser:before {\n  content: \"\\e89d\";\n}\n.material-icons.open_in_full:before {\n  content: \"\\f1ce\";\n}\n.material-icons.open_in_new:before {\n  content: \"\\e89e\";\n}\n.material-icons.open_with:before {\n  content: \"\\e89f\";\n}\n.material-icons.outbond:before {\n  content: \"\\f228\";\n}\n.material-icons.outbox:before {\n  content: \"\\ef5f\";\n}\n.material-icons.outdoor_grill:before {\n  content: \"\\ea47\";\n}\n.material-icons.outgoing_mail:before {\n  content: \"\\f0d2\";\n}\n.material-icons.outlet:before {\n  content: \"\\f1d4\";\n}\n.material-icons.outlined_flag:before {\n  content: \"\\e16e\";\n}\n.material-icons.padding:before {\n  content: \"\\e9c8\";\n}\n.material-icons.pages:before {\n  content: \"\\e7f9\";\n}\n.material-icons.pageview:before {\n  content: \"\\e8a0\";\n}\n.material-icons.palette:before {\n  content: \"\\e40a\";\n}\n.material-icons.pan_tool:before {\n  content: \"\\e925\";\n}\n.material-icons.panorama:before {\n  content: \"\\e40b\";\n}\n.material-icons.panorama_fish_eye:before {\n  content: \"\\e40c\";\n}\n.material-icons.panorama_fisheye:before {\n  content: \"\\e40c\";\n}\n.material-icons.panorama_horizontal:before {\n  content: \"\\e40d\";\n}\n.material-icons.panorama_horizontal_select:before {\n  content: \"\\ef60\";\n}\n.material-icons.panorama_photosphere:before {\n  content: \"\\e9c9\";\n}\n.material-icons.panorama_photosphere_select:before {\n  content: \"\\e9ca\";\n}\n.material-icons.panorama_vertical:before {\n  content: \"\\e40e\";\n}\n.material-icons.panorama_vertical_select:before {\n  content: \"\\ef61\";\n}\n.material-icons.panorama_wide_angle:before {\n  content: \"\\e40f\";\n}\n.material-icons.panorama_wide_angle_select:before {\n  content: \"\\ef62\";\n}\n.material-icons.park:before {\n  content: \"\\ea63\";\n}\n.material-icons.party_mode:before {\n  content: \"\\e7fa\";\n}\n.material-icons.pause:before {\n  content: \"\\e034\";\n}\n.material-icons.pause_circle_filled:before {\n  content: \"\\e035\";\n}\n.material-icons.pause_circle_outline:before {\n  content: \"\\e036\";\n}\n.material-icons.pause_presentation:before {\n  content: \"\\e0ea\";\n}\n.material-icons.payment:before {\n  content: \"\\e8a1\";\n}\n.material-icons.payments:before {\n  content: \"\\ef63\";\n}\n.material-icons.pedal_bike:before {\n  content: \"\\eb29\";\n}\n.material-icons.pending:before {\n  content: \"\\ef64\";\n}\n.material-icons.pending_actions:before {\n  content: \"\\f1bb\";\n}\n.material-icons.people:before {\n  content: \"\\e7fb\";\n}\n.material-icons.people_alt:before {\n  content: \"\\ea21\";\n}\n.material-icons.people_outline:before {\n  content: \"\\e7fc\";\n}\n.material-icons.perm_camera_mic:before {\n  content: \"\\e8a2\";\n}\n.material-icons.perm_contact_cal:before {\n  content: \"\\e8a3\";\n}\n.material-icons.perm_contact_calendar:before {\n  content: \"\\e8a3\";\n}\n.material-icons.perm_data_setting:before {\n  content: \"\\e8a4\";\n}\n.material-icons.perm_device_info:before {\n  content: \"\\e8a5\";\n}\n.material-icons.perm_device_information:before {\n  content: \"\\e8a5\";\n}\n.material-icons.perm_identity:before {\n  content: \"\\e8a6\";\n}\n.material-icons.perm_media:before {\n  content: \"\\e8a7\";\n}\n.material-icons.perm_phone_msg:before {\n  content: \"\\e8a8\";\n}\n.material-icons.perm_scan_wifi:before {\n  content: \"\\e8a9\";\n}\n.material-icons.person:before {\n  content: \"\\e7fd\";\n}\n.material-icons.person_add:before {\n  content: \"\\e7fe\";\n}\n.material-icons.person_add_alt:before {\n  content: \"\\ea4d\";\n}\n.material-icons.person_add_alt_1:before {\n  content: \"\\ef65\";\n}\n.material-icons.person_add_disabled:before {\n  content: \"\\e9cb\";\n}\n.material-icons.person_outline:before {\n  content: \"\\e7ff\";\n}\n.material-icons.person_pin:before {\n  content: \"\\e55a\";\n}\n.material-icons.person_pin_circle:before {\n  content: \"\\e56a\";\n}\n.material-icons.person_remove:before {\n  content: \"\\ef66\";\n}\n.material-icons.person_remove_alt_1:before {\n  content: \"\\ef67\";\n}\n.material-icons.person_search:before {\n  content: \"\\f106\";\n}\n.material-icons.personal_video:before {\n  content: \"\\e63b\";\n}\n.material-icons.pest_control:before {\n  content: \"\\f0fa\";\n}\n.material-icons.pest_control_rodent:before {\n  content: \"\\f0fd\";\n}\n.material-icons.pets:before {\n  content: \"\\e91d\";\n}\n.material-icons.phone:before {\n  content: \"\\e0cd\";\n}\n.material-icons.phone_android:before {\n  content: \"\\e324\";\n}\n.material-icons.phone_bluetooth_speaker:before {\n  content: \"\\e61b\";\n}\n.material-icons.phone_callback:before {\n  content: \"\\e649\";\n}\n.material-icons.phone_disabled:before {\n  content: \"\\e9cc\";\n}\n.material-icons.phone_enabled:before {\n  content: \"\\e9cd\";\n}\n.material-icons.phone_forwarded:before {\n  content: \"\\e61c\";\n}\n.material-icons.phone_in_talk:before {\n  content: \"\\e61d\";\n}\n.material-icons.phone_iphone:before {\n  content: \"\\e325\";\n}\n.material-icons.phone_locked:before {\n  content: \"\\e61e\";\n}\n.material-icons.phone_missed:before {\n  content: \"\\e61f\";\n}\n.material-icons.phone_paused:before {\n  content: \"\\e620\";\n}\n.material-icons.phonelink:before {\n  content: \"\\e326\";\n}\n.material-icons.phonelink_erase:before {\n  content: \"\\e0db\";\n}\n.material-icons.phonelink_lock:before {\n  content: \"\\e0dc\";\n}\n.material-icons.phonelink_off:before {\n  content: \"\\e327\";\n}\n.material-icons.phonelink_ring:before {\n  content: \"\\e0dd\";\n}\n.material-icons.phonelink_setup:before {\n  content: \"\\e0de\";\n}\n.material-icons.photo:before {\n  content: \"\\e410\";\n}\n.material-icons.photo_album:before {\n  content: \"\\e411\";\n}\n.material-icons.photo_camera:before {\n  content: \"\\e412\";\n}\n.material-icons.photo_camera_back:before {\n  content: \"\\ef68\";\n}\n.material-icons.photo_camera_front:before {\n  content: \"\\ef69\";\n}\n.material-icons.photo_filter:before {\n  content: \"\\e43b\";\n}\n.material-icons.photo_library:before {\n  content: \"\\e413\";\n}\n.material-icons.photo_size_select_actual:before {\n  content: \"\\e432\";\n}\n.material-icons.photo_size_select_large:before {\n  content: \"\\e433\";\n}\n.material-icons.photo_size_select_small:before {\n  content: \"\\e434\";\n}\n.material-icons.picture_as_pdf:before {\n  content: \"\\e415\";\n}\n.material-icons.picture_in_picture:before {\n  content: \"\\e8aa\";\n}\n.material-icons.picture_in_picture_alt:before {\n  content: \"\\e911\";\n}\n.material-icons.pie_chart:before {\n  content: \"\\e6c4\";\n}\n.material-icons.pie_chart_outlined:before {\n  content: \"\\e6c5\";\n}\n.material-icons.pin_drop:before {\n  content: \"\\e55e\";\n}\n.material-icons.pivot_table_chart:before {\n  content: \"\\e9ce\";\n}\n.material-icons.place:before {\n  content: \"\\e55f\";\n}\n.material-icons.plagiarism:before {\n  content: \"\\ea5a\";\n}\n.material-icons.play_arrow:before {\n  content: \"\\e037\";\n}\n.material-icons.play_circle_fill:before {\n  content: \"\\e038\";\n}\n.material-icons.play_circle_filled:before {\n  content: \"\\e038\";\n}\n.material-icons.play_circle_outline:before {\n  content: \"\\e039\";\n}\n.material-icons.play_disabled:before {\n  content: \"\\ef6a\";\n}\n.material-icons.play_for_work:before {\n  content: \"\\e906\";\n}\n.material-icons.playlist_add:before {\n  content: \"\\e03b\";\n}\n.material-icons.playlist_add_check:before {\n  content: \"\\e065\";\n}\n.material-icons.playlist_play:before {\n  content: \"\\e05f\";\n}\n.material-icons.plumbing:before {\n  content: \"\\f107\";\n}\n.material-icons.plus_one:before {\n  content: \"\\e800\";\n}\n.material-icons.point_of_sale:before {\n  content: \"\\f17e\";\n}\n.material-icons.policy:before {\n  content: \"\\ea17\";\n}\n.material-icons.poll:before {\n  content: \"\\e801\";\n}\n.material-icons.polymer:before {\n  content: \"\\e8ab\";\n}\n.material-icons.pool:before {\n  content: \"\\eb48\";\n}\n.material-icons.portable_wifi_off:before {\n  content: \"\\e0ce\";\n}\n.material-icons.portrait:before {\n  content: \"\\e416\";\n}\n.material-icons.post_add:before {\n  content: \"\\ea20\";\n}\n.material-icons.power:before {\n  content: \"\\e63c\";\n}\n.material-icons.power_input:before {\n  content: \"\\e336\";\n}\n.material-icons.power_off:before {\n  content: \"\\e646\";\n}\n.material-icons.power_settings_new:before {\n  content: \"\\e8ac\";\n}\n.material-icons.pregnant_woman:before {\n  content: \"\\e91e\";\n}\n.material-icons.present_to_all:before {\n  content: \"\\e0df\";\n}\n.material-icons.preview:before {\n  content: \"\\f1c5\";\n}\n.material-icons.print:before {\n  content: \"\\e8ad\";\n}\n.material-icons.print_disabled:before {\n  content: \"\\e9cf\";\n}\n.material-icons.priority_high:before {\n  content: \"\\e645\";\n}\n.material-icons.privacy_tip:before {\n  content: \"\\f0dc\";\n}\n.material-icons.psychology:before {\n  content: \"\\ea4a\";\n}\n.material-icons.public:before {\n  content: \"\\e80b\";\n}\n.material-icons.public_off:before {\n  content: \"\\f1ca\";\n}\n.material-icons.publish:before {\n  content: \"\\e255\";\n}\n.material-icons.published_with_changes:before {\n  content: \"\\f232\";\n}\n.material-icons.push_pin:before {\n  content: \"\\f10d\";\n}\n.material-icons.qr_code:before {\n  content: \"\\ef6b\";\n}\n.material-icons.qr_code_2:before {\n  content: \"\\e00a\";\n}\n.material-icons.qr_code_scanner:before {\n  content: \"\\f206\";\n}\n.material-icons.query_builder:before {\n  content: \"\\e8ae\";\n}\n.material-icons.question_answer:before {\n  content: \"\\e8af\";\n}\n.material-icons.queue:before {\n  content: \"\\e03c\";\n}\n.material-icons.queue_music:before {\n  content: \"\\e03d\";\n}\n.material-icons.queue_play_next:before {\n  content: \"\\e066\";\n}\n.material-icons.quick_contacts_dialer:before {\n  content: \"\\e0cf\";\n}\n.material-icons.quick_contacts_mail:before {\n  content: \"\\e0d0\";\n}\n.material-icons.quickreply:before {\n  content: \"\\ef6c\";\n}\n.material-icons.radio:before {\n  content: \"\\e03e\";\n}\n.material-icons.radio_button_checked:before {\n  content: \"\\e837\";\n}\n.material-icons.radio_button_off:before {\n  content: \"\\e836\";\n}\n.material-icons.radio_button_on:before {\n  content: \"\\e837\";\n}\n.material-icons.radio_button_unchecked:before {\n  content: \"\\e836\";\n}\n.material-icons.railway_alert:before {\n  content: \"\\e9d1\";\n}\n.material-icons.ramen_dining:before {\n  content: \"\\ea64\";\n}\n.material-icons.rate_review:before {\n  content: \"\\e560\";\n}\n.material-icons.read_more:before {\n  content: \"\\ef6d\";\n}\n.material-icons.receipt:before {\n  content: \"\\e8b0\";\n}\n.material-icons.receipt_long:before {\n  content: \"\\ef6e\";\n}\n.material-icons.recent_actors:before {\n  content: \"\\e03f\";\n}\n.material-icons.recommend:before {\n  content: \"\\e9d2\";\n}\n.material-icons.record_voice_over:before {\n  content: \"\\e91f\";\n}\n.material-icons.redeem:before {\n  content: \"\\e8b1\";\n}\n.material-icons.redo:before {\n  content: \"\\e15a\";\n}\n.material-icons.reduce_capacity:before {\n  content: \"\\f21c\";\n}\n.material-icons.refresh:before {\n  content: \"\\e5d5\";\n}\n.material-icons.remove:before {\n  content: \"\\e15b\";\n}\n.material-icons.remove_circle:before {\n  content: \"\\e15c\";\n}\n.material-icons.remove_circle_outline:before {\n  content: \"\\e15d\";\n}\n.material-icons.remove_done:before {\n  content: \"\\e9d3\";\n}\n.material-icons.remove_from_queue:before {\n  content: \"\\e067\";\n}\n.material-icons.remove_moderator:before {\n  content: \"\\e9d4\";\n}\n.material-icons.remove_red_eye:before {\n  content: \"\\e417\";\n}\n.material-icons.remove_shopping_cart:before {\n  content: \"\\e928\";\n}\n.material-icons.reorder:before {\n  content: \"\\e8fe\";\n}\n.material-icons.repeat:before {\n  content: \"\\e040\";\n}\n.material-icons.repeat_on:before {\n  content: \"\\e9d6\";\n}\n.material-icons.repeat_one:before {\n  content: \"\\e041\";\n}\n.material-icons.repeat_one_on:before {\n  content: \"\\e9d7\";\n}\n.material-icons.replay:before {\n  content: \"\\e042\";\n}\n.material-icons.replay_10:before {\n  content: \"\\e059\";\n}\n.material-icons.replay_30:before {\n  content: \"\\e05a\";\n}\n.material-icons.replay_5:before {\n  content: \"\\e05b\";\n}\n.material-icons.replay_circle_filled:before {\n  content: \"\\e9d8\";\n}\n.material-icons.reply:before {\n  content: \"\\e15e\";\n}\n.material-icons.reply_all:before {\n  content: \"\\e15f\";\n}\n.material-icons.report:before {\n  content: \"\\e160\";\n}\n.material-icons.report_off:before {\n  content: \"\\e170\";\n}\n.material-icons.report_problem:before {\n  content: \"\\e8b2\";\n}\n.material-icons.request_page:before {\n  content: \"\\f22c\";\n}\n.material-icons.request_quote:before {\n  content: \"\\f1b6\";\n}\n.material-icons.reset_tv:before {\n  content: \"\\e9d9\";\n}\n.material-icons.restaurant:before {\n  content: \"\\e56c\";\n}\n.material-icons.restaurant_menu:before {\n  content: \"\\e561\";\n}\n.material-icons.restore:before {\n  content: \"\\e8b3\";\n}\n.material-icons.restore_from_trash:before {\n  content: \"\\e938\";\n}\n.material-icons.restore_page:before {\n  content: \"\\e929\";\n}\n.material-icons.rice_bowl:before {\n  content: \"\\f1f5\";\n}\n.material-icons.ring_volume:before {\n  content: \"\\e0d1\";\n}\n.material-icons.roofing:before {\n  content: \"\\f201\";\n}\n.material-icons.room:before {\n  content: \"\\e8b4\";\n}\n.material-icons.room_preferences:before {\n  content: \"\\f1b8\";\n}\n.material-icons.room_service:before {\n  content: \"\\eb49\";\n}\n.material-icons.rotate_90_degrees_ccw:before {\n  content: \"\\e418\";\n}\n.material-icons.rotate_left:before {\n  content: \"\\e419\";\n}\n.material-icons.rotate_right:before {\n  content: \"\\e41a\";\n}\n.material-icons.rounded_corner:before {\n  content: \"\\e920\";\n}\n.material-icons.router:before {\n  content: \"\\e328\";\n}\n.material-icons.rowing:before {\n  content: \"\\e921\";\n}\n.material-icons.rss_feed:before {\n  content: \"\\e0e5\";\n}\n.material-icons.rtt:before {\n  content: \"\\e9ad\";\n}\n.material-icons.rule:before {\n  content: \"\\f1c2\";\n}\n.material-icons.rule_folder:before {\n  content: \"\\f1c9\";\n}\n.material-icons.run_circle:before {\n  content: \"\\ef6f\";\n}\n.material-icons.rv_hookup:before {\n  content: \"\\e642\";\n}\n.material-icons.sanitizer:before {\n  content: \"\\f21d\";\n}\n.material-icons.satellite:before {\n  content: \"\\e562\";\n}\n.material-icons.save:before {\n  content: \"\\e161\";\n}\n.material-icons.save_alt:before {\n  content: \"\\e171\";\n}\n.material-icons.saved_search:before {\n  content: \"\\ea11\";\n}\n.material-icons.scanner:before {\n  content: \"\\e329\";\n}\n.material-icons.scatter_plot:before {\n  content: \"\\e268\";\n}\n.material-icons.schedule:before {\n  content: \"\\e8b5\";\n}\n.material-icons.schedule_send:before {\n  content: \"\\ea0a\";\n}\n.material-icons.school:before {\n  content: \"\\e80c\";\n}\n.material-icons.science:before {\n  content: \"\\ea4b\";\n}\n.material-icons.score:before {\n  content: \"\\e269\";\n}\n.material-icons.screen_lock_landscape:before {\n  content: \"\\e1be\";\n}\n.material-icons.screen_lock_portrait:before {\n  content: \"\\e1bf\";\n}\n.material-icons.screen_lock_rotation:before {\n  content: \"\\e1c0\";\n}\n.material-icons.screen_rotation:before {\n  content: \"\\e1c1\";\n}\n.material-icons.screen_search_desktop:before {\n  content: \"\\ef70\";\n}\n.material-icons.screen_share:before {\n  content: \"\\e0e2\";\n}\n.material-icons.sd:before {\n  content: \"\\e9dd\";\n}\n.material-icons.sd_card:before {\n  content: \"\\e623\";\n}\n.material-icons.sd_storage:before {\n  content: \"\\e1c2\";\n}\n.material-icons.search:before {\n  content: \"\\e8b6\";\n}\n.material-icons.search_off:before {\n  content: \"\\ea76\";\n}\n.material-icons.security:before {\n  content: \"\\e32a\";\n}\n.material-icons.segment:before {\n  content: \"\\e94b\";\n}\n.material-icons.select_all:before {\n  content: \"\\e162\";\n}\n.material-icons.self_improvement:before {\n  content: \"\\ea78\";\n}\n.material-icons.send:before {\n  content: \"\\e163\";\n}\n.material-icons.send_and_archive:before {\n  content: \"\\ea0c\";\n}\n.material-icons.send_to_mobile:before {\n  content: \"\\f05c\";\n}\n.material-icons.sensor_door:before {\n  content: \"\\f1b5\";\n}\n.material-icons.sensor_window:before {\n  content: \"\\f1b4\";\n}\n.material-icons.sentiment_dissatisfied:before {\n  content: \"\\e811\";\n}\n.material-icons.sentiment_neutral:before {\n  content: \"\\e812\";\n}\n.material-icons.sentiment_satisfied:before {\n  content: \"\\e813\";\n}\n.material-icons.sentiment_satisfied_alt:before {\n  content: \"\\e0ed\";\n}\n.material-icons.sentiment_very_dissatisfied:before {\n  content: \"\\e814\";\n}\n.material-icons.sentiment_very_satisfied:before {\n  content: \"\\e815\";\n}\n.material-icons.set_meal:before {\n  content: \"\\f1ea\";\n}\n.material-icons.settings:before {\n  content: \"\\e8b8\";\n}\n.material-icons.settings_applications:before {\n  content: \"\\e8b9\";\n}\n.material-icons.settings_backup_restore:before {\n  content: \"\\e8ba\";\n}\n.material-icons.settings_bluetooth:before {\n  content: \"\\e8bb\";\n}\n.material-icons.settings_brightness:before {\n  content: \"\\e8bd\";\n}\n.material-icons.settings_cell:before {\n  content: \"\\e8bc\";\n}\n.material-icons.settings_display:before {\n  content: \"\\e8bd\";\n}\n.material-icons.settings_ethernet:before {\n  content: \"\\e8be\";\n}\n.material-icons.settings_input_antenna:before {\n  content: \"\\e8bf\";\n}\n.material-icons.settings_input_component:before {\n  content: \"\\e8c0\";\n}\n.material-icons.settings_input_composite:before {\n  content: \"\\e8c1\";\n}\n.material-icons.settings_input_hdmi:before {\n  content: \"\\e8c2\";\n}\n.material-icons.settings_input_svideo:before {\n  content: \"\\e8c3\";\n}\n.material-icons.settings_overscan:before {\n  content: \"\\e8c4\";\n}\n.material-icons.settings_phone:before {\n  content: \"\\e8c5\";\n}\n.material-icons.settings_power:before {\n  content: \"\\e8c6\";\n}\n.material-icons.settings_remote:before {\n  content: \"\\e8c7\";\n}\n.material-icons.settings_system_daydream:before {\n  content: \"\\e1c3\";\n}\n.material-icons.settings_voice:before {\n  content: \"\\e8c8\";\n}\n.material-icons.share:before {\n  content: \"\\e80d\";\n}\n.material-icons.shield:before {\n  content: \"\\e9e0\";\n}\n.material-icons.shop:before {\n  content: \"\\e8c9\";\n}\n.material-icons.shop_two:before {\n  content: \"\\e8ca\";\n}\n.material-icons.shopping_bag:before {\n  content: \"\\f1cc\";\n}\n.material-icons.shopping_basket:before {\n  content: \"\\e8cb\";\n}\n.material-icons.shopping_cart:before {\n  content: \"\\e8cc\";\n}\n.material-icons.short_text:before {\n  content: \"\\e261\";\n}\n.material-icons.show_chart:before {\n  content: \"\\e6e1\";\n}\n.material-icons.shuffle:before {\n  content: \"\\e043\";\n}\n.material-icons.shuffle_on:before {\n  content: \"\\e9e1\";\n}\n.material-icons.shutter_speed:before {\n  content: \"\\e43d\";\n}\n.material-icons.sick:before {\n  content: \"\\f220\";\n}\n.material-icons.signal_cellular_0_bar:before {\n  content: \"\\f0a8\";\n}\n.material-icons.signal_cellular_4_bar:before {\n  content: \"\\e1c8\";\n}\n.material-icons.signal_cellular_alt:before {\n  content: \"\\e202\";\n}\n.material-icons.signal_cellular_connected_no_internet_4_bar:before {\n  content: \"\\e1cd\";\n}\n.material-icons.signal_cellular_no_sim:before {\n  content: \"\\e1ce\";\n}\n.material-icons.signal_cellular_null:before {\n  content: \"\\e1cf\";\n}\n.material-icons.signal_cellular_off:before {\n  content: \"\\e1d0\";\n}\n.material-icons.signal_wifi_0_bar:before {\n  content: \"\\f0b0\";\n}\n.material-icons.signal_wifi_4_bar:before {\n  content: \"\\e1d8\";\n}\n.material-icons.signal_wifi_4_bar_lock:before {\n  content: \"\\e1d9\";\n}\n.material-icons.signal_wifi_off:before {\n  content: \"\\e1da\";\n}\n.material-icons.sim_card:before {\n  content: \"\\e32b\";\n}\n.material-icons.sim_card_alert:before {\n  content: \"\\e624\";\n}\n.material-icons.single_bed:before {\n  content: \"\\ea48\";\n}\n.material-icons.skip_next:before {\n  content: \"\\e044\";\n}\n.material-icons.skip_previous:before {\n  content: \"\\e045\";\n}\n.material-icons.slideshow:before {\n  content: \"\\e41b\";\n}\n.material-icons.slow_motion_video:before {\n  content: \"\\e068\";\n}\n.material-icons.smart_button:before {\n  content: \"\\f1c1\";\n}\n.material-icons.smartphone:before {\n  content: \"\\e32c\";\n}\n.material-icons.smoke_free:before {\n  content: \"\\eb4a\";\n}\n.material-icons.smoking_rooms:before {\n  content: \"\\eb4b\";\n}\n.material-icons.sms:before {\n  content: \"\\e625\";\n}\n.material-icons.sms_failed:before {\n  content: \"\\e626\";\n}\n.material-icons.snippet_folder:before {\n  content: \"\\f1c7\";\n}\n.material-icons.snooze:before {\n  content: \"\\e046\";\n}\n.material-icons.soap:before {\n  content: \"\\f1b2\";\n}\n.material-icons.sort:before {\n  content: \"\\e164\";\n}\n.material-icons.sort_by_alpha:before {\n  content: \"\\e053\";\n}\n.material-icons.source:before {\n  content: \"\\f1c4\";\n}\n.material-icons.south:before {\n  content: \"\\f1e3\";\n}\n.material-icons.south_east:before {\n  content: \"\\f1e4\";\n}\n.material-icons.south_west:before {\n  content: \"\\f1e5\";\n}\n.material-icons.spa:before {\n  content: \"\\eb4c\";\n}\n.material-icons.space_bar:before {\n  content: \"\\e256\";\n}\n.material-icons.speaker:before {\n  content: \"\\e32d\";\n}\n.material-icons.speaker_group:before {\n  content: \"\\e32e\";\n}\n.material-icons.speaker_notes:before {\n  content: \"\\e8cd\";\n}\n.material-icons.speaker_notes_off:before {\n  content: \"\\e92a\";\n}\n.material-icons.speaker_phone:before {\n  content: \"\\e0d2\";\n}\n.material-icons.speed:before {\n  content: \"\\e9e4\";\n}\n.material-icons.spellcheck:before {\n  content: \"\\e8ce\";\n}\n.material-icons.sports:before {\n  content: \"\\ea30\";\n}\n.material-icons.sports_bar:before {\n  content: \"\\f1f3\";\n}\n.material-icons.sports_baseball:before {\n  content: \"\\ea51\";\n}\n.material-icons.sports_basketball:before {\n  content: \"\\ea26\";\n}\n.material-icons.sports_cricket:before {\n  content: \"\\ea27\";\n}\n.material-icons.sports_esports:before {\n  content: \"\\ea28\";\n}\n.material-icons.sports_football:before {\n  content: \"\\ea29\";\n}\n.material-icons.sports_golf:before {\n  content: \"\\ea2a\";\n}\n.material-icons.sports_handball:before {\n  content: \"\\ea33\";\n}\n.material-icons.sports_hockey:before {\n  content: \"\\ea2b\";\n}\n.material-icons.sports_kabaddi:before {\n  content: \"\\ea34\";\n}\n.material-icons.sports_mma:before {\n  content: \"\\ea2c\";\n}\n.material-icons.sports_motorsports:before {\n  content: \"\\ea2d\";\n}\n.material-icons.sports_rugby:before {\n  content: \"\\ea2e\";\n}\n.material-icons.sports_soccer:before {\n  content: \"\\ea2f\";\n}\n.material-icons.sports_tennis:before {\n  content: \"\\ea32\";\n}\n.material-icons.sports_volleyball:before {\n  content: \"\\ea31\";\n}\n.material-icons.square_foot:before {\n  content: \"\\ea49\";\n}\n.material-icons.stacked_bar_chart:before {\n  content: \"\\e9e6\";\n}\n.material-icons.stacked_line_chart:before {\n  content: \"\\f22b\";\n}\n.material-icons.stairs:before {\n  content: \"\\f1a9\";\n}\n.material-icons.star:before {\n  content: \"\\e838\";\n}\n.material-icons.star_border:before {\n  content: \"\\e83a\";\n}\n.material-icons.star_half:before {\n  content: \"\\e839\";\n}\n.material-icons.star_outline:before {\n  content: \"\\f06f\";\n}\n.material-icons.star_rate:before {\n  content: \"\\f0ec\";\n}\n.material-icons.stars:before {\n  content: \"\\e8d0\";\n}\n.material-icons.stay_current_landscape:before {\n  content: \"\\e0d3\";\n}\n.material-icons.stay_current_portrait:before {\n  content: \"\\e0d4\";\n}\n.material-icons.stay_primary_landscape:before {\n  content: \"\\e0d5\";\n}\n.material-icons.stay_primary_portrait:before {\n  content: \"\\e0d6\";\n}\n.material-icons.sticky_note_2:before {\n  content: \"\\f1fc\";\n}\n.material-icons.stop:before {\n  content: \"\\e047\";\n}\n.material-icons.stop_circle:before {\n  content: \"\\ef71\";\n}\n.material-icons.stop_screen_share:before {\n  content: \"\\e0e3\";\n}\n.material-icons.storage:before {\n  content: \"\\e1db\";\n}\n.material-icons.store:before {\n  content: \"\\e8d1\";\n}\n.material-icons.store_mall_directory:before {\n  content: \"\\e563\";\n}\n.material-icons.storefront:before {\n  content: \"\\ea12\";\n}\n.material-icons.straighten:before {\n  content: \"\\e41c\";\n}\n.material-icons.stream:before {\n  content: \"\\e9e9\";\n}\n.material-icons.streetview:before {\n  content: \"\\e56e\";\n}\n.material-icons.strikethrough_s:before {\n  content: \"\\e257\";\n}\n.material-icons.stroller:before {\n  content: \"\\f1ae\";\n}\n.material-icons.style:before {\n  content: \"\\e41d\";\n}\n.material-icons.subdirectory_arrow_left:before {\n  content: \"\\e5d9\";\n}\n.material-icons.subdirectory_arrow_right:before {\n  content: \"\\e5da\";\n}\n.material-icons.subject:before {\n  content: \"\\e8d2\";\n}\n.material-icons.subscript:before {\n  content: \"\\f111\";\n}\n.material-icons.subscriptions:before {\n  content: \"\\e064\";\n}\n.material-icons.subtitles:before {\n  content: \"\\e048\";\n}\n.material-icons.subtitles_off:before {\n  content: \"\\ef72\";\n}\n.material-icons.subway:before {\n  content: \"\\e56f\";\n}\n.material-icons.superscript:before {\n  content: \"\\f112\";\n}\n.material-icons.supervised_user_circle:before {\n  content: \"\\e939\";\n}\n.material-icons.supervisor_account:before {\n  content: \"\\e8d3\";\n}\n.material-icons.support:before {\n  content: \"\\ef73\";\n}\n.material-icons.support_agent:before {\n  content: \"\\f0e2\";\n}\n.material-icons.surround_sound:before {\n  content: \"\\e049\";\n}\n.material-icons.swap_calls:before {\n  content: \"\\e0d7\";\n}\n.material-icons.swap_horiz:before {\n  content: \"\\e8d4\";\n}\n.material-icons.swap_horizontal_circle:before {\n  content: \"\\e933\";\n}\n.material-icons.swap_vert:before {\n  content: \"\\e8d5\";\n}\n.material-icons.swap_vert_circle:before {\n  content: \"\\e8d6\";\n}\n.material-icons.swap_vertical_circle:before {\n  content: \"\\e8d6\";\n}\n.material-icons.swipe:before {\n  content: \"\\e9ec\";\n}\n.material-icons.switch_account:before {\n  content: \"\\e9ed\";\n}\n.material-icons.switch_camera:before {\n  content: \"\\e41e\";\n}\n.material-icons.switch_left:before {\n  content: \"\\f1d1\";\n}\n.material-icons.switch_right:before {\n  content: \"\\f1d2\";\n}\n.material-icons.switch_video:before {\n  content: \"\\e41f\";\n}\n.material-icons.sync:before {\n  content: \"\\e627\";\n}\n.material-icons.sync_alt:before {\n  content: \"\\ea18\";\n}\n.material-icons.sync_disabled:before {\n  content: \"\\e628\";\n}\n.material-icons.sync_problem:before {\n  content: \"\\e629\";\n}\n.material-icons.system_update:before {\n  content: \"\\e62a\";\n}\n.material-icons.system_update_alt:before {\n  content: \"\\e8d7\";\n}\n.material-icons.system_update_tv:before {\n  content: \"\\e8d7\";\n}\n.material-icons.tab:before {\n  content: \"\\e8d8\";\n}\n.material-icons.tab_unselected:before {\n  content: \"\\e8d9\";\n}\n.material-icons.table_chart:before {\n  content: \"\\e265\";\n}\n.material-icons.table_rows:before {\n  content: \"\\f101\";\n}\n.material-icons.table_view:before {\n  content: \"\\f1be\";\n}\n.material-icons.tablet:before {\n  content: \"\\e32f\";\n}\n.material-icons.tablet_android:before {\n  content: \"\\e330\";\n}\n.material-icons.tablet_mac:before {\n  content: \"\\e331\";\n}\n.material-icons.tag:before {\n  content: \"\\e9ef\";\n}\n.material-icons.tag_faces:before {\n  content: \"\\e420\";\n}\n.material-icons.takeout_dining:before {\n  content: \"\\ea74\";\n}\n.material-icons.tap_and_play:before {\n  content: \"\\e62b\";\n}\n.material-icons.tapas:before {\n  content: \"\\f1e9\";\n}\n.material-icons.taxi_alert:before {\n  content: \"\\ef74\";\n}\n.material-icons.terrain:before {\n  content: \"\\e564\";\n}\n.material-icons.text_fields:before {\n  content: \"\\e262\";\n}\n.material-icons.text_format:before {\n  content: \"\\e165\";\n}\n.material-icons.text_rotate_up:before {\n  content: \"\\e93a\";\n}\n.material-icons.text_rotate_vertical:before {\n  content: \"\\e93b\";\n}\n.material-icons.text_rotation_angledown:before {\n  content: \"\\e93c\";\n}\n.material-icons.text_rotation_angleup:before {\n  content: \"\\e93d\";\n}\n.material-icons.text_rotation_down:before {\n  content: \"\\e93e\";\n}\n.material-icons.text_rotation_none:before {\n  content: \"\\e93f\";\n}\n.material-icons.text_snippet:before {\n  content: \"\\f1c6\";\n}\n.material-icons.textsms:before {\n  content: \"\\e0d8\";\n}\n.material-icons.texture:before {\n  content: \"\\e421\";\n}\n.material-icons.theater_comedy:before {\n  content: \"\\ea66\";\n}\n.material-icons.theaters:before {\n  content: \"\\e8da\";\n}\n.material-icons.thumb_down:before {\n  content: \"\\e8db\";\n}\n.material-icons.thumb_down_alt:before {\n  content: \"\\e816\";\n}\n.material-icons.thumb_down_off_alt:before {\n  content: \"\\e9f2\";\n}\n.material-icons.thumb_up:before {\n  content: \"\\e8dc\";\n}\n.material-icons.thumb_up_alt:before {\n  content: \"\\e817\";\n}\n.material-icons.thumb_up_off_alt:before {\n  content: \"\\e9f3\";\n}\n.material-icons.thumbs_up_down:before {\n  content: \"\\e8dd\";\n}\n.material-icons.time_to_leave:before {\n  content: \"\\e62c\";\n}\n.material-icons.timelapse:before {\n  content: \"\\e422\";\n}\n.material-icons.timeline:before {\n  content: \"\\e922\";\n}\n.material-icons.timer:before {\n  content: \"\\e425\";\n}\n.material-icons.timer_10:before {\n  content: \"\\e423\";\n}\n.material-icons.timer_3:before {\n  content: \"\\e424\";\n}\n.material-icons.timer_off:before {\n  content: \"\\e426\";\n}\n.material-icons.title:before {\n  content: \"\\e264\";\n}\n.material-icons.toc:before {\n  content: \"\\e8de\";\n}\n.material-icons.today:before {\n  content: \"\\e8df\";\n}\n.material-icons.toggle_off:before {\n  content: \"\\e9f5\";\n}\n.material-icons.toggle_on:before {\n  content: \"\\e9f6\";\n}\n.material-icons.toll:before {\n  content: \"\\e8e0\";\n}\n.material-icons.tonality:before {\n  content: \"\\e427\";\n}\n.material-icons.topic:before {\n  content: \"\\f1c8\";\n}\n.material-icons.touch_app:before {\n  content: \"\\e913\";\n}\n.material-icons.tour:before {\n  content: \"\\ef75\";\n}\n.material-icons.toys:before {\n  content: \"\\e332\";\n}\n.material-icons.track_changes:before {\n  content: \"\\e8e1\";\n}\n.material-icons.traffic:before {\n  content: \"\\e565\";\n}\n.material-icons.train:before {\n  content: \"\\e570\";\n}\n.material-icons.tram:before {\n  content: \"\\e571\";\n}\n.material-icons.transfer_within_a_station:before {\n  content: \"\\e572\";\n}\n.material-icons.transform:before {\n  content: \"\\e428\";\n}\n.material-icons.transit_enterexit:before {\n  content: \"\\e579\";\n}\n.material-icons.translate:before {\n  content: \"\\e8e2\";\n}\n.material-icons.trending_down:before {\n  content: \"\\e8e3\";\n}\n.material-icons.trending_flat:before {\n  content: \"\\e8e4\";\n}\n.material-icons.trending_neutral:before {\n  content: \"\\e8e4\";\n}\n.material-icons.trending_up:before {\n  content: \"\\e8e5\";\n}\n.material-icons.trip_origin:before {\n  content: \"\\e57b\";\n}\n.material-icons.tty:before {\n  content: \"\\f1aa\";\n}\n.material-icons.tune:before {\n  content: \"\\e429\";\n}\n.material-icons.turned_in:before {\n  content: \"\\e8e6\";\n}\n.material-icons.turned_in_not:before {\n  content: \"\\e8e7\";\n}\n.material-icons.tv:before {\n  content: \"\\e333\";\n}\n.material-icons.tv_off:before {\n  content: \"\\e647\";\n}\n.material-icons.two_wheeler:before {\n  content: \"\\e9f9\";\n}\n.material-icons.umbrella:before {\n  content: \"\\f1ad\";\n}\n.material-icons.unarchive:before {\n  content: \"\\e169\";\n}\n.material-icons.undo:before {\n  content: \"\\e166\";\n}\n.material-icons.unfold_less:before {\n  content: \"\\e5d6\";\n}\n.material-icons.unfold_more:before {\n  content: \"\\e5d7\";\n}\n.material-icons.unpublished:before {\n  content: \"\\f236\";\n}\n.material-icons.unsubscribe:before {\n  content: \"\\e0eb\";\n}\n.material-icons.update:before {\n  content: \"\\e923\";\n}\n.material-icons.update_disabled:before {\n  content: \"\\e075\";\n}\n.material-icons.upgrade:before {\n  content: \"\\f0fb\";\n}\n.material-icons.upload_file:before {\n  content: \"\\e9fc\";\n}\n.material-icons.usb:before {\n  content: \"\\e1e0\";\n}\n.material-icons.verified:before {\n  content: \"\\ef76\";\n}\n.material-icons.verified_user:before {\n  content: \"\\e8e8\";\n}\n.material-icons.vertical_align_bottom:before {\n  content: \"\\e258\";\n}\n.material-icons.vertical_align_center:before {\n  content: \"\\e259\";\n}\n.material-icons.vertical_align_top:before {\n  content: \"\\e25a\";\n}\n.material-icons.vertical_distribute:before {\n  content: \"\\e076\";\n}\n.material-icons.vertical_split:before {\n  content: \"\\e949\";\n}\n.material-icons.vibration:before {\n  content: \"\\e62d\";\n}\n.material-icons.video_call:before {\n  content: \"\\e070\";\n}\n.material-icons.video_collection:before {\n  content: \"\\e04a\";\n}\n.material-icons.video_label:before {\n  content: \"\\e071\";\n}\n.material-icons.video_library:before {\n  content: \"\\e04a\";\n}\n.material-icons.video_settings:before {\n  content: \"\\ea75\";\n}\n.material-icons.videocam:before {\n  content: \"\\e04b\";\n}\n.material-icons.videocam_off:before {\n  content: \"\\e04c\";\n}\n.material-icons.videogame_asset:before {\n  content: \"\\e338\";\n}\n.material-icons.view_agenda:before {\n  content: \"\\e8e9\";\n}\n.material-icons.view_array:before {\n  content: \"\\e8ea\";\n}\n.material-icons.view_carousel:before {\n  content: \"\\e8eb\";\n}\n.material-icons.view_column:before {\n  content: \"\\e8ec\";\n}\n.material-icons.view_comfortable:before {\n  content: \"\\e42a\";\n}\n.material-icons.view_comfy:before {\n  content: \"\\e42a\";\n}\n.material-icons.view_compact:before {\n  content: \"\\e42b\";\n}\n.material-icons.view_day:before {\n  content: \"\\e8ed\";\n}\n.material-icons.view_headline:before {\n  content: \"\\e8ee\";\n}\n.material-icons.view_in_ar:before {\n  content: \"\\e9fe\";\n}\n.material-icons.view_list:before {\n  content: \"\\e8ef\";\n}\n.material-icons.view_module:before {\n  content: \"\\e8f0\";\n}\n.material-icons.view_quilt:before {\n  content: \"\\e8f1\";\n}\n.material-icons.view_sidebar:before {\n  content: \"\\f114\";\n}\n.material-icons.view_stream:before {\n  content: \"\\e8f2\";\n}\n.material-icons.view_week:before {\n  content: \"\\e8f3\";\n}\n.material-icons.vignette:before {\n  content: \"\\e435\";\n}\n.material-icons.visibility:before {\n  content: \"\\e8f4\";\n}\n.material-icons.visibility_off:before {\n  content: \"\\e8f5\";\n}\n.material-icons.voice_chat:before {\n  content: \"\\e62e\";\n}\n.material-icons.voice_over_off:before {\n  content: \"\\e94a\";\n}\n.material-icons.voicemail:before {\n  content: \"\\e0d9\";\n}\n.material-icons.volume_down:before {\n  content: \"\\e04d\";\n}\n.material-icons.volume_mute:before {\n  content: \"\\e04e\";\n}\n.material-icons.volume_off:before {\n  content: \"\\e04f\";\n}\n.material-icons.volume_up:before {\n  content: \"\\e050\";\n}\n.material-icons.volunteer_activism:before {\n  content: \"\\ea70\";\n}\n.material-icons.vpn_key:before {\n  content: \"\\e0da\";\n}\n.material-icons.vpn_lock:before {\n  content: \"\\e62f\";\n}\n.material-icons.wallet_giftcard:before {\n  content: \"\\e8f6\";\n}\n.material-icons.wallet_membership:before {\n  content: \"\\e8f7\";\n}\n.material-icons.wallet_travel:before {\n  content: \"\\e8f8\";\n}\n.material-icons.wallpaper:before {\n  content: \"\\e1bc\";\n}\n.material-icons.warning:before {\n  content: \"\\e002\";\n}\n.material-icons.wash:before {\n  content: \"\\f1b1\";\n}\n.material-icons.watch:before {\n  content: \"\\e334\";\n}\n.material-icons.watch_later:before {\n  content: \"\\e924\";\n}\n.material-icons.water_damage:before {\n  content: \"\\f203\";\n}\n.material-icons.waterfall_chart:before {\n  content: \"\\ea00\";\n}\n.material-icons.waves:before {\n  content: \"\\e176\";\n}\n.material-icons.wb_auto:before {\n  content: \"\\e42c\";\n}\n.material-icons.wb_cloudy:before {\n  content: \"\\e42d\";\n}\n.material-icons.wb_incandescent:before {\n  content: \"\\e42e\";\n}\n.material-icons.wb_iridescent:before {\n  content: \"\\e436\";\n}\n.material-icons.wb_shade:before {\n  content: \"\\ea01\";\n}\n.material-icons.wb_sunny:before {\n  content: \"\\e430\";\n}\n.material-icons.wb_twighlight:before {\n  content: \"\\ea02\";\n}\n.material-icons.wc:before {\n  content: \"\\e63d\";\n}\n.material-icons.web:before {\n  content: \"\\e051\";\n}\n.material-icons.web_asset:before {\n  content: \"\\e069\";\n}\n.material-icons.weekend:before {\n  content: \"\\e16b\";\n}\n.material-icons.west:before {\n  content: \"\\f1e6\";\n}\n.material-icons.whatshot:before {\n  content: \"\\e80e\";\n}\n.material-icons.wheelchair_pickup:before {\n  content: \"\\f1ab\";\n}\n.material-icons.where_to_vote:before {\n  content: \"\\e177\";\n}\n.material-icons.widgets:before {\n  content: \"\\e1bd\";\n}\n.material-icons.wifi:before {\n  content: \"\\e63e\";\n}\n.material-icons.wifi_calling:before {\n  content: \"\\ef77\";\n}\n.material-icons.wifi_lock:before {\n  content: \"\\e1e1\";\n}\n.material-icons.wifi_off:before {\n  content: \"\\e648\";\n}\n.material-icons.wifi_protected_setup:before {\n  content: \"\\f0fc\";\n}\n.material-icons.wifi_tethering:before {\n  content: \"\\e1e2\";\n}\n.material-icons.wine_bar:before {\n  content: \"\\f1e8\";\n}\n.material-icons.work:before {\n  content: \"\\e8f9\";\n}\n.material-icons.work_off:before {\n  content: \"\\e942\";\n}\n.material-icons.work_outline:before {\n  content: \"\\e943\";\n}\n.material-icons.workspaces_filled:before {\n  content: \"\\ea0d\";\n}\n.material-icons.workspaces_outline:before {\n  content: \"\\ea0f\";\n}\n.material-icons.wrap_text:before {\n  content: \"\\e25b\";\n}\n.material-icons.wrong_location:before {\n  content: \"\\ef78\";\n}\n.material-icons.wysiwyg:before {\n  content: \"\\f1c3\";\n}\n.material-icons.youtube_searched_for:before {\n  content: \"\\e8fa\";\n}\n.material-icons.zoom_in:before {\n  content: \"\\e8ff\";\n}\n.material-icons.zoom_out:before {\n  content: \"\\e900\";\n}\n.material-icons.zoom_out_map:before {\n  content: \"\\e56b\";\n}\n/* Colors for the ripple elements.*/\n/* stylelint-disable-next-line material/theme-mixin-api */\n/* stylelint-disable-next-line material/theme-mixin-api */\n/* stylelint-disable material/no-prefixes */\n/* stylelint-enable */\n.mat-badge-content {\n  font-weight: 600;\n  font-size: 12px;\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n.mat-badge-small .mat-badge-content {\n  font-size: 9px;\n}\n.mat-badge-large .mat-badge-content {\n  font-size: 24px;\n}\n.mat-h1, .mat-headline, .mat-typography h1 {\n  font: 400 24px/32px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n  margin: 0 0 16px;\n}\n.mat-h2, .mat-title, .mat-typography h2 {\n  font: 500 20px/32px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n  margin: 0 0 16px;\n}\n.mat-h3, .mat-subheading-2, .mat-typography h3 {\n  font: 400 16px/28px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n  margin: 0 0 16px;\n}\n.mat-h4, .mat-subheading-1, .mat-typography h4 {\n  font: 400 15px/24px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n  margin: 0 0 16px;\n}\n.mat-h5, .mat-typography h5 {\n  font: 400 calc(14px * 0.83)/20px Roboto, \"Helvetica Neue\", sans-serif;\n  margin: 0 0 12px;\n}\n.mat-h6, .mat-typography h6 {\n  font: 400 calc(14px * 0.67)/20px Roboto, \"Helvetica Neue\", sans-serif;\n  margin: 0 0 12px;\n}\n.mat-body-strong, .mat-body-2 {\n  font: 500 14px/24px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n}\n.mat-body, .mat-body-1, .mat-typography {\n  font: 400 14px/20px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n}\n.mat-body p, .mat-body-1 p, .mat-typography p {\n  margin: 0 0 12px;\n}\n.mat-small, .mat-caption {\n  font: 400 12px/20px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n}\n.mat-display-4, .mat-typography .mat-display-4 {\n  font: 300 112px/112px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: -0.05em;\n  margin: 0 0 56px;\n}\n.mat-display-3, .mat-typography .mat-display-3 {\n  font: 400 56px/56px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: -0.02em;\n  margin: 0 0 64px;\n}\n.mat-display-2, .mat-typography .mat-display-2 {\n  font: 400 45px/48px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: -0.005em;\n  margin: 0 0 64px;\n}\n.mat-display-1, .mat-typography .mat-display-1 {\n  font: 400 34px/40px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n  margin: 0 0 64px;\n}\n.mat-bottom-sheet-container {\n  font: 400 14px/20px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n}\n.mat-button, .mat-raised-button, .mat-icon-button, .mat-stroked-button,\n.mat-flat-button, .mat-fab, .mat-mini-fab {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 14px;\n  font-weight: 500;\n}\n.mat-button-toggle {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n.mat-card {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n.mat-card-title {\n  font-size: 24px;\n  font-weight: 500;\n}\n.mat-card-header .mat-card-title {\n  font-size: 20px;\n}\n.mat-card-subtitle,\n.mat-card-content {\n  font-size: 14px;\n}\n.mat-checkbox {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n.mat-checkbox-layout .mat-checkbox-label {\n  line-height: 24px;\n}\n.mat-chip {\n  font-size: 14px;\n  font-weight: 500;\n}\n.mat-chip .mat-chip-trailing-icon.mat-icon,\n.mat-chip .mat-chip-remove.mat-icon {\n  font-size: 18px;\n}\n.mat-table {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n.mat-header-cell {\n  font-size: 12px;\n  font-weight: 500;\n}\n.mat-cell, .mat-footer-cell {\n  font-size: 14px;\n}\n.mat-calendar {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n.mat-calendar-body {\n  font-size: 13px;\n}\n.mat-calendar-body-label,\n.mat-calendar-period-button {\n  font-size: 14px;\n  font-weight: 500;\n}\n.mat-calendar-table-header th {\n  font-size: 11px;\n  font-weight: 400;\n}\n.mat-dialog-title {\n  font: 500 20px/32px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n}\n.mat-expansion-panel-header {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 15px;\n  font-weight: 400;\n}\n.mat-expansion-panel-content {\n  font: 400 14px/20px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n}\n.mat-form-field {\n  font-size: inherit;\n  font-weight: 400;\n  line-height: 1.125;\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n}\n.mat-form-field-wrapper {\n  padding-bottom: 1.34375em;\n}\n.mat-form-field-prefix .mat-icon,\n.mat-form-field-suffix .mat-icon {\n  font-size: 150%;\n  line-height: 1.125;\n}\n.mat-form-field-prefix .mat-icon-button,\n.mat-form-field-suffix .mat-icon-button {\n  height: 1.5em;\n  width: 1.5em;\n}\n.mat-form-field-prefix .mat-icon-button .mat-icon,\n.mat-form-field-suffix .mat-icon-button .mat-icon {\n  height: 1.125em;\n  line-height: 1.125;\n}\n.mat-form-field-infix {\n  padding: 0.5em 0;\n  border-top: 0.84375em solid transparent;\n}\n.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\n.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.34375em) scale(0.75);\n  width: 133.3333333333%;\n}\n.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.34374em) scale(0.75);\n  width: 133.3333433333%;\n}\n.mat-form-field-label-wrapper {\n  top: -0.84375em;\n  padding-top: 0.84375em;\n}\n.mat-form-field-label {\n  top: 1.34375em;\n}\n.mat-form-field-underline {\n  bottom: 1.34375em;\n}\n.mat-form-field-subscript-wrapper {\n  font-size: 75%;\n  margin-top: 0.6666666667em;\n  top: calc(100% - 1.7916666667em);\n}\n.mat-form-field-appearance-legacy .mat-form-field-wrapper {\n  padding-bottom: 1.25em;\n}\n.mat-form-field-appearance-legacy .mat-form-field-infix {\n  padding: 0.4375em 0;\n}\n.mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.001px);\n  -ms-transform: translateY(-1.28125em) scale(0.75);\n  width: 133.3333333333%;\n}\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00101px);\n  -ms-transform: translateY(-1.28124em) scale(0.75);\n  width: 133.3333433333%;\n}\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00102px);\n  -ms-transform: translateY(-1.28123em) scale(0.75);\n  width: 133.3333533333%;\n}\n.mat-form-field-appearance-legacy .mat-form-field-label {\n  top: 1.28125em;\n}\n.mat-form-field-appearance-legacy .mat-form-field-underline {\n  bottom: 1.25em;\n}\n.mat-form-field-appearance-legacy .mat-form-field-subscript-wrapper {\n  margin-top: 0.5416666667em;\n  top: calc(100% - 1.6666666667em);\n}\n@media print {\n  .mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n    transform: translateY(-1.28122em) scale(0.75);\n  }\n  .mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper .mat-form-field-label {\n    transform: translateY(-1.28121em) scale(0.75);\n  }\n  .mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper .mat-form-field-label {\n    transform: translateY(-1.2812em) scale(0.75);\n  }\n}\n.mat-form-field-appearance-fill .mat-form-field-infix {\n  padding: 0.25em 0 0.75em 0;\n}\n.mat-form-field-appearance-fill .mat-form-field-label {\n  top: 1.09375em;\n  margin-top: -0.5em;\n}\n.mat-form-field-appearance-fill.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\n.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-0.59375em) scale(0.75);\n  width: 133.3333333333%;\n}\n.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-0.59374em) scale(0.75);\n  width: 133.3333433333%;\n}\n.mat-form-field-appearance-outline .mat-form-field-infix {\n  padding: 1em 0 1em 0;\n}\n.mat-form-field-appearance-outline .mat-form-field-label {\n  top: 1.84375em;\n  margin-top: -0.25em;\n}\n.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\n.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.59375em) scale(0.75);\n  width: 133.3333333333%;\n}\n.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.59374em) scale(0.75);\n  width: 133.3333433333%;\n}\n.mat-grid-tile-header,\n.mat-grid-tile-footer {\n  font-size: 14px;\n}\n.mat-grid-tile-header .mat-line,\n.mat-grid-tile-footer .mat-line {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: block;\n  box-sizing: border-box;\n}\n.mat-grid-tile-header .mat-line:nth-child(n+2),\n.mat-grid-tile-footer .mat-line:nth-child(n+2) {\n  font-size: 12px;\n}\ninput.mat-input-element {\n  margin-top: -0.0625em;\n}\n.mat-menu-item {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 14px;\n  font-weight: 400;\n}\n.mat-paginator,\n.mat-paginator-page-size .mat-select-trigger {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 12px;\n}\n.mat-radio-button {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n.mat-select {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n.mat-select-trigger {\n  height: 1.125em;\n}\n.mat-slide-toggle-content {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n.mat-slider-thumb-label-text {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 12px;\n  font-weight: 500;\n}\n.mat-stepper-vertical, .mat-stepper-horizontal {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n.mat-step-label {\n  font-size: 14px;\n  font-weight: 400;\n}\n.mat-step-sub-label-error {\n  font-weight: normal;\n}\n.mat-step-label-error {\n  font-size: 14px;\n}\n.mat-step-label-selected {\n  font-size: 14px;\n  font-weight: 500;\n}\n.mat-tab-group {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n.mat-tab-label, .mat-tab-link {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 14px;\n  font-weight: 500;\n}\n.mat-toolbar,\n.mat-toolbar h1,\n.mat-toolbar h2,\n.mat-toolbar h3,\n.mat-toolbar h4,\n.mat-toolbar h5,\n.mat-toolbar h6 {\n  font: 500 20px/32px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n  margin: 0;\n}\n.mat-tooltip {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 10px;\n  padding-top: 6px;\n  padding-bottom: 6px;\n}\n.mat-tooltip-handset {\n  font-size: 14px;\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\n.mat-list-item {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n.mat-list-option {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n.mat-list-base .mat-list-item {\n  font-size: 16px;\n}\n.mat-list-base .mat-list-item .mat-line {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: block;\n  box-sizing: border-box;\n}\n.mat-list-base .mat-list-item .mat-line:nth-child(n+2) {\n  font-size: 14px;\n}\n.mat-list-base .mat-list-option {\n  font-size: 16px;\n}\n.mat-list-base .mat-list-option .mat-line {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: block;\n  box-sizing: border-box;\n}\n.mat-list-base .mat-list-option .mat-line:nth-child(n+2) {\n  font-size: 14px;\n}\n.mat-list-base .mat-subheader {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 14px;\n  font-weight: 500;\n}\n.mat-list-base[dense] .mat-list-item {\n  font-size: 12px;\n}\n.mat-list-base[dense] .mat-list-item .mat-line {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: block;\n  box-sizing: border-box;\n}\n.mat-list-base[dense] .mat-list-item .mat-line:nth-child(n+2) {\n  font-size: 12px;\n}\n.mat-list-base[dense] .mat-list-option {\n  font-size: 12px;\n}\n.mat-list-base[dense] .mat-list-option .mat-line {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: block;\n  box-sizing: border-box;\n}\n.mat-list-base[dense] .mat-list-option .mat-line:nth-child(n+2) {\n  font-size: 12px;\n}\n.mat-list-base[dense] .mat-subheader {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 12px;\n  font-weight: 500;\n}\n.mat-option {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 16px;\n}\n.mat-optgroup-label {\n  font: 500 14px/24px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n}\n.mat-simple-snackbar {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 14px;\n}\n.mat-simple-snackbar-action {\n  line-height: 1;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: 500;\n}\n.mat-tree {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n.mat-tree-node,\n.mat-nested-tree-node {\n  font-weight: 400;\n  font-size: 14px;\n}\n.mat-ripple {\n  overflow: hidden;\n  position: relative;\n}\n.mat-ripple:not(:empty) {\n  transform: translateZ(0);\n}\n.mat-ripple.mat-ripple-unbounded {\n  overflow: visible;\n}\n.mat-ripple-element {\n  position: absolute;\n  border-radius: 50%;\n  pointer-events: none;\n  transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n  transform: scale(0);\n}\n.cdk-high-contrast-active .mat-ripple-element {\n  display: none;\n}\n.cdk-visually-hidden {\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n  outline: 0;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n}\n.cdk-overlay-container, .cdk-global-overlay-wrapper {\n  pointer-events: none;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n}\n.cdk-overlay-container {\n  position: fixed;\n  z-index: 1000;\n}\n.cdk-overlay-container:empty {\n  display: none;\n}\n.cdk-global-overlay-wrapper {\n  display: flex;\n  position: absolute;\n  z-index: 1000;\n}\n.cdk-overlay-pane {\n  position: absolute;\n  pointer-events: auto;\n  box-sizing: border-box;\n  z-index: 1000;\n  display: flex;\n  max-width: 100%;\n  max-height: 100%;\n}\n.cdk-overlay-backdrop {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: 1000;\n  pointer-events: auto;\n  -webkit-tap-highlight-color: transparent;\n  transition: opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1);\n  opacity: 0;\n}\n.cdk-overlay-backdrop.cdk-overlay-backdrop-showing {\n  opacity: 1;\n}\n@media screen and (-ms-high-contrast: active) {\n  .cdk-overlay-backdrop.cdk-overlay-backdrop-showing {\n    opacity: 0.6;\n  }\n}\n.cdk-overlay-dark-backdrop {\n  background: rgba(0, 0, 0, 0.32);\n}\n.cdk-overlay-transparent-backdrop, .cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing {\n  opacity: 0;\n}\n.cdk-overlay-connected-position-bounding-box {\n  position: absolute;\n  z-index: 1000;\n  display: flex;\n  flex-direction: column;\n  min-width: 1px;\n  min-height: 1px;\n}\n.cdk-global-scrollblock {\n  position: fixed;\n  width: 100%;\n  overflow-y: scroll;\n}\n@keyframes cdk-text-field-autofill-start {\n  /*!*/\n}\n@keyframes cdk-text-field-autofill-end {\n  /*!*/\n}\n.cdk-text-field-autofill-monitored:-webkit-autofill {\n  animation: cdk-text-field-autofill-start 0s 1ms;\n}\n.cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\n  animation: cdk-text-field-autofill-end 0s 1ms;\n}\ntextarea.cdk-textarea-autosize {\n  resize: none;\n}\ntextarea.cdk-textarea-autosize-measuring {\n  padding: 2px 0 !important;\n  box-sizing: content-box !important;\n  height: auto !important;\n  overflow: hidden !important;\n}\ntextarea.cdk-textarea-autosize-measuring-firefox {\n  padding: 2px 0 !important;\n  box-sizing: content-box !important;\n  height: 0 !important;\n}\n.mat-focus-indicator {\n  position: relative;\n}\n.mat-mdc-focus-indicator {\n  position: relative;\n}\n.mat-ripple-element {\n  background-color: rgba(0, 0, 0, 0.1);\n}\n.mat-option {\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-option:hover:not(.mat-option-disabled), .mat-option:focus:not(.mat-option-disabled) {\n  background: rgba(0, 0, 0, 0.04);\n}\n.mat-option.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled) {\n  background: rgba(0, 0, 0, 0.04);\n}\n.mat-option.mat-active {\n  background: rgba(0, 0, 0, 0.04);\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-option.mat-option-disabled {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mat-primary .mat-option.mat-selected:not(.mat-option-disabled) {\n  color: #2196f3;\n}\n.mat-accent .mat-option.mat-selected:not(.mat-option-disabled) {\n  color: #ff4081;\n}\n.mat-warn .mat-option.mat-selected:not(.mat-option-disabled) {\n  color: #f44336;\n}\n.mat-optgroup-label {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-optgroup-disabled .mat-optgroup-label {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mat-pseudo-checkbox {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-pseudo-checkbox::after {\n  color: #fafafa;\n}\n.mat-pseudo-checkbox-disabled {\n  color: #b0b0b0;\n}\n.mat-primary .mat-pseudo-checkbox-checked,\n.mat-primary .mat-pseudo-checkbox-indeterminate {\n  background: #2196f3;\n}\n.mat-pseudo-checkbox-checked,\n.mat-pseudo-checkbox-indeterminate,\n.mat-accent .mat-pseudo-checkbox-checked,\n.mat-accent .mat-pseudo-checkbox-indeterminate {\n  background: #ff4081;\n}\n.mat-warn .mat-pseudo-checkbox-checked,\n.mat-warn .mat-pseudo-checkbox-indeterminate {\n  background: #f44336;\n}\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled,\n.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled {\n  background: #b0b0b0;\n}\n.mat-app-background {\n  background-color: #fafafa;\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-elevation-z0 {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z1 {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z2 {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z3 {\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z4 {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z5 {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z6 {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z7 {\n  box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z8 {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z9 {\n  box-shadow: 0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z10 {\n  box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z11 {\n  box-shadow: 0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z12 {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z13 {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z14 {\n  box-shadow: 0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z15 {\n  box-shadow: 0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z16 {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z17 {\n  box-shadow: 0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z18 {\n  box-shadow: 0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z19 {\n  box-shadow: 0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z20 {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z21 {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z22 {\n  box-shadow: 0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z23 {\n  box-shadow: 0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z24 {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n.mat-theme-loaded-marker {\n  display: none;\n}\n.mat-autocomplete-panel {\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-autocomplete-panel:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover) {\n  background: white;\n}\n.mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover):not(.mat-option-disabled) {\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-badge-content {\n  color: white;\n  background: #2196f3;\n}\n.cdk-high-contrast-active .mat-badge-content {\n  outline: solid 1px;\n  border-radius: 0;\n}\n.mat-badge-accent .mat-badge-content {\n  background: #ff4081;\n  color: white;\n}\n.mat-badge-warn .mat-badge-content {\n  color: white;\n  background: #f44336;\n}\n.mat-badge {\n  position: relative;\n}\n.mat-badge-hidden .mat-badge-content {\n  display: none;\n}\n.mat-badge-disabled .mat-badge-content {\n  background: #b9b9b9;\n  color: rgba(0, 0, 0, 0.38);\n}\n.mat-badge-content {\n  position: absolute;\n  text-align: center;\n  display: inline-block;\n  border-radius: 50%;\n  transition: transform 200ms ease-in-out;\n  transform: scale(0.6);\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  pointer-events: none;\n}\n.ng-animate-disabled .mat-badge-content,\n.mat-badge-content._mat-animation-noopable {\n  transition: none;\n}\n.mat-badge-content.mat-badge-active {\n  transform: none;\n}\n.mat-badge-small .mat-badge-content {\n  width: 16px;\n  height: 16px;\n  line-height: 16px;\n}\n.mat-badge-small.mat-badge-above .mat-badge-content {\n  top: -8px;\n}\n.mat-badge-small.mat-badge-below .mat-badge-content {\n  bottom: -8px;\n}\n.mat-badge-small.mat-badge-before .mat-badge-content {\n  left: -16px;\n}\n[dir=rtl] .mat-badge-small.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -16px;\n}\n.mat-badge-small.mat-badge-after .mat-badge-content {\n  right: -16px;\n}\n[dir=rtl] .mat-badge-small.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -16px;\n}\n.mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: -8px;\n}\n[dir=rtl] .mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -8px;\n}\n.mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: -8px;\n}\n[dir=rtl] .mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -8px;\n}\n.mat-badge-medium .mat-badge-content {\n  width: 22px;\n  height: 22px;\n  line-height: 22px;\n}\n.mat-badge-medium.mat-badge-above .mat-badge-content {\n  top: -11px;\n}\n.mat-badge-medium.mat-badge-below .mat-badge-content {\n  bottom: -11px;\n}\n.mat-badge-medium.mat-badge-before .mat-badge-content {\n  left: -22px;\n}\n[dir=rtl] .mat-badge-medium.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -22px;\n}\n.mat-badge-medium.mat-badge-after .mat-badge-content {\n  right: -22px;\n}\n[dir=rtl] .mat-badge-medium.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -22px;\n}\n.mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: -11px;\n}\n[dir=rtl] .mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -11px;\n}\n.mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: -11px;\n}\n[dir=rtl] .mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -11px;\n}\n.mat-badge-large .mat-badge-content {\n  width: 28px;\n  height: 28px;\n  line-height: 28px;\n}\n.mat-badge-large.mat-badge-above .mat-badge-content {\n  top: -14px;\n}\n.mat-badge-large.mat-badge-below .mat-badge-content {\n  bottom: -14px;\n}\n.mat-badge-large.mat-badge-before .mat-badge-content {\n  left: -28px;\n}\n[dir=rtl] .mat-badge-large.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -28px;\n}\n.mat-badge-large.mat-badge-after .mat-badge-content {\n  right: -28px;\n}\n[dir=rtl] .mat-badge-large.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -28px;\n}\n.mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: -14px;\n}\n[dir=rtl] .mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -14px;\n}\n.mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: -14px;\n}\n[dir=rtl] .mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -14px;\n}\n.mat-bottom-sheet-container {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-button, .mat-icon-button, .mat-stroked-button {\n  color: inherit;\n  background: transparent;\n}\n.mat-button.mat-primary, .mat-icon-button.mat-primary, .mat-stroked-button.mat-primary {\n  color: #2196f3;\n}\n.mat-button.mat-accent, .mat-icon-button.mat-accent, .mat-stroked-button.mat-accent {\n  color: #ff4081;\n}\n.mat-button.mat-warn, .mat-icon-button.mat-warn, .mat-stroked-button.mat-warn {\n  color: #f44336;\n}\n.mat-button.mat-primary.mat-button-disabled, .mat-button.mat-accent.mat-button-disabled, .mat-button.mat-warn.mat-button-disabled, .mat-button.mat-button-disabled.mat-button-disabled, .mat-icon-button.mat-primary.mat-button-disabled, .mat-icon-button.mat-accent.mat-button-disabled, .mat-icon-button.mat-warn.mat-button-disabled, .mat-icon-button.mat-button-disabled.mat-button-disabled, .mat-stroked-button.mat-primary.mat-button-disabled, .mat-stroked-button.mat-accent.mat-button-disabled, .mat-stroked-button.mat-warn.mat-button-disabled, .mat-stroked-button.mat-button-disabled.mat-button-disabled {\n  color: rgba(0, 0, 0, 0.26);\n}\n.mat-button.mat-primary .mat-button-focus-overlay, .mat-icon-button.mat-primary .mat-button-focus-overlay, .mat-stroked-button.mat-primary .mat-button-focus-overlay {\n  background-color: #2196f3;\n}\n.mat-button.mat-accent .mat-button-focus-overlay, .mat-icon-button.mat-accent .mat-button-focus-overlay, .mat-stroked-button.mat-accent .mat-button-focus-overlay {\n  background-color: #ff4081;\n}\n.mat-button.mat-warn .mat-button-focus-overlay, .mat-icon-button.mat-warn .mat-button-focus-overlay, .mat-stroked-button.mat-warn .mat-button-focus-overlay {\n  background-color: #f44336;\n}\n.mat-button.mat-button-disabled .mat-button-focus-overlay, .mat-icon-button.mat-button-disabled .mat-button-focus-overlay, .mat-stroked-button.mat-button-disabled .mat-button-focus-overlay {\n  background-color: transparent;\n}\n.mat-button .mat-ripple-element, .mat-icon-button .mat-ripple-element, .mat-stroked-button .mat-ripple-element {\n  opacity: 0.1;\n  background-color: currentColor;\n}\n.mat-button-focus-overlay {\n  background: black;\n}\n.mat-stroked-button:not(.mat-button-disabled) {\n  border-color: rgba(0, 0, 0, 0.12);\n}\n.mat-flat-button, .mat-raised-button, .mat-fab, .mat-mini-fab {\n  color: rgba(0, 0, 0, 0.87);\n  background-color: white;\n}\n.mat-flat-button.mat-primary, .mat-raised-button.mat-primary, .mat-fab.mat-primary, .mat-mini-fab.mat-primary {\n  color: white;\n}\n.mat-flat-button.mat-accent, .mat-raised-button.mat-accent, .mat-fab.mat-accent, .mat-mini-fab.mat-accent {\n  color: white;\n}\n.mat-flat-button.mat-warn, .mat-raised-button.mat-warn, .mat-fab.mat-warn, .mat-mini-fab.mat-warn {\n  color: white;\n}\n.mat-flat-button.mat-primary.mat-button-disabled, .mat-flat-button.mat-accent.mat-button-disabled, .mat-flat-button.mat-warn.mat-button-disabled, .mat-flat-button.mat-button-disabled.mat-button-disabled, .mat-raised-button.mat-primary.mat-button-disabled, .mat-raised-button.mat-accent.mat-button-disabled, .mat-raised-button.mat-warn.mat-button-disabled, .mat-raised-button.mat-button-disabled.mat-button-disabled, .mat-fab.mat-primary.mat-button-disabled, .mat-fab.mat-accent.mat-button-disabled, .mat-fab.mat-warn.mat-button-disabled, .mat-fab.mat-button-disabled.mat-button-disabled, .mat-mini-fab.mat-primary.mat-button-disabled, .mat-mini-fab.mat-accent.mat-button-disabled, .mat-mini-fab.mat-warn.mat-button-disabled, .mat-mini-fab.mat-button-disabled.mat-button-disabled {\n  color: rgba(0, 0, 0, 0.26);\n}\n.mat-flat-button.mat-primary, .mat-raised-button.mat-primary, .mat-fab.mat-primary, .mat-mini-fab.mat-primary {\n  background-color: #2196f3;\n}\n.mat-flat-button.mat-accent, .mat-raised-button.mat-accent, .mat-fab.mat-accent, .mat-mini-fab.mat-accent {\n  background-color: #ff4081;\n}\n.mat-flat-button.mat-warn, .mat-raised-button.mat-warn, .mat-fab.mat-warn, .mat-mini-fab.mat-warn {\n  background-color: #f44336;\n}\n.mat-flat-button.mat-primary.mat-button-disabled, .mat-flat-button.mat-accent.mat-button-disabled, .mat-flat-button.mat-warn.mat-button-disabled, .mat-flat-button.mat-button-disabled.mat-button-disabled, .mat-raised-button.mat-primary.mat-button-disabled, .mat-raised-button.mat-accent.mat-button-disabled, .mat-raised-button.mat-warn.mat-button-disabled, .mat-raised-button.mat-button-disabled.mat-button-disabled, .mat-fab.mat-primary.mat-button-disabled, .mat-fab.mat-accent.mat-button-disabled, .mat-fab.mat-warn.mat-button-disabled, .mat-fab.mat-button-disabled.mat-button-disabled, .mat-mini-fab.mat-primary.mat-button-disabled, .mat-mini-fab.mat-accent.mat-button-disabled, .mat-mini-fab.mat-warn.mat-button-disabled, .mat-mini-fab.mat-button-disabled.mat-button-disabled {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n.mat-flat-button.mat-primary .mat-ripple-element, .mat-raised-button.mat-primary .mat-ripple-element, .mat-fab.mat-primary .mat-ripple-element, .mat-mini-fab.mat-primary .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.mat-flat-button.mat-accent .mat-ripple-element, .mat-raised-button.mat-accent .mat-ripple-element, .mat-fab.mat-accent .mat-ripple-element, .mat-mini-fab.mat-accent .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.mat-flat-button.mat-warn .mat-ripple-element, .mat-raised-button.mat-warn .mat-ripple-element, .mat-fab.mat-warn .mat-ripple-element, .mat-mini-fab.mat-warn .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.mat-stroked-button:not([class*=mat-elevation-z]), .mat-flat-button:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-raised-button:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-raised-button:not(.mat-button-disabled):active:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n}\n.mat-raised-button.mat-button-disabled:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-fab:not([class*=mat-elevation-z]), .mat-mini-fab:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-fab:not(.mat-button-disabled):active:not([class*=mat-elevation-z]), .mat-mini-fab:not(.mat-button-disabled):active:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12);\n}\n.mat-fab.mat-button-disabled:not([class*=mat-elevation-z]), .mat-mini-fab.mat-button-disabled:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-button-toggle-standalone,\n.mat-button-toggle-group {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n.mat-button-toggle-group-appearance-standard {\n  box-shadow: none;\n}\n.mat-button-toggle {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mat-button-toggle .mat-button-toggle-focus-overlay {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n.mat-button-toggle-appearance-standard {\n  color: rgba(0, 0, 0, 0.87);\n  background: white;\n}\n.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay {\n  background-color: black;\n}\n.mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n  border-left: solid 1px rgba(0, 0, 0, 0.12);\n}\n[dir=rtl] .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n  border-left: none;\n  border-right: solid 1px rgba(0, 0, 0, 0.12);\n}\n.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle + .mat-button-toggle {\n  border-left: none;\n  border-right: none;\n  border-top: solid 1px rgba(0, 0, 0, 0.12);\n}\n.mat-button-toggle-checked {\n  background-color: #e0e0e0;\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-button-toggle-checked.mat-button-toggle-appearance-standard {\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-button-toggle-disabled {\n  color: rgba(0, 0, 0, 0.26);\n  background-color: #eeeeee;\n}\n.mat-button-toggle-disabled.mat-button-toggle-appearance-standard {\n  background: white;\n}\n.mat-button-toggle-disabled.mat-button-toggle-checked {\n  background-color: #bdbdbd;\n}\n.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n.mat-button-toggle-group-appearance-standard {\n  border: solid 1px rgba(0, 0, 0, 0.12);\n}\n.mat-button-toggle-appearance-standard .mat-button-toggle-label-content {\n  line-height: 48px;\n}\n.mat-card {\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-card:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-card.mat-card-flat:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-card-subtitle {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-checkbox-frame {\n  border-color: rgba(0, 0, 0, 0.54);\n}\n.mat-checkbox-checkmark {\n  fill: #fafafa;\n}\n.mat-checkbox-checkmark-path {\n  stroke: #fafafa !important;\n}\n.mat-checkbox-mixedmark {\n  background-color: #fafafa;\n}\n.mat-checkbox-indeterminate.mat-primary .mat-checkbox-background, .mat-checkbox-checked.mat-primary .mat-checkbox-background {\n  background-color: #2196f3;\n}\n.mat-checkbox-indeterminate.mat-accent .mat-checkbox-background, .mat-checkbox-checked.mat-accent .mat-checkbox-background {\n  background-color: #ff4081;\n}\n.mat-checkbox-indeterminate.mat-warn .mat-checkbox-background, .mat-checkbox-checked.mat-warn .mat-checkbox-background {\n  background-color: #f44336;\n}\n.mat-checkbox-disabled.mat-checkbox-checked .mat-checkbox-background, .mat-checkbox-disabled.mat-checkbox-indeterminate .mat-checkbox-background {\n  background-color: #b0b0b0;\n}\n.mat-checkbox-disabled:not(.mat-checkbox-checked) .mat-checkbox-frame {\n  border-color: #b0b0b0;\n}\n.mat-checkbox-disabled .mat-checkbox-label {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-checkbox .mat-ripple-element {\n  background-color: black;\n}\n.mat-checkbox-checked:not(.mat-checkbox-disabled).mat-primary .mat-ripple-element,\n.mat-checkbox:active:not(.mat-checkbox-disabled).mat-primary .mat-ripple-element {\n  background: #2196f3;\n}\n.mat-checkbox-checked:not(.mat-checkbox-disabled).mat-accent .mat-ripple-element,\n.mat-checkbox:active:not(.mat-checkbox-disabled).mat-accent .mat-ripple-element {\n  background: #ff4081;\n}\n.mat-checkbox-checked:not(.mat-checkbox-disabled).mat-warn .mat-ripple-element,\n.mat-checkbox:active:not(.mat-checkbox-disabled).mat-warn .mat-ripple-element {\n  background: #f44336;\n}\n.mat-chip.mat-standard-chip {\n  background-color: #e0e0e0;\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-chip.mat-standard-chip .mat-chip-remove {\n  color: rgba(0, 0, 0, 0.87);\n  opacity: 0.4;\n}\n.mat-chip.mat-standard-chip:not(.mat-chip-disabled):active {\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-chip.mat-standard-chip:not(.mat-chip-disabled) .mat-chip-remove:hover {\n  opacity: 0.54;\n}\n.mat-chip.mat-standard-chip.mat-chip-disabled {\n  opacity: 0.4;\n}\n.mat-chip.mat-standard-chip::after {\n  background: black;\n}\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary {\n  background-color: #2196f3;\n  color: white;\n}\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-chip-remove {\n  color: white;\n  opacity: 0.4;\n}\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn {\n  background-color: #f44336;\n  color: white;\n}\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-chip-remove {\n  color: white;\n  opacity: 0.4;\n}\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent {\n  background-color: #ff4081;\n  color: white;\n}\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-chip-remove {\n  color: white;\n  opacity: 0.4;\n}\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.mat-table {\n  background: white;\n}\n.mat-table thead, .mat-table tbody, .mat-table tfoot,\nmat-header-row, mat-row, mat-footer-row,\n[mat-header-row], [mat-row], [mat-footer-row],\n.mat-table-sticky {\n  background: inherit;\n}\nmat-row, mat-header-row, mat-footer-row,\nth.mat-header-cell, td.mat-cell, td.mat-footer-cell {\n  border-bottom-color: rgba(0, 0, 0, 0.12);\n}\n.mat-header-cell {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-cell, .mat-footer-cell {\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-calendar-arrow {\n  border-top-color: rgba(0, 0, 0, 0.54);\n}\n.mat-datepicker-toggle,\n.mat-datepicker-content .mat-calendar-next-button,\n.mat-datepicker-content .mat-calendar-previous-button {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-calendar-table-header {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mat-calendar-table-header-divider::after {\n  background: rgba(0, 0, 0, 0.12);\n}\n.mat-calendar-body-label {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-calendar-body-cell-content,\n.mat-date-range-input-separator {\n  color: rgba(0, 0, 0, 0.87);\n  border-color: transparent;\n}\n.mat-calendar-body-disabled > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mat-form-field-disabled .mat-date-range-input-separator {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),\n.cdk-keyboard-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),\n.cdk-program-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(0, 0, 0, 0.04);\n}\n.mat-calendar-body-in-preview {\n  color: rgba(0, 0, 0, 0.24);\n}\n.mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(0, 0, 0, 0.38);\n}\n.mat-calendar-body-disabled > .mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(0, 0, 0, 0.18);\n}\n.mat-calendar-body-in-range::before {\n  background: rgba(33, 150, 243, 0.2);\n}\n.mat-calendar-body-comparison-identical,\n.mat-calendar-body-in-comparison-range::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.mat-calendar-body-comparison-bridge-start::before,\n[dir=rtl] .mat-calendar-body-comparison-bridge-end::before {\n  background: linear-gradient(to right, rgba(33, 150, 243, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-calendar-body-comparison-bridge-end::before,\n[dir=rtl] .mat-calendar-body-comparison-bridge-start::before {\n  background: linear-gradient(to left, rgba(33, 150, 243, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\n.mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n  background: #a8dab5;\n}\n.mat-calendar-body-comparison-identical.mat-calendar-body-selected,\n.mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n  background: #46a35e;\n}\n.mat-calendar-body-selected {\n  background-color: #2196f3;\n  color: white;\n}\n.mat-calendar-body-disabled > .mat-calendar-body-selected {\n  background-color: rgba(33, 150, 243, 0.4);\n}\n.mat-calendar-body-today.mat-calendar-body-selected {\n  box-shadow: inset 0 0 0 1px white;\n}\n.mat-datepicker-content {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  background-color: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-in-range::before {\n  background: rgba(255, 64, 129, 0.2);\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-comparison-identical,\n.mat-datepicker-content.mat-accent .mat-calendar-body-in-comparison-range::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-comparison-bridge-start::before,\n.mat-datepicker-content.mat-accent [dir=rtl] .mat-calendar-body-comparison-bridge-end::before {\n  background: linear-gradient(to right, rgba(255, 64, 129, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-comparison-bridge-end::before,\n.mat-datepicker-content.mat-accent [dir=rtl] .mat-calendar-body-comparison-bridge-start::before {\n  background: linear-gradient(to left, rgba(255, 64, 129, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\n.mat-datepicker-content.mat-accent .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n  background: #a8dab5;\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-comparison-identical.mat-calendar-body-selected,\n.mat-datepicker-content.mat-accent .mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n  background: #46a35e;\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-selected {\n  background-color: #ff4081;\n  color: white;\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-disabled > .mat-calendar-body-selected {\n  background-color: rgba(255, 64, 129, 0.4);\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-today.mat-calendar-body-selected {\n  box-shadow: inset 0 0 0 1px white;\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-in-range::before {\n  background: rgba(244, 67, 54, 0.2);\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-comparison-identical,\n.mat-datepicker-content.mat-warn .mat-calendar-body-in-comparison-range::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-comparison-bridge-start::before,\n.mat-datepicker-content.mat-warn [dir=rtl] .mat-calendar-body-comparison-bridge-end::before {\n  background: linear-gradient(to right, rgba(244, 67, 54, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-comparison-bridge-end::before,\n.mat-datepicker-content.mat-warn [dir=rtl] .mat-calendar-body-comparison-bridge-start::before {\n  background: linear-gradient(to left, rgba(244, 67, 54, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\n.mat-datepicker-content.mat-warn .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n  background: #a8dab5;\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-comparison-identical.mat-calendar-body-selected,\n.mat-datepicker-content.mat-warn .mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n  background: #46a35e;\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-selected {\n  background-color: #f44336;\n  color: white;\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-disabled > .mat-calendar-body-selected {\n  background-color: rgba(244, 67, 54, 0.4);\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-today.mat-calendar-body-selected {\n  box-shadow: inset 0 0 0 1px white;\n}\n.mat-datepicker-content-touch {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-datepicker-toggle-active {\n  color: #2196f3;\n}\n.mat-datepicker-toggle-active.mat-accent {\n  color: #ff4081;\n}\n.mat-datepicker-toggle-active.mat-warn {\n  color: #f44336;\n}\n.mat-date-range-input-inner[disabled] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mat-dialog-container {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-divider {\n  border-top-color: rgba(0, 0, 0, 0.12);\n}\n.mat-divider-vertical {\n  border-right-color: rgba(0, 0, 0, 0.12);\n}\n.mat-expansion-panel {\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-expansion-panel:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-action-row {\n  border-top-color: rgba(0, 0, 0, 0.12);\n}\n.mat-expansion-panel .mat-expansion-panel-header.cdk-keyboard-focused:not([aria-disabled=true]), .mat-expansion-panel .mat-expansion-panel-header.cdk-program-focused:not([aria-disabled=true]), .mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:hover:not([aria-disabled=true]) {\n  background: rgba(0, 0, 0, 0.04);\n}\n@media (hover: none) {\n  .mat-expansion-panel:not(.mat-expanded):not([aria-disabled=true]) .mat-expansion-panel-header:hover {\n    background: white;\n  }\n}\n.mat-expansion-panel-header-title {\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-expansion-panel-header-description,\n.mat-expansion-indicator::after {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-expansion-panel-header[aria-disabled=true] {\n  color: rgba(0, 0, 0, 0.26);\n}\n.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-title,\n.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-description {\n  color: inherit;\n}\n.mat-expansion-panel-header {\n  height: 48px;\n}\n.mat-expansion-panel-header.mat-expanded {\n  height: 64px;\n}\n.mat-form-field-label {\n  color: rgba(0, 0, 0, 0.6);\n}\n.mat-hint {\n  color: rgba(0, 0, 0, 0.6);\n}\n.mat-form-field.mat-focused .mat-form-field-label {\n  color: #2196f3;\n}\n.mat-form-field.mat-focused .mat-form-field-label.mat-accent {\n  color: #ff4081;\n}\n.mat-form-field.mat-focused .mat-form-field-label.mat-warn {\n  color: #f44336;\n}\n.mat-focused .mat-form-field-required-marker {\n  color: #ff4081;\n}\n.mat-form-field-ripple {\n  background-color: rgba(0, 0, 0, 0.87);\n}\n.mat-form-field.mat-focused .mat-form-field-ripple {\n  background-color: #2196f3;\n}\n.mat-form-field.mat-focused .mat-form-field-ripple.mat-accent {\n  background-color: #ff4081;\n}\n.mat-form-field.mat-focused .mat-form-field-ripple.mat-warn {\n  background-color: #f44336;\n}\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid) .mat-form-field-infix::after {\n  color: #2196f3;\n}\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid).mat-accent .mat-form-field-infix::after {\n  color: #ff4081;\n}\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid).mat-warn .mat-form-field-infix::after {\n  color: #f44336;\n}\n.mat-form-field.mat-form-field-invalid .mat-form-field-label {\n  color: #f44336;\n}\n.mat-form-field.mat-form-field-invalid .mat-form-field-label.mat-accent,\n.mat-form-field.mat-form-field-invalid .mat-form-field-label .mat-form-field-required-marker {\n  color: #f44336;\n}\n.mat-form-field.mat-form-field-invalid .mat-form-field-ripple,\n.mat-form-field.mat-form-field-invalid .mat-form-field-ripple.mat-accent {\n  background-color: #f44336;\n}\n.mat-error {\n  color: #f44336;\n}\n.mat-form-field-appearance-legacy .mat-form-field-label {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-form-field-appearance-legacy .mat-hint {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-form-field-appearance-legacy .mat-form-field-underline {\n  background-color: rgba(0, 0, 0, 0.42);\n}\n.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline {\n  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.42) 0%, rgba(0, 0, 0, 0.42) 33%, transparent 0%);\n  background-size: 4px 100%;\n  background-repeat: repeat-x;\n}\n.mat-form-field-appearance-standard .mat-form-field-underline {\n  background-color: rgba(0, 0, 0, 0.42);\n}\n.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline {\n  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.42) 0%, rgba(0, 0, 0, 0.42) 33%, transparent 0%);\n  background-size: 4px 100%;\n  background-repeat: repeat-x;\n}\n.mat-form-field-appearance-fill .mat-form-field-flex {\n  background-color: rgba(0, 0, 0, 0.04);\n}\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-flex {\n  background-color: rgba(0, 0, 0, 0.02);\n}\n.mat-form-field-appearance-fill .mat-form-field-underline::before {\n  background-color: rgba(0, 0, 0, 0.42);\n}\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-label {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-underline::before {\n  background-color: transparent;\n}\n.mat-form-field-appearance-outline .mat-form-field-outline {\n  color: rgba(0, 0, 0, 0.12);\n}\n.mat-form-field-appearance-outline .mat-form-field-outline-thick {\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick {\n  color: #2196f3;\n}\n.mat-form-field-appearance-outline.mat-focused.mat-accent .mat-form-field-outline-thick {\n  color: #ff4081;\n}\n.mat-form-field-appearance-outline.mat-focused.mat-warn .mat-form-field-outline-thick {\n  color: #f44336;\n}\n.mat-form-field-appearance-outline.mat-form-field-invalid.mat-form-field-invalid .mat-form-field-outline-thick {\n  color: #f44336;\n}\n.mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-label {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-outline {\n  color: rgba(0, 0, 0, 0.06);\n}\n.mat-icon.mat-primary {\n  color: #2196f3;\n}\n.mat-icon.mat-accent {\n  color: #ff4081;\n}\n.mat-icon.mat-warn {\n  color: #f44336;\n}\n.mat-form-field-type-mat-native-select .mat-form-field-infix::after {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-input-element:disabled,\n.mat-form-field-type-mat-native-select.mat-form-field-disabled .mat-form-field-infix::after {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mat-input-element {\n  caret-color: #2196f3;\n}\n.mat-input-element::placeholder {\n  color: rgba(0, 0, 0, 0.42);\n}\n.mat-input-element::-moz-placeholder {\n  color: rgba(0, 0, 0, 0.42);\n}\n.mat-input-element::-webkit-input-placeholder {\n  color: rgba(0, 0, 0, 0.42);\n}\n.mat-input-element:-ms-input-placeholder {\n  color: rgba(0, 0, 0, 0.42);\n}\n.mat-form-field.mat-accent .mat-input-element {\n  caret-color: #ff4081;\n}\n.mat-form-field.mat-warn .mat-input-element,\n.mat-form-field-invalid .mat-input-element {\n  caret-color: #f44336;\n}\n.mat-form-field-type-mat-native-select.mat-form-field-invalid .mat-form-field-infix::after {\n  color: #f44336;\n}\n.mat-list-base .mat-list-item {\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-list-base .mat-list-option {\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-list-base .mat-subheader {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-list-item-disabled {\n  background-color: #eeeeee;\n}\n.mat-list-option:hover, .mat-list-option:focus,\n.mat-nav-list .mat-list-item:hover,\n.mat-nav-list .mat-list-item:focus,\n.mat-action-list .mat-list-item:hover,\n.mat-action-list .mat-list-item:focus {\n  background: rgba(0, 0, 0, 0.04);\n}\n.mat-list-single-selected-option, .mat-list-single-selected-option:hover, .mat-list-single-selected-option:focus {\n  background: rgba(0, 0, 0, 0.12);\n}\n.mat-menu-panel {\n  background: white;\n}\n.mat-menu-panel:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-menu-item {\n  background: transparent;\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-menu-item[disabled], .mat-menu-item[disabled]::after {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mat-menu-item .mat-icon-no-color,\n.mat-menu-item-submenu-trigger::after {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-menu-item:hover:not([disabled]),\n.mat-menu-item.cdk-program-focused:not([disabled]),\n.mat-menu-item.cdk-keyboard-focused:not([disabled]),\n.mat-menu-item-highlighted:not([disabled]) {\n  background: rgba(0, 0, 0, 0.04);\n}\n.mat-paginator {\n  background: white;\n}\n.mat-paginator,\n.mat-paginator-page-size .mat-select-trigger {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-paginator-decrement,\n.mat-paginator-increment {\n  border-top: 2px solid rgba(0, 0, 0, 0.54);\n  border-right: 2px solid rgba(0, 0, 0, 0.54);\n}\n.mat-paginator-first,\n.mat-paginator-last {\n  border-top: 2px solid rgba(0, 0, 0, 0.54);\n}\n.mat-icon-button[disabled] .mat-paginator-decrement,\n.mat-icon-button[disabled] .mat-paginator-increment,\n.mat-icon-button[disabled] .mat-paginator-first,\n.mat-icon-button[disabled] .mat-paginator-last {\n  border-color: rgba(0, 0, 0, 0.38);\n}\n.mat-paginator-container {\n  min-height: 56px;\n}\n.mat-progress-bar-background {\n  fill: #bbdefb;\n}\n.mat-progress-bar-buffer {\n  background-color: #bbdefb;\n}\n.mat-progress-bar-fill::after {\n  background-color: #2196f3;\n}\n.mat-progress-bar.mat-accent .mat-progress-bar-background {\n  fill: #ff80ab;\n}\n.mat-progress-bar.mat-accent .mat-progress-bar-buffer {\n  background-color: #ff80ab;\n}\n.mat-progress-bar.mat-accent .mat-progress-bar-fill::after {\n  background-color: #ff4081;\n}\n.mat-progress-bar.mat-warn .mat-progress-bar-background {\n  fill: #ffcdd2;\n}\n.mat-progress-bar.mat-warn .mat-progress-bar-buffer {\n  background-color: #ffcdd2;\n}\n.mat-progress-bar.mat-warn .mat-progress-bar-fill::after {\n  background-color: #f44336;\n}\n.mat-progress-spinner circle, .mat-spinner circle {\n  stroke: #2196f3;\n}\n.mat-progress-spinner.mat-accent circle, .mat-spinner.mat-accent circle {\n  stroke: #ff4081;\n}\n.mat-progress-spinner.mat-warn circle, .mat-spinner.mat-warn circle {\n  stroke: #f44336;\n}\n.mat-radio-outer-circle {\n  border-color: rgba(0, 0, 0, 0.54);\n}\n.mat-radio-button.mat-primary.mat-radio-checked .mat-radio-outer-circle {\n  border-color: #2196f3;\n}\n.mat-radio-button.mat-primary .mat-radio-inner-circle,\n.mat-radio-button.mat-primary .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple), .mat-radio-button.mat-primary.mat-radio-checked .mat-radio-persistent-ripple, .mat-radio-button.mat-primary:active .mat-radio-persistent-ripple {\n  background-color: #2196f3;\n}\n.mat-radio-button.mat-accent.mat-radio-checked .mat-radio-outer-circle {\n  border-color: #ff4081;\n}\n.mat-radio-button.mat-accent .mat-radio-inner-circle,\n.mat-radio-button.mat-accent .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple), .mat-radio-button.mat-accent.mat-radio-checked .mat-radio-persistent-ripple, .mat-radio-button.mat-accent:active .mat-radio-persistent-ripple {\n  background-color: #ff4081;\n}\n.mat-radio-button.mat-warn.mat-radio-checked .mat-radio-outer-circle {\n  border-color: #f44336;\n}\n.mat-radio-button.mat-warn .mat-radio-inner-circle,\n.mat-radio-button.mat-warn .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple), .mat-radio-button.mat-warn.mat-radio-checked .mat-radio-persistent-ripple, .mat-radio-button.mat-warn:active .mat-radio-persistent-ripple {\n  background-color: #f44336;\n}\n.mat-radio-button.mat-radio-disabled.mat-radio-checked .mat-radio-outer-circle,\n.mat-radio-button.mat-radio-disabled .mat-radio-outer-circle {\n  border-color: rgba(0, 0, 0, 0.38);\n}\n.mat-radio-button.mat-radio-disabled .mat-radio-ripple .mat-ripple-element,\n.mat-radio-button.mat-radio-disabled .mat-radio-inner-circle {\n  background-color: rgba(0, 0, 0, 0.38);\n}\n.mat-radio-button.mat-radio-disabled .mat-radio-label-content {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mat-radio-button .mat-ripple-element {\n  background-color: black;\n}\n.mat-select-value {\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-select-placeholder {\n  color: rgba(0, 0, 0, 0.42);\n}\n.mat-select-disabled .mat-select-value {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mat-select-arrow {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-select-panel {\n  background: white;\n}\n.mat-select-panel:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-select-panel .mat-option.mat-selected:not(.mat-option-multiple) {\n  background: rgba(0, 0, 0, 0.12);\n}\n.mat-form-field.mat-focused.mat-primary .mat-select-arrow {\n  color: #2196f3;\n}\n.mat-form-field.mat-focused.mat-accent .mat-select-arrow {\n  color: #ff4081;\n}\n.mat-form-field.mat-focused.mat-warn .mat-select-arrow {\n  color: #f44336;\n}\n.mat-form-field .mat-select.mat-select-invalid .mat-select-arrow {\n  color: #f44336;\n}\n.mat-form-field .mat-select.mat-select-disabled .mat-select-arrow {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mat-drawer-container {\n  background-color: #fafafa;\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-drawer {\n  background-color: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-drawer.mat-drawer-push {\n  background-color: white;\n}\n.mat-drawer:not(.mat-drawer-side) {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n.mat-drawer-side {\n  border-right: solid 1px rgba(0, 0, 0, 0.12);\n}\n.mat-drawer-side.mat-drawer-end {\n  border-left: solid 1px rgba(0, 0, 0, 0.12);\n  border-right: none;\n}\n[dir=rtl] .mat-drawer-side {\n  border-left: solid 1px rgba(0, 0, 0, 0.12);\n  border-right: none;\n}\n[dir=rtl] .mat-drawer-side.mat-drawer-end {\n  border-left: none;\n  border-right: solid 1px rgba(0, 0, 0, 0.12);\n}\n.mat-drawer-backdrop.mat-drawer-shown {\n  background-color: rgba(0, 0, 0, 0.6);\n}\n.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb {\n  background-color: #ff4081;\n}\n.mat-slide-toggle.mat-checked .mat-slide-toggle-bar {\n  background-color: rgba(255, 64, 129, 0.54);\n}\n.mat-slide-toggle.mat-checked .mat-ripple-element {\n  background-color: #ff4081;\n}\n.mat-slide-toggle.mat-primary.mat-checked .mat-slide-toggle-thumb {\n  background-color: #2196f3;\n}\n.mat-slide-toggle.mat-primary.mat-checked .mat-slide-toggle-bar {\n  background-color: rgba(33, 150, 243, 0.54);\n}\n.mat-slide-toggle.mat-primary.mat-checked .mat-ripple-element {\n  background-color: #2196f3;\n}\n.mat-slide-toggle.mat-warn.mat-checked .mat-slide-toggle-thumb {\n  background-color: #f44336;\n}\n.mat-slide-toggle.mat-warn.mat-checked .mat-slide-toggle-bar {\n  background-color: rgba(244, 67, 54, 0.54);\n}\n.mat-slide-toggle.mat-warn.mat-checked .mat-ripple-element {\n  background-color: #f44336;\n}\n.mat-slide-toggle:not(.mat-checked) .mat-ripple-element {\n  background-color: black;\n}\n.mat-slide-toggle-thumb {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n  background-color: #fafafa;\n}\n.mat-slide-toggle-bar {\n  background-color: rgba(0, 0, 0, 0.38);\n}\n.mat-slider-track-background {\n  background-color: rgba(0, 0, 0, 0.26);\n}\n.mat-primary .mat-slider-track-fill,\n.mat-primary .mat-slider-thumb,\n.mat-primary .mat-slider-thumb-label {\n  background-color: #2196f3;\n}\n.mat-primary .mat-slider-thumb-label-text {\n  color: white;\n}\n.mat-primary .mat-slider-focus-ring {\n  background-color: rgba(33, 150, 243, 0.2);\n}\n.mat-accent .mat-slider-track-fill,\n.mat-accent .mat-slider-thumb,\n.mat-accent .mat-slider-thumb-label {\n  background-color: #ff4081;\n}\n.mat-accent .mat-slider-thumb-label-text {\n  color: white;\n}\n.mat-accent .mat-slider-focus-ring {\n  background-color: rgba(255, 64, 129, 0.2);\n}\n.mat-warn .mat-slider-track-fill,\n.mat-warn .mat-slider-thumb,\n.mat-warn .mat-slider-thumb-label {\n  background-color: #f44336;\n}\n.mat-warn .mat-slider-thumb-label-text {\n  color: white;\n}\n.mat-warn .mat-slider-focus-ring {\n  background-color: rgba(244, 67, 54, 0.2);\n}\n.mat-slider:hover .mat-slider-track-background,\n.cdk-focused .mat-slider-track-background {\n  background-color: rgba(0, 0, 0, 0.38);\n}\n.mat-slider-disabled .mat-slider-track-background,\n.mat-slider-disabled .mat-slider-track-fill,\n.mat-slider-disabled .mat-slider-thumb {\n  background-color: rgba(0, 0, 0, 0.26);\n}\n.mat-slider-disabled:hover .mat-slider-track-background {\n  background-color: rgba(0, 0, 0, 0.26);\n}\n.mat-slider-min-value .mat-slider-focus-ring {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb,\n.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb-label {\n  background-color: rgba(0, 0, 0, 0.87);\n}\n.mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb,\n.mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb-label {\n  background-color: rgba(0, 0, 0, 0.26);\n}\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing) .mat-slider-thumb {\n  border-color: rgba(0, 0, 0, 0.26);\n  background-color: transparent;\n}\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover .mat-slider-thumb, .mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused .mat-slider-thumb {\n  border-color: rgba(0, 0, 0, 0.38);\n}\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover.mat-slider-disabled .mat-slider-thumb, .mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused.mat-slider-disabled .mat-slider-thumb {\n  border-color: rgba(0, 0, 0, 0.26);\n}\n.mat-slider-has-ticks .mat-slider-wrapper::after {\n  border-color: rgba(0, 0, 0, 0.7);\n}\n.mat-slider-horizontal .mat-slider-ticks {\n  background-image: repeating-linear-gradient(to right, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent);\n  background-image: -moz-repeating-linear-gradient(0.0001deg, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent);\n}\n.mat-slider-vertical .mat-slider-ticks {\n  background-image: repeating-linear-gradient(to bottom, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent);\n}\n.mat-step-header.cdk-keyboard-focused, .mat-step-header.cdk-program-focused, .mat-step-header:hover {\n  background-color: rgba(0, 0, 0, 0.04);\n}\n@media (hover: none) {\n  .mat-step-header:hover {\n    background: none;\n  }\n}\n.mat-step-header .mat-step-label,\n.mat-step-header .mat-step-optional {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-step-header .mat-step-icon {\n  background-color: rgba(0, 0, 0, 0.54);\n  color: white;\n}\n.mat-step-header .mat-step-icon-selected,\n.mat-step-header .mat-step-icon-state-done,\n.mat-step-header .mat-step-icon-state-edit {\n  background-color: #2196f3;\n  color: white;\n}\n.mat-step-header .mat-step-icon-state-error {\n  background-color: transparent;\n  color: #f44336;\n}\n.mat-step-header .mat-step-label.mat-step-label-active {\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-step-header .mat-step-label.mat-step-label-error {\n  color: #f44336;\n}\n.mat-stepper-horizontal, .mat-stepper-vertical {\n  background-color: white;\n}\n.mat-stepper-vertical-line::before {\n  border-left-color: rgba(0, 0, 0, 0.12);\n}\n.mat-horizontal-stepper-header::before,\n.mat-horizontal-stepper-header::after,\n.mat-stepper-horizontal-line {\n  border-top-color: rgba(0, 0, 0, 0.12);\n}\n.mat-horizontal-stepper-header {\n  height: 72px;\n}\n.mat-stepper-label-position-bottom .mat-horizontal-stepper-header,\n.mat-vertical-stepper-header {\n  padding: 24px 24px;\n}\n.mat-stepper-vertical-line::before {\n  top: -16px;\n  bottom: -16px;\n}\n.mat-stepper-label-position-bottom .mat-horizontal-stepper-header::after, .mat-stepper-label-position-bottom .mat-horizontal-stepper-header::before {\n  top: 36px;\n}\n.mat-stepper-label-position-bottom .mat-stepper-horizontal-line {\n  top: 36px;\n}\n.mat-sort-header-arrow {\n  color: #757575;\n}\n.mat-tab-nav-bar,\n.mat-tab-header {\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n}\n.mat-tab-group-inverted-header .mat-tab-nav-bar,\n.mat-tab-group-inverted-header .mat-tab-header {\n  border-top: 1px solid rgba(0, 0, 0, 0.12);\n  border-bottom: none;\n}\n.mat-tab-label, .mat-tab-link {\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-tab-label.mat-tab-disabled, .mat-tab-link.mat-tab-disabled {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mat-tab-header-pagination-chevron {\n  border-color: rgba(0, 0, 0, 0.87);\n}\n.mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n  border-color: rgba(0, 0, 0, 0.38);\n}\n.mat-tab-group[class*=mat-background-] .mat-tab-header,\n.mat-tab-nav-bar[class*=mat-background-] {\n  border-bottom: none;\n  border-top: none;\n}\n.mat-tab-group.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(187, 222, 251, 0.3);\n}\n.mat-tab-group.mat-primary .mat-ink-bar, .mat-tab-nav-bar.mat-primary .mat-ink-bar {\n  background-color: #2196f3;\n}\n.mat-tab-group.mat-primary.mat-background-primary .mat-ink-bar, .mat-tab-nav-bar.mat-primary.mat-background-primary .mat-ink-bar {\n  background-color: white;\n}\n.mat-tab-group.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(255, 128, 171, 0.3);\n}\n.mat-tab-group.mat-accent .mat-ink-bar, .mat-tab-nav-bar.mat-accent .mat-ink-bar {\n  background-color: #ff4081;\n}\n.mat-tab-group.mat-accent.mat-background-accent .mat-ink-bar, .mat-tab-nav-bar.mat-accent.mat-background-accent .mat-ink-bar {\n  background-color: white;\n}\n.mat-tab-group.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(255, 205, 210, 0.3);\n}\n.mat-tab-group.mat-warn .mat-ink-bar, .mat-tab-nav-bar.mat-warn .mat-ink-bar {\n  background-color: #f44336;\n}\n.mat-tab-group.mat-warn.mat-background-warn .mat-ink-bar, .mat-tab-nav-bar.mat-warn.mat-background-warn .mat-ink-bar {\n  background-color: white;\n}\n.mat-tab-group.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(187, 222, 251, 0.3);\n}\n.mat-tab-group.mat-background-primary .mat-tab-header, .mat-tab-group.mat-background-primary .mat-tab-links, .mat-tab-group.mat-background-primary .mat-tab-header-pagination, .mat-tab-nav-bar.mat-background-primary .mat-tab-header, .mat-tab-nav-bar.mat-background-primary .mat-tab-links, .mat-tab-nav-bar.mat-background-primary .mat-tab-header-pagination {\n  background-color: #2196f3;\n}\n.mat-tab-group.mat-background-primary .mat-tab-label, .mat-tab-group.mat-background-primary .mat-tab-link, .mat-tab-nav-bar.mat-background-primary .mat-tab-label, .mat-tab-nav-bar.mat-background-primary .mat-tab-link {\n  color: white;\n}\n.mat-tab-group.mat-background-primary .mat-tab-label.mat-tab-disabled, .mat-tab-group.mat-background-primary .mat-tab-link.mat-tab-disabled, .mat-tab-nav-bar.mat-background-primary .mat-tab-label.mat-tab-disabled, .mat-tab-nav-bar.mat-background-primary .mat-tab-link.mat-tab-disabled {\n  color: rgba(255, 255, 255, 0.4);\n}\n.mat-tab-group.mat-background-primary .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-primary .mat-tab-header-pagination-chevron {\n  border-color: white;\n}\n.mat-tab-group.mat-background-primary .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-primary .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n  border-color: rgba(255, 255, 255, 0.4);\n}\n.mat-tab-group.mat-background-primary .mat-ripple-element, .mat-tab-nav-bar.mat-background-primary .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.12);\n}\n.mat-tab-group.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(255, 128, 171, 0.3);\n}\n.mat-tab-group.mat-background-accent .mat-tab-header, .mat-tab-group.mat-background-accent .mat-tab-links, .mat-tab-group.mat-background-accent .mat-tab-header-pagination, .mat-tab-nav-bar.mat-background-accent .mat-tab-header, .mat-tab-nav-bar.mat-background-accent .mat-tab-links, .mat-tab-nav-bar.mat-background-accent .mat-tab-header-pagination {\n  background-color: #ff4081;\n}\n.mat-tab-group.mat-background-accent .mat-tab-label, .mat-tab-group.mat-background-accent .mat-tab-link, .mat-tab-nav-bar.mat-background-accent .mat-tab-label, .mat-tab-nav-bar.mat-background-accent .mat-tab-link {\n  color: white;\n}\n.mat-tab-group.mat-background-accent .mat-tab-label.mat-tab-disabled, .mat-tab-group.mat-background-accent .mat-tab-link.mat-tab-disabled, .mat-tab-nav-bar.mat-background-accent .mat-tab-label.mat-tab-disabled, .mat-tab-nav-bar.mat-background-accent .mat-tab-link.mat-tab-disabled {\n  color: rgba(255, 255, 255, 0.4);\n}\n.mat-tab-group.mat-background-accent .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-accent .mat-tab-header-pagination-chevron {\n  border-color: white;\n}\n.mat-tab-group.mat-background-accent .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-accent .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n  border-color: rgba(255, 255, 255, 0.4);\n}\n.mat-tab-group.mat-background-accent .mat-ripple-element, .mat-tab-nav-bar.mat-background-accent .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.12);\n}\n.mat-tab-group.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(255, 205, 210, 0.3);\n}\n.mat-tab-group.mat-background-warn .mat-tab-header, .mat-tab-group.mat-background-warn .mat-tab-links, .mat-tab-group.mat-background-warn .mat-tab-header-pagination, .mat-tab-nav-bar.mat-background-warn .mat-tab-header, .mat-tab-nav-bar.mat-background-warn .mat-tab-links, .mat-tab-nav-bar.mat-background-warn .mat-tab-header-pagination {\n  background-color: #f44336;\n}\n.mat-tab-group.mat-background-warn .mat-tab-label, .mat-tab-group.mat-background-warn .mat-tab-link, .mat-tab-nav-bar.mat-background-warn .mat-tab-label, .mat-tab-nav-bar.mat-background-warn .mat-tab-link {\n  color: white;\n}\n.mat-tab-group.mat-background-warn .mat-tab-label.mat-tab-disabled, .mat-tab-group.mat-background-warn .mat-tab-link.mat-tab-disabled, .mat-tab-nav-bar.mat-background-warn .mat-tab-label.mat-tab-disabled, .mat-tab-nav-bar.mat-background-warn .mat-tab-link.mat-tab-disabled {\n  color: rgba(255, 255, 255, 0.4);\n}\n.mat-tab-group.mat-background-warn .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-warn .mat-tab-header-pagination-chevron {\n  border-color: white;\n}\n.mat-tab-group.mat-background-warn .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-warn .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n  border-color: rgba(255, 255, 255, 0.4);\n}\n.mat-tab-group.mat-background-warn .mat-ripple-element, .mat-tab-nav-bar.mat-background-warn .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.12);\n}\n.mat-toolbar {\n  background: whitesmoke;\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-toolbar.mat-primary {\n  background: #2196f3;\n  color: white;\n}\n.mat-toolbar.mat-accent {\n  background: #ff4081;\n  color: white;\n}\n.mat-toolbar.mat-warn {\n  background: #f44336;\n  color: white;\n}\n.mat-toolbar .mat-form-field-underline,\n.mat-toolbar .mat-form-field-ripple,\n.mat-toolbar .mat-focused .mat-form-field-ripple {\n  background-color: currentColor;\n}\n.mat-toolbar .mat-form-field-label,\n.mat-toolbar .mat-focused .mat-form-field-label,\n.mat-toolbar .mat-select-value,\n.mat-toolbar .mat-select-arrow,\n.mat-toolbar .mat-form-field.mat-focused .mat-select-arrow {\n  color: inherit;\n}\n.mat-toolbar .mat-input-element {\n  caret-color: currentColor;\n}\n.mat-toolbar-multiple-rows {\n  min-height: 64px;\n}\n.mat-toolbar-row, .mat-toolbar-single-row {\n  height: 64px;\n}\n@media (max-width: 599px) {\n  .mat-toolbar-multiple-rows {\n    min-height: 56px;\n  }\n\n  .mat-toolbar-row, .mat-toolbar-single-row {\n    height: 56px;\n  }\n}\n.mat-tooltip {\n  background: rgba(97, 97, 97, 0.9);\n}\n.mat-tree {\n  background: white;\n}\n.mat-tree-node,\n.mat-nested-tree-node {\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-tree-node {\n  min-height: 48px;\n}\n.mat-snack-bar-container {\n  color: rgba(255, 255, 255, 0.7);\n  background: #323232;\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-simple-snackbar-action {\n  color: #ff4081;\n}\n/*\n * Global application theme.\n * Framework overrides and customization goes here.\n */\n* {\n  box-sizing: border-box;\n}\nhtml,\nbody {\n  display: flex;\n  flex-direction: column;\n  margin: 0;\n  height: 100%;\n}", "",{"version":3,"sources":["webpack://src/main.scss","webpack://src/theme/theme-variables.scss","webpack://node_modules/@angular/material/_theming.scss","webpack://node_modules/material-design-icons-iconfont/src/material-design-icons.scss","webpack://src/theme/theme.scss"],"names":[],"mappings":"AAAA,gBAAgB;AAAhB;;;EAAA;ACAA;;EAAA;AC2tDA,mCAAA;AAgJA,yDAAA;AA6XA,yDAAA;AAi1DA,2CAAA;AA6CA,qBAAA;AC7lIA;EACE,6BAAA;EACA,kBAAA;EACA,gBAAA;EACA,mBAAA;EACA,qCAAA;EAA0D,cAAA;EAC1D,0KAAA;AHMF;AGAA;EACE,6BAAA;EACA,mBAAA;EACA,kBAAA;EACA,eAAA;EAAiB,wBAAA;EACjB,qBAAA;EACA,cAAA;EACA,oBAAA;EACA,sBAAA;EACA,iBAAA;EACA,mBAAA;EACA,cAAA;EAEA,qCAAA;EACA,mCAAA;EACA,mCAAA;EACA,kCAAA;EACA,yBAAA;EACA,kCAAA;EACA,oBAAA;EACA,6BAAA;AHEF;AGQQ;EACE,gBAAA;AHNV;AGKQ;EACE,gBAAA;AHHV;AGEQ;EACE,gBAAA;AHAV;AGDQ;EACE,gBAAA;AHGV;AGJQ;EACE,gBAAA;AHMV;AGPQ;EACE,gBAAA;AHSV;AGVQ;EACE,gBAAA;AHYV;AGbQ;EACE,gBAAA;AHeV;AGhBQ;EACE,gBAAA;AHkBV;AGnBQ;EACE,gBAAA;AHqBV;AGtBQ;EACE,gBAAA;AHwBV;AGzBQ;EACE,gBAAA;AH2BV;AG5BQ;EACE,gBAAA;AH8BV;AG/BQ;EACE,gBAAA;AHiCV;AGlCQ;EACE,gBAAA;AHoCV;AGrCQ;EACE,gBAAA;AHuCV;AGxCQ;EACE,gBAAA;AH0CV;AG3CQ;EACE,gBAAA;AH6CV;AG9CQ;EACE,gBAAA;AHgDV;AGjDQ;EACE,gBAAA;AHmDV;AGpDQ;EACE,gBAAA;AHsDV;AGvDQ;EACE,gBAAA;AHyDV;AG1DQ;EACE,gBAAA;AH4DV;AG7DQ;EACE,gBAAA;AH+DV;AGhEQ;EACE,gBAAA;AHkEV;AGnEQ;EACE,gBAAA;AHqEV;AGtEQ;EACE,gBAAA;AHwEV;AGzEQ;EACE,gBAAA;AH2EV;AG5EQ;EACE,gBAAA;AH8EV;AG/EQ;EACE,gBAAA;AHiFV;AGlFQ;EACE,gBAAA;AHoFV;AGrFQ;EACE,gBAAA;AHuFV;AGxFQ;EACE,gBAAA;AH0FV;AG3FQ;EACE,gBAAA;AH6FV;AG9FQ;EACE,gBAAA;AHgGV;AGjGQ;EACE,gBAAA;AHmGV;AGpGQ;EACE,gBAAA;AHsGV;AGvGQ;EACE,gBAAA;AHyGV;AG1GQ;EACE,gBAAA;AH4GV;AG7GQ;EACE,gBAAA;AH+GV;AGhHQ;EACE,gBAAA;AHkHV;AGnHQ;EACE,gBAAA;AHqHV;AGtHQ;EACE,gBAAA;AHwHV;AGzHQ;EACE,gBAAA;AH2HV;AG5HQ;EACE,gBAAA;AH8HV;AG/HQ;EACE,gBAAA;AHiIV;AGlIQ;EACE,gBAAA;AHoIV;AGrIQ;EACE,gBAAA;AHuIV;AGxIQ;EACE,gBAAA;AH0IV;AG3IQ;EACE,gBAAA;AH6IV;AG9IQ;EACE,gBAAA;AHgJV;AGjJQ;EACE,gBAAA;AHmJV;AGpJQ;EACE,gBAAA;AHsJV;AGvJQ;EACE,gBAAA;AHyJV;AG1JQ;EACE,gBAAA;AH4JV;AG7JQ;EACE,gBAAA;AH+JV;AGhKQ;EACE,gBAAA;AHkKV;AGnKQ;EACE,gBAAA;AHqKV;AGtKQ;EACE,gBAAA;AHwKV;AGzKQ;EACE,gBAAA;AH2KV;AG5KQ;EACE,gBAAA;AH8KV;AG/KQ;EACE,gBAAA;AHiLV;AGlLQ;EACE,gBAAA;AHoLV;AGrLQ;EACE,gBAAA;AHuLV;AGxLQ;EACE,gBAAA;AH0LV;AG3LQ;EACE,gBAAA;AH6LV;AG9LQ;EACE,gBAAA;AHgMV;AGjMQ;EACE,gBAAA;AHmMV;AGpMQ;EACE,gBAAA;AHsMV;AGvMQ;EACE,gBAAA;AHyMV;AG1MQ;EACE,gBAAA;AH4MV;AG7MQ;EACE,gBAAA;AH+MV;AGhNQ;EACE,gBAAA;AHkNV;AGnNQ;EACE,gBAAA;AHqNV;AGtNQ;EACE,gBAAA;AHwNV;AGzNQ;EACE,gBAAA;AH2NV;AG5NQ;EACE,gBAAA;AH8NV;AG/NQ;EACE,gBAAA;AHiOV;AGlOQ;EACE,gBAAA;AHoOV;AGrOQ;EACE,gBAAA;AHuOV;AGxOQ;EACE,gBAAA;AH0OV;AG3OQ;EACE,gBAAA;AH6OV;AG9OQ;EACE,gBAAA;AHgPV;AGjPQ;EACE,gBAAA;AHmPV;AGpPQ;EACE,gBAAA;AHsPV;AGvPQ;EACE,gBAAA;AHyPV;AG1PQ;EACE,gBAAA;AH4PV;AG7PQ;EACE,gBAAA;AH+PV;AGhQQ;EACE,gBAAA;AHkQV;AGnQQ;EACE,gBAAA;AHqQV;AGtQQ;EACE,gBAAA;AHwQV;AGzQQ;EACE,gBAAA;AH2QV;AG5QQ;EACE,gBAAA;AH8QV;AG/QQ;EACE,gBAAA;AHiRV;AGlRQ;EACE,gBAAA;AHoRV;AGrRQ;EACE,gBAAA;AHuRV;AGxRQ;EACE,gBAAA;AH0RV;AG3RQ;EACE,gBAAA;AH6RV;AG9RQ;EACE,gBAAA;AHgSV;AGjSQ;EACE,gBAAA;AHmSV;AGpSQ;EACE,gBAAA;AHsSV;AGvSQ;EACE,gBAAA;AHySV;AG1SQ;EACE,gBAAA;AH4SV;AG7SQ;EACE,gBAAA;AH+SV;AGhTQ;EACE,gBAAA;AHkTV;AGnTQ;EACE,gBAAA;AHqTV;AGtTQ;EACE,gBAAA;AHwTV;AGzTQ;EACE,gBAAA;AH2TV;AG5TQ;EACE,gBAAA;AH8TV;AG/TQ;EACE,gBAAA;AHiUV;AGlUQ;EACE,gBAAA;AHoUV;AGrUQ;EACE,gBAAA;AHuUV;AGxUQ;EACE,gBAAA;AH0UV;AG3UQ;EACE,gBAAA;AH6UV;AG9UQ;EACE,gBAAA;AHgVV;AGjVQ;EACE,gBAAA;AHmVV;AGpVQ;EACE,gBAAA;AHsVV;AGvVQ;EACE,gBAAA;AHyVV;AG1VQ;EACE,gBAAA;AH4VV;AG7VQ;EACE,gBAAA;AH+VV;AGhWQ;EACE,gBAAA;AHkWV;AGnWQ;EACE,gBAAA;AHqWV;AGtWQ;EACE,gBAAA;AHwWV;AGzWQ;EACE,gBAAA;AH2WV;AG5WQ;EACE,gBAAA;AH8WV;AG/WQ;EACE,gBAAA;AHiXV;AGlXQ;EACE,gBAAA;AHoXV;AGrXQ;EACE,gBAAA;AHuXV;AGxXQ;EACE,gBAAA;AH0XV;AG3XQ;EACE,gBAAA;AH6XV;AG9XQ;EACE,gBAAA;AHgYV;AGjYQ;EACE,gBAAA;AHmYV;AGpYQ;EACE,gBAAA;AHsYV;AGvYQ;EACE,gBAAA;AHyYV;AG1YQ;EACE,gBAAA;AH4YV;AG7YQ;EACE,gBAAA;AH+YV;AGhZQ;EACE,gBAAA;AHkZV;AGnZQ;EACE,gBAAA;AHqZV;AGtZQ;EACE,gBAAA;AHwZV;AGzZQ;EACE,gBAAA;AH2ZV;AG5ZQ;EACE,gBAAA;AH8ZV;AG/ZQ;EACE,gBAAA;AHiaV;AGlaQ;EACE,gBAAA;AHoaV;AGraQ;EACE,gBAAA;AHuaV;AGxaQ;EACE,gBAAA;AH0aV;AG3aQ;EACE,gBAAA;AH6aV;AG9aQ;EACE,gBAAA;AHgbV;AGjbQ;EACE,gBAAA;AHmbV;AGpbQ;EACE,gBAAA;AHsbV;AGvbQ;EACE,gBAAA;AHybV;AG1bQ;EACE,gBAAA;AH4bV;AG7bQ;EACE,gBAAA;AH+bV;AGhcQ;EACE,gBAAA;AHkcV;AGncQ;EACE,gBAAA;AHqcV;AGtcQ;EACE,gBAAA;AHwcV;AGzcQ;EACE,gBAAA;AH2cV;AG5cQ;EACE,gBAAA;AH8cV;AG/cQ;EACE,gBAAA;AHidV;AGldQ;EACE,gBAAA;AHodV;AGrdQ;EACE,gBAAA;AHudV;AGxdQ;EACE,gBAAA;AH0dV;AG3dQ;EACE,gBAAA;AH6dV;AG9dQ;EACE,gBAAA;AHgeV;AGjeQ;EACE,gBAAA;AHmeV;AGpeQ;EACE,gBAAA;AHseV;AGveQ;EACE,gBAAA;AHyeV;AG1eQ;EACE,gBAAA;AH4eV;AG7eQ;EACE,gBAAA;AH+eV;AGhfQ;EACE,gBAAA;AHkfV;AGnfQ;EACE,gBAAA;AHqfV;AGtfQ;EACE,gBAAA;AHwfV;AGzfQ;EACE,gBAAA;AH2fV;AG5fQ;EACE,gBAAA;AH8fV;AG/fQ;EACE,gBAAA;AHigBV;AGlgBQ;EACE,gBAAA;AHogBV;AGrgBQ;EACE,gBAAA;AHugBV;AGxgBQ;EACE,gBAAA;AH0gBV;AG3gBQ;EACE,gBAAA;AH6gBV;AG9gBQ;EACE,gBAAA;AHghBV;AGjhBQ;EACE,gBAAA;AHmhBV;AGphBQ;EACE,gBAAA;AHshBV;AGvhBQ;EACE,gBAAA;AHyhBV;AG1hBQ;EACE,gBAAA;AH4hBV;AG7hBQ;EACE,gBAAA;AH+hBV;AGhiBQ;EACE,gBAAA;AHkiBV;AGniBQ;EACE,gBAAA;AHqiBV;AGtiBQ;EACE,gBAAA;AHwiBV;AGziBQ;EACE,gBAAA;AH2iBV;AG5iBQ;EACE,gBAAA;AH8iBV;AG/iBQ;EACE,gBAAA;AHijBV;AGljBQ;EACE,gBAAA;AHojBV;AGrjBQ;EACE,gBAAA;AHujBV;AGxjBQ;EACE,gBAAA;AH0jBV;AG3jBQ;EACE,gBAAA;AH6jBV;AG9jBQ;EACE,gBAAA;AHgkBV;AGjkBQ;EACE,gBAAA;AHmkBV;AGpkBQ;EACE,gBAAA;AHskBV;AGvkBQ;EACE,gBAAA;AHykBV;AG1kBQ;EACE,gBAAA;AH4kBV;AG7kBQ;EACE,gBAAA;AH+kBV;AGhlBQ;EACE,gBAAA;AHklBV;AGnlBQ;EACE,gBAAA;AHqlBV;AGtlBQ;EACE,gBAAA;AHwlBV;AGzlBQ;EACE,gBAAA;AH2lBV;AG5lBQ;EACE,gBAAA;AH8lBV;AG/lBQ;EACE,gBAAA;AHimBV;AGlmBQ;EACE,gBAAA;AHomBV;AGrmBQ;EACE,gBAAA;AHumBV;AGxmBQ;EACE,gBAAA;AH0mBV;AG3mBQ;EACE,gBAAA;AH6mBV;AG9mBQ;EACE,gBAAA;AHgnBV;AGjnBQ;EACE,gBAAA;AHmnBV;AGpnBQ;EACE,gBAAA;AHsnBV;AGvnBQ;EACE,gBAAA;AHynBV;AG1nBQ;EACE,gBAAA;AH4nBV;AG7nBQ;EACE,gBAAA;AH+nBV;AGhoBQ;EACE,gBAAA;AHkoBV;AGnoBQ;EACE,gBAAA;AHqoBV;AGtoBQ;EACE,gBAAA;AHwoBV;AGzoBQ;EACE,gBAAA;AH2oBV;AG5oBQ;EACE,gBAAA;AH8oBV;AG/oBQ;EACE,gBAAA;AHipBV;AGlpBQ;EACE,gBAAA;AHopBV;AGrpBQ;EACE,gBAAA;AHupBV;AGxpBQ;EACE,gBAAA;AH0pBV;AG3pBQ;EACE,gBAAA;AH6pBV;AG9pBQ;EACE,gBAAA;AHgqBV;AGjqBQ;EACE,gBAAA;AHmqBV;AGpqBQ;EACE,gBAAA;AHsqBV;AGvqBQ;EACE,gBAAA;AHyqBV;AG1qBQ;EACE,gBAAA;AH4qBV;AG7qBQ;EACE,gBAAA;AH+qBV;AGhrBQ;EACE,gBAAA;AHkrBV;AGnrBQ;EACE,gBAAA;AHqrBV;AGtrBQ;EACE,gBAAA;AHwrBV;AGzrBQ;EACE,gBAAA;AH2rBV;AG5rBQ;EACE,gBAAA;AH8rBV;AG/rBQ;EACE,gBAAA;AHisBV;AGlsBQ;EACE,gBAAA;AHosBV;AGrsBQ;EACE,gBAAA;AHusBV;AGxsBQ;EACE,gBAAA;AH0sBV;AG3sBQ;EACE,gBAAA;AH6sBV;AG9sBQ;EACE,gBAAA;AHgtBV;AGjtBQ;EACE,gBAAA;AHmtBV;AGptBQ;EACE,gBAAA;AHstBV;AGvtBQ;EACE,gBAAA;AHytBV;AG1tBQ;EACE,gBAAA;AH4tBV;AG7tBQ;EACE,gBAAA;AH+tBV;AGhuBQ;EACE,gBAAA;AHkuBV;AGnuBQ;EACE,gBAAA;AHquBV;AGtuBQ;EACE,gBAAA;AHwuBV;AGzuBQ;EACE,gBAAA;AH2uBV;AG5uBQ;EACE,gBAAA;AH8uBV;AG/uBQ;EACE,gBAAA;AHivBV;AGlvBQ;EACE,gBAAA;AHovBV;AGrvBQ;EACE,gBAAA;AHuvBV;AGxvBQ;EACE,gBAAA;AH0vBV;AG3vBQ;EACE,gBAAA;AH6vBV;AG9vBQ;EACE,gBAAA;AHgwBV;AGjwBQ;EACE,gBAAA;AHmwBV;AGpwBQ;EACE,gBAAA;AHswBV;AGvwBQ;EACE,gBAAA;AHywBV;AG1wBQ;EACE,gBAAA;AH4wBV;AG7wBQ;EACE,gBAAA;AH+wBV;AGhxBQ;EACE,gBAAA;AHkxBV;AGnxBQ;EACE,gBAAA;AHqxBV;AGtxBQ;EACE,gBAAA;AHwxBV;AGzxBQ;EACE,gBAAA;AH2xBV;AG5xBQ;EACE,gBAAA;AH8xBV;AG/xBQ;EACE,gBAAA;AHiyBV;AGlyBQ;EACE,gBAAA;AHoyBV;AGryBQ;EACE,gBAAA;AHuyBV;AGxyBQ;EACE,gBAAA;AH0yBV;AG3yBQ;EACE,gBAAA;AH6yBV;AG9yBQ;EACE,gBAAA;AHgzBV;AGjzBQ;EACE,gBAAA;AHmzBV;AGpzBQ;EACE,gBAAA;AHszBV;AGvzBQ;EACE,gBAAA;AHyzBV;AG1zBQ;EACE,gBAAA;AH4zBV;AG7zBQ;EACE,gBAAA;AH+zBV;AGh0BQ;EACE,gBAAA;AHk0BV;AGn0BQ;EACE,gBAAA;AHq0BV;AGt0BQ;EACE,gBAAA;AHw0BV;AGz0BQ;EACE,gBAAA;AH20BV;AG50BQ;EACE,gBAAA;AH80BV;AG/0BQ;EACE,gBAAA;AHi1BV;AGl1BQ;EACE,gBAAA;AHo1BV;AGr1BQ;EACE,gBAAA;AHu1BV;AGx1BQ;EACE,gBAAA;AH01BV;AG31BQ;EACE,gBAAA;AH61BV;AG91BQ;EACE,gBAAA;AHg2BV;AGj2BQ;EACE,gBAAA;AHm2BV;AGp2BQ;EACE,gBAAA;AHs2BV;AGv2BQ;EACE,gBAAA;AHy2BV;AG12BQ;EACE,gBAAA;AH42BV;AG72BQ;EACE,gBAAA;AH+2BV;AGh3BQ;EACE,gBAAA;AHk3BV;AGn3BQ;EACE,gBAAA;AHq3BV;AGt3BQ;EACE,gBAAA;AHw3BV;AGz3BQ;EACE,gBAAA;AH23BV;AG53BQ;EACE,gBAAA;AH83BV;AG/3BQ;EACE,gBAAA;AHi4BV;AGl4BQ;EACE,gBAAA;AHo4BV;AGr4BQ;EACE,gBAAA;AHu4BV;AGx4BQ;EACE,gBAAA;AH04BV;AG34BQ;EACE,gBAAA;AH64BV;AG94BQ;EACE,gBAAA;AHg5BV;AGj5BQ;EACE,gBAAA;AHm5BV;AGp5BQ;EACE,gBAAA;AHs5BV;AGv5BQ;EACE,gBAAA;AHy5BV;AG15BQ;EACE,gBAAA;AH45BV;AG75BQ;EACE,gBAAA;AH+5BV;AGh6BQ;EACE,gBAAA;AHk6BV;AGn6BQ;EACE,gBAAA;AHq6BV;AGt6BQ;EACE,gBAAA;AHw6BV;AGz6BQ;EACE,gBAAA;AH26BV;AG56BQ;EACE,gBAAA;AH86BV;AG/6BQ;EACE,gBAAA;AHi7BV;AGl7BQ;EACE,gBAAA;AHo7BV;AGr7BQ;EACE,gBAAA;AHu7BV;AGx7BQ;EACE,gBAAA;AH07BV;AG37BQ;EACE,gBAAA;AH67BV;AG97BQ;EACE,gBAAA;AHg8BV;AGj8BQ;EACE,gBAAA;AHm8BV;AGp8BQ;EACE,gBAAA;AHs8BV;AGv8BQ;EACE,gBAAA;AHy8BV;AG18BQ;EACE,gBAAA;AH48BV;AG78BQ;EACE,gBAAA;AH+8BV;AGh9BQ;EACE,gBAAA;AHk9BV;AGn9BQ;EACE,gBAAA;AHq9BV;AGt9BQ;EACE,gBAAA;AHw9BV;AGz9BQ;EACE,gBAAA;AH29BV;AG59BQ;EACE,gBAAA;AH89BV;AG/9BQ;EACE,gBAAA;AHi+BV;AGl+BQ;EACE,gBAAA;AHo+BV;AGr+BQ;EACE,gBAAA;AHu+BV;AGx+BQ;EACE,gBAAA;AH0+BV;AG3+BQ;EACE,gBAAA;AH6+BV;AG9+BQ;EACE,gBAAA;AHg/BV;AGj/BQ;EACE,gBAAA;AHm/BV;AGp/BQ;EACE,gBAAA;AHs/BV;AGv/BQ;EACE,gBAAA;AHy/BV;AG1/BQ;EACE,gBAAA;AH4/BV;AG7/BQ;EACE,gBAAA;AH+/BV;AGhgCQ;EACE,gBAAA;AHkgCV;AGngCQ;EACE,gBAAA;AHqgCV;AGtgCQ;EACE,gBAAA;AHwgCV;AGzgCQ;EACE,gBAAA;AH2gCV;AG5gCQ;EACE,gBAAA;AH8gCV;AG/gCQ;EACE,gBAAA;AHihCV;AGlhCQ;EACE,gBAAA;AHohCV;AGrhCQ;EACE,gBAAA;AHuhCV;AGxhCQ;EACE,gBAAA;AH0hCV;AG3hCQ;EACE,gBAAA;AH6hCV;AG9hCQ;EACE,gBAAA;AHgiCV;AGjiCQ;EACE,gBAAA;AHmiCV;AGpiCQ;EACE,gBAAA;AHsiCV;AGviCQ;EACE,gBAAA;AHyiCV;AG1iCQ;EACE,gBAAA;AH4iCV;AG7iCQ;EACE,gBAAA;AH+iCV;AGhjCQ;EACE,gBAAA;AHkjCV;AGnjCQ;EACE,gBAAA;AHqjCV;AGtjCQ;EACE,gBAAA;AHwjCV;AGzjCQ;EACE,gBAAA;AH2jCV;AG5jCQ;EACE,gBAAA;AH8jCV;AG/jCQ;EACE,gBAAA;AHikCV;AGlkCQ;EACE,gBAAA;AHokCV;AGrkCQ;EACE,gBAAA;AHukCV;AGxkCQ;EACE,gBAAA;AH0kCV;AG3kCQ;EACE,gBAAA;AH6kCV;AG9kCQ;EACE,gBAAA;AHglCV;AGjlCQ;EACE,gBAAA;AHmlCV;AGplCQ;EACE,gBAAA;AHslCV;AGvlCQ;EACE,gBAAA;AHylCV;AG1lCQ;EACE,gBAAA;AH4lCV;AG7lCQ;EACE,gBAAA;AH+lCV;AGhmCQ;EACE,gBAAA;AHkmCV;AGnmCQ;EACE,gBAAA;AHqmCV;AGtmCQ;EACE,gBAAA;AHwmCV;AGzmCQ;EACE,gBAAA;AH2mCV;AG5mCQ;EACE,gBAAA;AH8mCV;AG/mCQ;EACE,gBAAA;AHinCV;AGlnCQ;EACE,gBAAA;AHonCV;AGrnCQ;EACE,gBAAA;AHunCV;AGxnCQ;EACE,gBAAA;AH0nCV;AG3nCQ;EACE,gBAAA;AH6nCV;AG9nCQ;EACE,gBAAA;AHgoCV;AGjoCQ;EACE,gBAAA;AHmoCV;AGpoCQ;EACE,gBAAA;AHsoCV;AGvoCQ;EACE,gBAAA;AHyoCV;AG1oCQ;EACE,gBAAA;AH4oCV;AG7oCQ;EACE,gBAAA;AH+oCV;AGhpCQ;EACE,gBAAA;AHkpCV;AGnpCQ;EACE,gBAAA;AHqpCV;AGtpCQ;EACE,gBAAA;AHwpCV;AGzpCQ;EACE,gBAAA;AH2pCV;AG5pCQ;EACE,gBAAA;AH8pCV;AG/pCQ;EACE,gBAAA;AHiqCV;AGlqCQ;EACE,gBAAA;AHoqCV;AGrqCQ;EACE,gBAAA;AHuqCV;AGxqCQ;EACE,gBAAA;AH0qCV;AG3qCQ;EACE,gBAAA;AH6qCV;AG9qCQ;EACE,gBAAA;AHgrCV;AGjrCQ;EACE,gBAAA;AHmrCV;AGprCQ;EACE,gBAAA;AHsrCV;AGvrCQ;EACE,gBAAA;AHyrCV;AG1rCQ;EACE,gBAAA;AH4rCV;AG7rCQ;EACE,gBAAA;AH+rCV;AGhsCQ;EACE,gBAAA;AHksCV;AGnsCQ;EACE,gBAAA;AHqsCV;AGtsCQ;EACE,gBAAA;AHwsCV;AGzsCQ;EACE,gBAAA;AH2sCV;AG5sCQ;EACE,gBAAA;AH8sCV;AG/sCQ;EACE,gBAAA;AHitCV;AGltCQ;EACE,gBAAA;AHotCV;AGrtCQ;EACE,gBAAA;AHutCV;AGxtCQ;EACE,gBAAA;AH0tCV;AG3tCQ;EACE,gBAAA;AH6tCV;AG9tCQ;EACE,gBAAA;AHguCV;AGjuCQ;EACE,gBAAA;AHmuCV;AGpuCQ;EACE,gBAAA;AHsuCV;AGvuCQ;EACE,gBAAA;AHyuCV;AG1uCQ;EACE,gBAAA;AH4uCV;AG7uCQ;EACE,gBAAA;AH+uCV;AGhvCQ;EACE,gBAAA;AHkvCV;AGnvCQ;EACE,gBAAA;AHqvCV;AGtvCQ;EACE,gBAAA;AHwvCV;AGzvCQ;EACE,gBAAA;AH2vCV;AG5vCQ;EACE,gBAAA;AH8vCV;AG/vCQ;EACE,gBAAA;AHiwCV;AGlwCQ;EACE,gBAAA;AHowCV;AGrwCQ;EACE,gBAAA;AHuwCV;AGxwCQ;EACE,gBAAA;AH0wCV;AG3wCQ;EACE,gBAAA;AH6wCV;AG9wCQ;EACE,gBAAA;AHgxCV;AGjxCQ;EACE,gBAAA;AHmxCV;AGpxCQ;EACE,gBAAA;AHsxCV;AGvxCQ;EACE,gBAAA;AHyxCV;AG1xCQ;EACE,gBAAA;AH4xCV;AG7xCQ;EACE,gBAAA;AH+xCV;AGhyCQ;EACE,gBAAA;AHkyCV;AGnyCQ;EACE,gBAAA;AHqyCV;AGtyCQ;EACE,gBAAA;AHwyCV;AGzyCQ;EACE,gBAAA;AH2yCV;AG5yCQ;EACE,gBAAA;AH8yCV;AG/yCQ;EACE,gBAAA;AHizCV;AGlzCQ;EACE,gBAAA;AHozCV;AGrzCQ;EACE,gBAAA;AHuzCV;AGxzCQ;EACE,gBAAA;AH0zCV;AG3zCQ;EACE,gBAAA;AH6zCV;AG9zCQ;EACE,gBAAA;AHg0CV;AGj0CQ;EACE,gBAAA;AHm0CV;AGp0CQ;EACE,gBAAA;AHs0CV;AGv0CQ;EACE,gBAAA;AHy0CV;AG10CQ;EACE,gBAAA;AH40CV;AG70CQ;EACE,gBAAA;AH+0CV;AGh1CQ;EACE,gBAAA;AHk1CV;AGn1CQ;EACE,gBAAA;AHq1CV;AGt1CQ;EACE,gBAAA;AHw1CV;AGz1CQ;EACE,gBAAA;AH21CV;AG51CQ;EACE,gBAAA;AH81CV;AG/1CQ;EACE,gBAAA;AHi2CV;AGl2CQ;EACE,gBAAA;AHo2CV;AGr2CQ;EACE,gBAAA;AHu2CV;AGx2CQ;EACE,gBAAA;AH02CV;AG32CQ;EACE,gBAAA;AH62CV;AG92CQ;EACE,gBAAA;AHg3CV;AGj3CQ;EACE,gBAAA;AHm3CV;AGp3CQ;EACE,gBAAA;AHs3CV;AGv3CQ;EACE,gBAAA;AHy3CV;AG13CQ;EACE,gBAAA;AH43CV;AG73CQ;EACE,gBAAA;AH+3CV;AGh4CQ;EACE,gBAAA;AHk4CV;AGn4CQ;EACE,gBAAA;AHq4CV;AGt4CQ;EACE,gBAAA;AHw4CV;AGz4CQ;EACE,gBAAA;AH24CV;AG54CQ;EACE,gBAAA;AH84CV;AG/4CQ;EACE,gBAAA;AHi5CV;AGl5CQ;EACE,gBAAA;AHo5CV;AGr5CQ;EACE,gBAAA;AHu5CV;AGx5CQ;EACE,gBAAA;AH05CV;AG35CQ;EACE,gBAAA;AH65CV;AG95CQ;EACE,gBAAA;AHg6CV;AGj6CQ;EACE,gBAAA;AHm6CV;AGp6CQ;EACE,gBAAA;AHs6CV;AGv6CQ;EACE,gBAAA;AHy6CV;AG16CQ;EACE,gBAAA;AH46CV;AG76CQ;EACE,gBAAA;AH+6CV;AGh7CQ;EACE,gBAAA;AHk7CV;AGn7CQ;EACE,gBAAA;AHq7CV;AGt7CQ;EACE,gBAAA;AHw7CV;AGz7CQ;EACE,gBAAA;AH27CV;AG57CQ;EACE,gBAAA;AH87CV;AG/7CQ;EACE,gBAAA;AHi8CV;AGl8CQ;EACE,gBAAA;AHo8CV;AGr8CQ;EACE,gBAAA;AHu8CV;AGx8CQ;EACE,gBAAA;AH08CV;AG38CQ;EACE,gBAAA;AH68CV;AG98CQ;EACE,gBAAA;AHg9CV;AGj9CQ;EACE,gBAAA;AHm9CV;AGp9CQ;EACE,gBAAA;AHs9CV;AGv9CQ;EACE,gBAAA;AHy9CV;AG19CQ;EACE,gBAAA;AH49CV;AG79CQ;EACE,gBAAA;AH+9CV;AGh+CQ;EACE,gBAAA;AHk+CV;AGn+CQ;EACE,gBAAA;AHq+CV;AGt+CQ;EACE,gBAAA;AHw+CV;AGz+CQ;EACE,gBAAA;AH2+CV;AG5+CQ;EACE,gBAAA;AH8+CV;AG/+CQ;EACE,gBAAA;AHi/CV;AGl/CQ;EACE,gBAAA;AHo/CV;AGr/CQ;EACE,gBAAA;AHu/CV;AGx/CQ;EACE,gBAAA;AH0/CV;AG3/CQ;EACE,gBAAA;AH6/CV;AG9/CQ;EACE,gBAAA;AHggDV;AGjgDQ;EACE,gBAAA;AHmgDV;AGpgDQ;EACE,gBAAA;AHsgDV;AGvgDQ;EACE,gBAAA;AHygDV;AG1gDQ;EACE,gBAAA;AH4gDV;AG7gDQ;EACE,gBAAA;AH+gDV;AGhhDQ;EACE,gBAAA;AHkhDV;AGnhDQ;EACE,gBAAA;AHqhDV;AGthDQ;EACE,gBAAA;AHwhDV;AGzhDQ;EACE,gBAAA;AH2hDV;AG5hDQ;EACE,gBAAA;AH8hDV;AG/hDQ;EACE,gBAAA;AHiiDV;AGliDQ;EACE,gBAAA;AHoiDV;AGriDQ;EACE,gBAAA;AHuiDV;AGxiDQ;EACE,gBAAA;AH0iDV;AG3iDQ;EACE,gBAAA;AH6iDV;AG9iDQ;EACE,gBAAA;AHgjDV;AGjjDQ;EACE,gBAAA;AHmjDV;AGpjDQ;EACE,gBAAA;AHsjDV;AGvjDQ;EACE,gBAAA;AHyjDV;AG1jDQ;EACE,gBAAA;AH4jDV;AG7jDQ;EACE,gBAAA;AH+jDV;AGhkDQ;EACE,gBAAA;AHkkDV;AGnkDQ;EACE,gBAAA;AHqkDV;AGtkDQ;EACE,gBAAA;AHwkDV;AGzkDQ;EACE,gBAAA;AH2kDV;AG5kDQ;EACE,gBAAA;AH8kDV;AG/kDQ;EACE,gBAAA;AHilDV;AGllDQ;EACE,gBAAA;AHolDV;AGrlDQ;EACE,gBAAA;AHulDV;AGxlDQ;EACE,gBAAA;AH0lDV;AG3lDQ;EACE,gBAAA;AH6lDV;AG9lDQ;EACE,gBAAA;AHgmDV;AGjmDQ;EACE,gBAAA;AHmmDV;AGpmDQ;EACE,gBAAA;AHsmDV;AGvmDQ;EACE,gBAAA;AHymDV;AG1mDQ;EACE,gBAAA;AH4mDV;AG7mDQ;EACE,gBAAA;AH+mDV;AGhnDQ;EACE,gBAAA;AHknDV;AGnnDQ;EACE,gBAAA;AHqnDV;AGtnDQ;EACE,gBAAA;AHwnDV;AGznDQ;EACE,gBAAA;AH2nDV;AG5nDQ;EACE,gBAAA;AH8nDV;AG/nDQ;EACE,gBAAA;AHioDV;AGloDQ;EACE,gBAAA;AHooDV;AGroDQ;EACE,gBAAA;AHuoDV;AGxoDQ;EACE,gBAAA;AH0oDV;AG3oDQ;EACE,gBAAA;AH6oDV;AG9oDQ;EACE,gBAAA;AHgpDV;AGjpDQ;EACE,gBAAA;AHmpDV;AGppDQ;EACE,gBAAA;AHspDV;AGvpDQ;EACE,gBAAA;AHypDV;AG1pDQ;EACE,gBAAA;AH4pDV;AG7pDQ;EACE,gBAAA;AH+pDV;AGhqDQ;EACE,gBAAA;AHkqDV;AGnqDQ;EACE,gBAAA;AHqqDV;AGtqDQ;EACE,gBAAA;AHwqDV;AGzqDQ;EACE,gBAAA;AH2qDV;AG5qDQ;EACE,gBAAA;AH8qDV;AG/qDQ;EACE,gBAAA;AHirDV;AGlrDQ;EACE,gBAAA;AHorDV;AGrrDQ;EACE,gBAAA;AHurDV;AGxrDQ;EACE,gBAAA;AH0rDV;AG3rDQ;EACE,gBAAA;AH6rDV;AG9rDQ;EACE,gBAAA;AHgsDV;AGjsDQ;EACE,gBAAA;AHmsDV;AGpsDQ;EACE,gBAAA;AHssDV;AGvsDQ;EACE,gBAAA;AHysDV;AG1sDQ;EACE,gBAAA;AH4sDV;AG7sDQ;EACE,gBAAA;AH+sDV;AGhtDQ;EACE,gBAAA;AHktDV;AGntDQ;EACE,gBAAA;AHqtDV;AGttDQ;EACE,gBAAA;AHwtDV;AGztDQ;EACE,gBAAA;AH2tDV;AG5tDQ;EACE,gBAAA;AH8tDV;AG/tDQ;EACE,gBAAA;AHiuDV;AGluDQ;EACE,gBAAA;AHouDV;AGruDQ;EACE,gBAAA;AHuuDV;AGxuDQ;EACE,gBAAA;AH0uDV;AG3uDQ;EACE,gBAAA;AH6uDV;AG9uDQ;EACE,gBAAA;AHgvDV;AGjvDQ;EACE,gBAAA;AHmvDV;AGpvDQ;EACE,gBAAA;AHsvDV;AGvvDQ;EACE,gBAAA;AHyvDV;AG1vDQ;EACE,gBAAA;AH4vDV;AG7vDQ;EACE,gBAAA;AH+vDV;AGhwDQ;EACE,gBAAA;AHkwDV;AGnwDQ;EACE,gBAAA;AHqwDV;AGtwDQ;EACE,gBAAA;AHwwDV;AGzwDQ;EACE,gBAAA;AH2wDV;AG5wDQ;EACE,gBAAA;AH8wDV;AG/wDQ;EACE,gBAAA;AHixDV;AGlxDQ;EACE,gBAAA;AHoxDV;AGrxDQ;EACE,gBAAA;AHuxDV;AGxxDQ;EACE,gBAAA;AH0xDV;AG3xDQ;EACE,gBAAA;AH6xDV;AG9xDQ;EACE,gBAAA;AHgyDV;AGjyDQ;EACE,gBAAA;AHmyDV;AGpyDQ;EACE,gBAAA;AHsyDV;AGvyDQ;EACE,gBAAA;AHyyDV;AG1yDQ;EACE,gBAAA;AH4yDV;AG7yDQ;EACE,gBAAA;AH+yDV;AGhzDQ;EACE,gBAAA;AHkzDV;AGnzDQ;EACE,gBAAA;AHqzDV;AGtzDQ;EACE,gBAAA;AHwzDV;AGzzDQ;EACE,gBAAA;AH2zDV;AG5zDQ;EACE,gBAAA;AH8zDV;AG/zDQ;EACE,gBAAA;AHi0DV;AGl0DQ;EACE,gBAAA;AHo0DV;AGr0DQ;EACE,gBAAA;AHu0DV;AGx0DQ;EACE,gBAAA;AH00DV;AG30DQ;EACE,gBAAA;AH60DV;AG90DQ;EACE,gBAAA;AHg1DV;AGj1DQ;EACE,gBAAA;AHm1DV;AGp1DQ;EACE,gBAAA;AHs1DV;AGv1DQ;EACE,gBAAA;AHy1DV;AG11DQ;EACE,gBAAA;AH41DV;AG71DQ;EACE,gBAAA;AH+1DV;AGh2DQ;EACE,gBAAA;AHk2DV;AGn2DQ;EACE,gBAAA;AHq2DV;AGt2DQ;EACE,gBAAA;AHw2DV;AGz2DQ;EACE,gBAAA;AH22DV;AG52DQ;EACE,gBAAA;AH82DV;AG/2DQ;EACE,gBAAA;AHi3DV;AGl3DQ;EACE,gBAAA;AHo3DV;AGr3DQ;EACE,gBAAA;AHu3DV;AGx3DQ;EACE,gBAAA;AH03DV;AG33DQ;EACE,gBAAA;AH63DV;AG93DQ;EACE,gBAAA;AHg4DV;AGj4DQ;EACE,gBAAA;AHm4DV;AGp4DQ;EACE,gBAAA;AHs4DV;AGv4DQ;EACE,gBAAA;AHy4DV;AG14DQ;EACE,gBAAA;AH44DV;AG74DQ;EACE,gBAAA;AH+4DV;AGh5DQ;EACE,gBAAA;AHk5DV;AGn5DQ;EACE,gBAAA;AHq5DV;AGt5DQ;EACE,gBAAA;AHw5DV;AGz5DQ;EACE,gBAAA;AH25DV;AG55DQ;EACE,gBAAA;AH85DV;AG/5DQ;EACE,gBAAA;AHi6DV;AGl6DQ;EACE,gBAAA;AHo6DV;AGr6DQ;EACE,gBAAA;AHu6DV;AGx6DQ;EACE,gBAAA;AH06DV;AG36DQ;EACE,gBAAA;AH66DV;AG96DQ;EACE,gBAAA;AHg7DV;AGj7DQ;EACE,gBAAA;AHm7DV;AGp7DQ;EACE,gBAAA;AHs7DV;AGv7DQ;EACE,gBAAA;AHy7DV;AG17DQ;EACE,gBAAA;AH47DV;AG77DQ;EACE,gBAAA;AH+7DV;AGh8DQ;EACE,gBAAA;AHk8DV;AGn8DQ;EACE,gBAAA;AHq8DV;AGt8DQ;EACE,gBAAA;AHw8DV;AGz8DQ;EACE,gBAAA;AH28DV;AG58DQ;EACE,gBAAA;AH88DV;AG/8DQ;EACE,gBAAA;AHi9DV;AGl9DQ;EACE,gBAAA;AHo9DV;AGr9DQ;EACE,gBAAA;AHu9DV;AGx9DQ;EACE,gBAAA;AH09DV;AG39DQ;EACE,gBAAA;AH69DV;AG99DQ;EACE,gBAAA;AHg+DV;AGj+DQ;EACE,gBAAA;AHm+DV;AGp+DQ;EACE,gBAAA;AHs+DV;AGv+DQ;EACE,gBAAA;AHy+DV;AG1+DQ;EACE,gBAAA;AH4+DV;AG7+DQ;EACE,gBAAA;AH++DV;AGh/DQ;EACE,gBAAA;AHk/DV;AGn/DQ;EACE,gBAAA;AHq/DV;AGt/DQ;EACE,gBAAA;AHw/DV;AGz/DQ;EACE,gBAAA;AH2/DV;AG5/DQ;EACE,gBAAA;AH8/DV;AG//DQ;EACE,gBAAA;AHigEV;AGlgEQ;EACE,gBAAA;AHogEV;AGrgEQ;EACE,gBAAA;AHugEV;AGxgEQ;EACE,gBAAA;AH0gEV;AG3gEQ;EACE,gBAAA;AH6gEV;AG9gEQ;EACE,gBAAA;AHghEV;AGjhEQ;EACE,gBAAA;AHmhEV;AGphEQ;EACE,gBAAA;AHshEV;AGvhEQ;EACE,gBAAA;AHyhEV;AG1hEQ;EACE,gBAAA;AH4hEV;AG7hEQ;EACE,gBAAA;AH+hEV;AGhiEQ;EACE,gBAAA;AHkiEV;AGniEQ;EACE,gBAAA;AHqiEV;AGtiEQ;EACE,gBAAA;AHwiEV;AGziEQ;EACE,gBAAA;AH2iEV;AG5iEQ;EACE,gBAAA;AH8iEV;AG/iEQ;EACE,gBAAA;AHijEV;AGljEQ;EACE,gBAAA;AHojEV;AGrjEQ;EACE,gBAAA;AHujEV;AGxjEQ;EACE,gBAAA;AH0jEV;AG3jEQ;EACE,gBAAA;AH6jEV;AG9jEQ;EACE,gBAAA;AHgkEV;AGjkEQ;EACE,gBAAA;AHmkEV;AGpkEQ;EACE,gBAAA;AHskEV;AGvkEQ;EACE,gBAAA;AHykEV;AG1kEQ;EACE,gBAAA;AH4kEV;AG7kEQ;EACE,gBAAA;AH+kEV;AGhlEQ;EACE,gBAAA;AHklEV;AGnlEQ;EACE,gBAAA;AHqlEV;AGtlEQ;EACE,gBAAA;AHwlEV;AGzlEQ;EACE,gBAAA;AH2lEV;AG5lEQ;EACE,gBAAA;AH8lEV;AG/lEQ;EACE,gBAAA;AHimEV;AGlmEQ;EACE,gBAAA;AHomEV;AGrmEQ;EACE,gBAAA;AHumEV;AGxmEQ;EACE,gBAAA;AH0mEV;AG3mEQ;EACE,gBAAA;AH6mEV;AG9mEQ;EACE,gBAAA;AHgnEV;AGjnEQ;EACE,gBAAA;AHmnEV;AGpnEQ;EACE,gBAAA;AHsnEV;AGvnEQ;EACE,gBAAA;AHynEV;AG1nEQ;EACE,gBAAA;AH4nEV;AG7nEQ;EACE,gBAAA;AH+nEV;AGhoEQ;EACE,gBAAA;AHkoEV;AGnoEQ;EACE,gBAAA;AHqoEV;AGtoEQ;EACE,gBAAA;AHwoEV;AGzoEQ;EACE,gBAAA;AH2oEV;AG5oEQ;EACE,gBAAA;AH8oEV;AG/oEQ;EACE,gBAAA;AHipEV;AGlpEQ;EACE,gBAAA;AHopEV;AGrpEQ;EACE,gBAAA;AHupEV;AGxpEQ;EACE,gBAAA;AH0pEV;AG3pEQ;EACE,gBAAA;AH6pEV;AG9pEQ;EACE,gBAAA;AHgqEV;AGjqEQ;EACE,gBAAA;AHmqEV;AGpqEQ;EACE,gBAAA;AHsqEV;AGvqEQ;EACE,gBAAA;AHyqEV;AG1qEQ;EACE,gBAAA;AH4qEV;AG7qEQ;EACE,gBAAA;AH+qEV;AGhrEQ;EACE,gBAAA;AHkrEV;AGnrEQ;EACE,gBAAA;AHqrEV;AGtrEQ;EACE,gBAAA;AHwrEV;AGzrEQ;EACE,gBAAA;AH2rEV;AG5rEQ;EACE,gBAAA;AH8rEV;AG/rEQ;EACE,gBAAA;AHisEV;AGlsEQ;EACE,gBAAA;AHosEV;AGrsEQ;EACE,gBAAA;AHusEV;AGxsEQ;EACE,gBAAA;AH0sEV;AG3sEQ;EACE,gBAAA;AH6sEV;AG9sEQ;EACE,gBAAA;AHgtEV;AGjtEQ;EACE,gBAAA;AHmtEV;AGptEQ;EACE,gBAAA;AHstEV;AGvtEQ;EACE,gBAAA;AHytEV;AG1tEQ;EACE,gBAAA;AH4tEV;AG7tEQ;EACE,gBAAA;AH+tEV;AGhuEQ;EACE,gBAAA;AHkuEV;AGnuEQ;EACE,gBAAA;AHquEV;AGtuEQ;EACE,gBAAA;AHwuEV;AGzuEQ;EACE,gBAAA;AH2uEV;AG5uEQ;EACE,gBAAA;AH8uEV;AG/uEQ;EACE,gBAAA;AHivEV;AGlvEQ;EACE,gBAAA;AHovEV;AGrvEQ;EACE,gBAAA;AHuvEV;AGxvEQ;EACE,gBAAA;AH0vEV;AG3vEQ;EACE,gBAAA;AH6vEV;AG9vEQ;EACE,gBAAA;AHgwEV;AGjwEQ;EACE,gBAAA;AHmwEV;AGpwEQ;EACE,gBAAA;AHswEV;AGvwEQ;EACE,gBAAA;AHywEV;AG1wEQ;EACE,gBAAA;AH4wEV;AG7wEQ;EACE,gBAAA;AH+wEV;AGhxEQ;EACE,gBAAA;AHkxEV;AGnxEQ;EACE,gBAAA;AHqxEV;AGtxEQ;EACE,gBAAA;AHwxEV;AGzxEQ;EACE,gBAAA;AH2xEV;AG5xEQ;EACE,gBAAA;AH8xEV;AG/xEQ;EACE,gBAAA;AHiyEV;AGlyEQ;EACE,gBAAA;AHoyEV;AGryEQ;EACE,gBAAA;AHuyEV;AGxyEQ;EACE,gBAAA;AH0yEV;AG3yEQ;EACE,gBAAA;AH6yEV;AG9yEQ;EACE,gBAAA;AHgzEV;AGjzEQ;EACE,gBAAA;AHmzEV;AGpzEQ;EACE,gBAAA;AHszEV;AGvzEQ;EACE,gBAAA;AHyzEV;AG1zEQ;EACE,gBAAA;AH4zEV;AG7zEQ;EACE,gBAAA;AH+zEV;AGh0EQ;EACE,gBAAA;AHk0EV;AGn0EQ;EACE,gBAAA;AHq0EV;AGt0EQ;EACE,gBAAA;AHw0EV;AGz0EQ;EACE,gBAAA;AH20EV;AG50EQ;EACE,gBAAA;AH80EV;AG/0EQ;EACE,gBAAA;AHi1EV;AGl1EQ;EACE,gBAAA;AHo1EV;AGr1EQ;EACE,gBAAA;AHu1EV;AGx1EQ;EACE,gBAAA;AH01EV;AG31EQ;EACE,gBAAA;AH61EV;AG91EQ;EACE,gBAAA;AHg2EV;AGj2EQ;EACE,gBAAA;AHm2EV;AGp2EQ;EACE,gBAAA;AHs2EV;AGv2EQ;EACE,gBAAA;AHy2EV;AG12EQ;EACE,gBAAA;AH42EV;AG72EQ;EACE,gBAAA;AH+2EV;AGh3EQ;EACE,gBAAA;AHk3EV;AGn3EQ;EACE,gBAAA;AHq3EV;AGt3EQ;EACE,gBAAA;AHw3EV;AGz3EQ;EACE,gBAAA;AH23EV;AG53EQ;EACE,gBAAA;AH83EV;AG/3EQ;EACE,gBAAA;AHi4EV;AGl4EQ;EACE,gBAAA;AHo4EV;AGr4EQ;EACE,gBAAA;AHu4EV;AGx4EQ;EACE,gBAAA;AH04EV;AG34EQ;EACE,gBAAA;AH64EV;AG94EQ;EACE,gBAAA;AHg5EV;AGj5EQ;EACE,gBAAA;AHm5EV;AGp5EQ;EACE,gBAAA;AHs5EV;AGv5EQ;EACE,gBAAA;AHy5EV;AG15EQ;EACE,gBAAA;AH45EV;AG75EQ;EACE,gBAAA;AH+5EV;AGh6EQ;EACE,gBAAA;AHk6EV;AGn6EQ;EACE,gBAAA;AHq6EV;AGt6EQ;EACE,gBAAA;AHw6EV;AGz6EQ;EACE,gBAAA;AH26EV;AG56EQ;EACE,gBAAA;AH86EV;AG/6EQ;EACE,gBAAA;AHi7EV;AGl7EQ;EACE,gBAAA;AHo7EV;AGr7EQ;EACE,gBAAA;AHu7EV;AGx7EQ;EACE,gBAAA;AH07EV;AG37EQ;EACE,gBAAA;AH67EV;AG97EQ;EACE,gBAAA;AHg8EV;AGj8EQ;EACE,gBAAA;AHm8EV;AGp8EQ;EACE,gBAAA;AHs8EV;AGv8EQ;EACE,gBAAA;AHy8EV;AG18EQ;EACE,gBAAA;AH48EV;AG78EQ;EACE,gBAAA;AH+8EV;AGh9EQ;EACE,gBAAA;AHk9EV;AGn9EQ;EACE,gBAAA;AHq9EV;AGt9EQ;EACE,gBAAA;AHw9EV;AGz9EQ;EACE,gBAAA;AH29EV;AG59EQ;EACE,gBAAA;AH89EV;AG/9EQ;EACE,gBAAA;AHi+EV;AGl+EQ;EACE,gBAAA;AHo+EV;AGr+EQ;EACE,gBAAA;AHu+EV;AGx+EQ;EACE,gBAAA;AH0+EV;AG3+EQ;EACE,gBAAA;AH6+EV;AG9+EQ;EACE,gBAAA;AHg/EV;AGj/EQ;EACE,gBAAA;AHm/EV;AGp/EQ;EACE,gBAAA;AHs/EV;AGv/EQ;EACE,gBAAA;AHy/EV;AG1/EQ;EACE,gBAAA;AH4/EV;AG7/EQ;EACE,gBAAA;AH+/EV;AGhgFQ;EACE,gBAAA;AHkgFV;AGngFQ;EACE,gBAAA;AHqgFV;AGtgFQ;EACE,gBAAA;AHwgFV;AGzgFQ;EACE,gBAAA;AH2gFV;AG5gFQ;EACE,gBAAA;AH8gFV;AG/gFQ;EACE,gBAAA;AHihFV;AGlhFQ;EACE,gBAAA;AHohFV;AGrhFQ;EACE,gBAAA;AHuhFV;AGxhFQ;EACE,gBAAA;AH0hFV;AG3hFQ;EACE,gBAAA;AH6hFV;AG9hFQ;EACE,gBAAA;AHgiFV;AGjiFQ;EACE,gBAAA;AHmiFV;AGpiFQ;EACE,gBAAA;AHsiFV;AGviFQ;EACE,gBAAA;AHyiFV;AG1iFQ;EACE,gBAAA;AH4iFV;AG7iFQ;EACE,gBAAA;AH+iFV;AGhjFQ;EACE,gBAAA;AHkjFV;AGnjFQ;EACE,gBAAA;AHqjFV;AGtjFQ;EACE,gBAAA;AHwjFV;AGzjFQ;EACE,gBAAA;AH2jFV;AG5jFQ;EACE,gBAAA;AH8jFV;AG/jFQ;EACE,gBAAA;AHikFV;AGlkFQ;EACE,gBAAA;AHokFV;AGrkFQ;EACE,gBAAA;AHukFV;AGxkFQ;EACE,gBAAA;AH0kFV;AG3kFQ;EACE,gBAAA;AH6kFV;AG9kFQ;EACE,gBAAA;AHglFV;AGjlFQ;EACE,gBAAA;AHmlFV;AGplFQ;EACE,gBAAA;AHslFV;AGvlFQ;EACE,gBAAA;AHylFV;AG1lFQ;EACE,gBAAA;AH4lFV;AG7lFQ;EACE,gBAAA;AH+lFV;AGhmFQ;EACE,gBAAA;AHkmFV;AGnmFQ;EACE,gBAAA;AHqmFV;AGtmFQ;EACE,gBAAA;AHwmFV;AGzmFQ;EACE,gBAAA;AH2mFV;AG5mFQ;EACE,gBAAA;AH8mFV;AG/mFQ;EACE,gBAAA;AHinFV;AGlnFQ;EACE,gBAAA;AHonFV;AGrnFQ;EACE,gBAAA;AHunFV;AGxnFQ;EACE,gBAAA;AH0nFV;AG3nFQ;EACE,gBAAA;AH6nFV;AG9nFQ;EACE,gBAAA;AHgoFV;AGjoFQ;EACE,gBAAA;AHmoFV;AGpoFQ;EACE,gBAAA;AHsoFV;AGvoFQ;EACE,gBAAA;AHyoFV;AG1oFQ;EACE,gBAAA;AH4oFV;AG7oFQ;EACE,gBAAA;AH+oFV;AGhpFQ;EACE,gBAAA;AHkpFV;AGnpFQ;EACE,gBAAA;AHqpFV;AGtpFQ;EACE,gBAAA;AHwpFV;AGzpFQ;EACE,gBAAA;AH2pFV;AG5pFQ;EACE,gBAAA;AH8pFV;AG/pFQ;EACE,gBAAA;AHiqFV;AGlqFQ;EACE,gBAAA;AHoqFV;AGrqFQ;EACE,gBAAA;AHuqFV;AGxqFQ;EACE,gBAAA;AH0qFV;AG3qFQ;EACE,gBAAA;AH6qFV;AG9qFQ;EACE,gBAAA;AHgrFV;AGjrFQ;EACE,gBAAA;AHmrFV;AGprFQ;EACE,gBAAA;AHsrFV;AGvrFQ;EACE,gBAAA;AHyrFV;AG1rFQ;EACE,gBAAA;AH4rFV;AG7rFQ;EACE,gBAAA;AH+rFV;AGhsFQ;EACE,gBAAA;AHksFV;AGnsFQ;EACE,gBAAA;AHqsFV;AGtsFQ;EACE,gBAAA;AHwsFV;AGzsFQ;EACE,gBAAA;AH2sFV;AG5sFQ;EACE,gBAAA;AH8sFV;AG/sFQ;EACE,gBAAA;AHitFV;AGltFQ;EACE,gBAAA;AHotFV;AGrtFQ;EACE,gBAAA;AHutFV;AGxtFQ;EACE,gBAAA;AH0tFV;AG3tFQ;EACE,gBAAA;AH6tFV;AG9tFQ;EACE,gBAAA;AHguFV;AGjuFQ;EACE,gBAAA;AHmuFV;AGpuFQ;EACE,gBAAA;AHsuFV;AGvuFQ;EACE,gBAAA;AHyuFV;AG1uFQ;EACE,gBAAA;AH4uFV;AG7uFQ;EACE,gBAAA;AH+uFV;AGhvFQ;EACE,gBAAA;AHkvFV;AGnvFQ;EACE,gBAAA;AHqvFV;AGtvFQ;EACE,gBAAA;AHwvFV;AGzvFQ;EACE,gBAAA;AH2vFV;AG5vFQ;EACE,gBAAA;AH8vFV;AG/vFQ;EACE,gBAAA;AHiwFV;AGlwFQ;EACE,gBAAA;AHowFV;AGrwFQ;EACE,gBAAA;AHuwFV;AGxwFQ;EACE,gBAAA;AH0wFV;AG3wFQ;EACE,gBAAA;AH6wFV;AG9wFQ;EACE,gBAAA;AHgxFV;AGjxFQ;EACE,gBAAA;AHmxFV;AGpxFQ;EACE,gBAAA;AHsxFV;AGvxFQ;EACE,gBAAA;AHyxFV;AG1xFQ;EACE,gBAAA;AH4xFV;AG7xFQ;EACE,gBAAA;AH+xFV;AGhyFQ;EACE,gBAAA;AHkyFV;AGnyFQ;EACE,gBAAA;AHqyFV;AGtyFQ;EACE,gBAAA;AHwyFV;AGzyFQ;EACE,gBAAA;AH2yFV;AG5yFQ;EACE,gBAAA;AH8yFV;AG/yFQ;EACE,gBAAA;AHizFV;AGlzFQ;EACE,gBAAA;AHozFV;AGrzFQ;EACE,gBAAA;AHuzFV;AGxzFQ;EACE,gBAAA;AH0zFV;AG3zFQ;EACE,gBAAA;AH6zFV;AG9zFQ;EACE,gBAAA;AHg0FV;AGj0FQ;EACE,gBAAA;AHm0FV;AGp0FQ;EACE,gBAAA;AHs0FV;AGv0FQ;EACE,gBAAA;AHy0FV;AG10FQ;EACE,gBAAA;AH40FV;AG70FQ;EACE,gBAAA;AH+0FV;AGh1FQ;EACE,gBAAA;AHk1FV;AGn1FQ;EACE,gBAAA;AHq1FV;AGt1FQ;EACE,gBAAA;AHw1FV;AGz1FQ;EACE,gBAAA;AH21FV;AG51FQ;EACE,gBAAA;AH81FV;AG/1FQ;EACE,gBAAA;AHi2FV;AGl2FQ;EACE,gBAAA;AHo2FV;AGr2FQ;EACE,gBAAA;AHu2FV;AGx2FQ;EACE,gBAAA;AH02FV;AG32FQ;EACE,gBAAA;AH62FV;AG92FQ;EACE,gBAAA;AHg3FV;AGj3FQ;EACE,gBAAA;AHm3FV;AGp3FQ;EACE,gBAAA;AHs3FV;AGv3FQ;EACE,gBAAA;AHy3FV;AG13FQ;EACE,gBAAA;AH43FV;AG73FQ;EACE,gBAAA;AH+3FV;AGh4FQ;EACE,gBAAA;AHk4FV;AGn4FQ;EACE,gBAAA;AHq4FV;AGt4FQ;EACE,gBAAA;AHw4FV;AGz4FQ;EACE,gBAAA;AH24FV;AG54FQ;EACE,gBAAA;AH84FV;AG/4FQ;EACE,gBAAA;AHi5FV;AGl5FQ;EACE,gBAAA;AHo5FV;AGr5FQ;EACE,gBAAA;AHu5FV;AGx5FQ;EACE,gBAAA;AH05FV;AG35FQ;EACE,gBAAA;AH65FV;AG95FQ;EACE,gBAAA;AHg6FV;AGj6FQ;EACE,gBAAA;AHm6FV;AGp6FQ;EACE,gBAAA;AHs6FV;AGv6FQ;EACE,gBAAA;AHy6FV;AG16FQ;EACE,gBAAA;AH46FV;AG76FQ;EACE,gBAAA;AH+6FV;AGh7FQ;EACE,gBAAA;AHk7FV;AGn7FQ;EACE,gBAAA;AHq7FV;AGt7FQ;EACE,gBAAA;AHw7FV;AGz7FQ;EACE,gBAAA;AH27FV;AG57FQ;EACE,gBAAA;AH87FV;AG/7FQ;EACE,gBAAA;AHi8FV;AGl8FQ;EACE,gBAAA;AHo8FV;AGr8FQ;EACE,gBAAA;AHu8FV;AGx8FQ;EACE,gBAAA;AH08FV;AG38FQ;EACE,gBAAA;AH68FV;AG98FQ;EACE,gBAAA;AHg9FV;AGj9FQ;EACE,gBAAA;AHm9FV;AGp9FQ;EACE,gBAAA;AHs9FV;AGv9FQ;EACE,gBAAA;AHy9FV;AG19FQ;EACE,gBAAA;AH49FV;AG79FQ;EACE,gBAAA;AH+9FV;AGh+FQ;EACE,gBAAA;AHk+FV;AGn+FQ;EACE,gBAAA;AHq+FV;AGt+FQ;EACE,gBAAA;AHw+FV;AGz+FQ;EACE,gBAAA;AH2+FV;AG5+FQ;EACE,gBAAA;AH8+FV;AG/+FQ;EACE,gBAAA;AHi/FV;AGl/FQ;EACE,gBAAA;AHo/FV;AGr/FQ;EACE,gBAAA;AHu/FV;AGx/FQ;EACE,gBAAA;AH0/FV;AG3/FQ;EACE,gBAAA;AH6/FV;AG9/FQ;EACE,gBAAA;AHggGV;AGjgGQ;EACE,gBAAA;AHmgGV;AGpgGQ;EACE,gBAAA;AHsgGV;AGvgGQ;EACE,gBAAA;AHygGV;AG1gGQ;EACE,gBAAA;AH4gGV;AG7gGQ;EACE,gBAAA;AH+gGV;AGhhGQ;EACE,gBAAA;AHkhGV;AGnhGQ;EACE,gBAAA;AHqhGV;AGthGQ;EACE,gBAAA;AHwhGV;AGzhGQ;EACE,gBAAA;AH2hGV;AG5hGQ;EACE,gBAAA;AH8hGV;AG/hGQ;EACE,gBAAA;AHiiGV;AGliGQ;EACE,gBAAA;AHoiGV;AGriGQ;EACE,gBAAA;AHuiGV;AGxiGQ;EACE,gBAAA;AH0iGV;AG3iGQ;EACE,gBAAA;AH6iGV;AG9iGQ;EACE,gBAAA;AHgjGV;AGjjGQ;EACE,gBAAA;AHmjGV;AGpjGQ;EACE,gBAAA;AHsjGV;AGvjGQ;EACE,gBAAA;AHyjGV;AG1jGQ;EACE,gBAAA;AH4jGV;AG7jGQ;EACE,gBAAA;AH+jGV;AGhkGQ;EACE,gBAAA;AHkkGV;AGnkGQ;EACE,gBAAA;AHqkGV;AGtkGQ;EACE,gBAAA;AHwkGV;AGzkGQ;EACE,gBAAA;AH2kGV;AG5kGQ;EACE,gBAAA;AH8kGV;AG/kGQ;EACE,gBAAA;AHilGV;AGllGQ;EACE,gBAAA;AHolGV;AGrlGQ;EACE,gBAAA;AHulGV;AGxlGQ;EACE,gBAAA;AH0lGV;AG3lGQ;EACE,gBAAA;AH6lGV;AG9lGQ;EACE,gBAAA;AHgmGV;AGjmGQ;EACE,gBAAA;AHmmGV;AGpmGQ;EACE,gBAAA;AHsmGV;AGvmGQ;EACE,gBAAA;AHymGV;AG1mGQ;EACE,gBAAA;AH4mGV;AG7mGQ;EACE,gBAAA;AH+mGV;AGhnGQ;EACE,gBAAA;AHknGV;AGnnGQ;EACE,gBAAA;AHqnGV;AGtnGQ;EACE,gBAAA;AHwnGV;AGznGQ;EACE,gBAAA;AH2nGV;AG5nGQ;EACE,gBAAA;AH8nGV;AG/nGQ;EACE,gBAAA;AHioGV;AGloGQ;EACE,gBAAA;AHooGV;AGroGQ;EACE,gBAAA;AHuoGV;AGxoGQ;EACE,gBAAA;AH0oGV;AG3oGQ;EACE,gBAAA;AH6oGV;AG9oGQ;EACE,gBAAA;AHgpGV;AGjpGQ;EACE,gBAAA;AHmpGV;AGppGQ;EACE,gBAAA;AHspGV;AGvpGQ;EACE,gBAAA;AHypGV;AG1pGQ;EACE,gBAAA;AH4pGV;AG7pGQ;EACE,gBAAA;AH+pGV;AGhqGQ;EACE,gBAAA;AHkqGV;AGnqGQ;EACE,gBAAA;AHqqGV;AGtqGQ;EACE,gBAAA;AHwqGV;AGzqGQ;EACE,gBAAA;AH2qGV;AG5qGQ;EACE,gBAAA;AH8qGV;AG/qGQ;EACE,gBAAA;AHirGV;AGlrGQ;EACE,gBAAA;AHorGV;AGrrGQ;EACE,gBAAA;AHurGV;AGxrGQ;EACE,gBAAA;AH0rGV;AG3rGQ;EACE,gBAAA;AH6rGV;AG9rGQ;EACE,gBAAA;AHgsGV;AGjsGQ;EACE,gBAAA;AHmsGV;AGpsGQ;EACE,gBAAA;AHssGV;AGvsGQ;EACE,gBAAA;AHysGV;AG1sGQ;EACE,gBAAA;AH4sGV;AG7sGQ;EACE,gBAAA;AH+sGV;AGhtGQ;EACE,gBAAA;AHktGV;AGntGQ;EACE,gBAAA;AHqtGV;AGttGQ;EACE,gBAAA;AHwtGV;AGztGQ;EACE,gBAAA;AH2tGV;AG5tGQ;EACE,gBAAA;AH8tGV;AG/tGQ;EACE,gBAAA;AHiuGV;AGluGQ;EACE,gBAAA;AHouGV;AGruGQ;EACE,gBAAA;AHuuGV;AGxuGQ;EACE,gBAAA;AH0uGV;AG3uGQ;EACE,gBAAA;AH6uGV;AG9uGQ;EACE,gBAAA;AHgvGV;AGjvGQ;EACE,gBAAA;AHmvGV;AGpvGQ;EACE,gBAAA;AHsvGV;AGvvGQ;EACE,gBAAA;AHyvGV;AG1vGQ;EACE,gBAAA;AH4vGV;AG7vGQ;EACE,gBAAA;AH+vGV;AGhwGQ;EACE,gBAAA;AHkwGV;AGnwGQ;EACE,gBAAA;AHqwGV;AGtwGQ;EACE,gBAAA;AHwwGV;AGzwGQ;EACE,gBAAA;AH2wGV;AG5wGQ;EACE,gBAAA;AH8wGV;AG/wGQ;EACE,gBAAA;AHixGV;AGlxGQ;EACE,gBAAA;AHoxGV;AGrxGQ;EACE,gBAAA;AHuxGV;AGxxGQ;EACE,gBAAA;AH0xGV;AG3xGQ;EACE,gBAAA;AH6xGV;AG9xGQ;EACE,gBAAA;AHgyGV;AGjyGQ;EACE,gBAAA;AHmyGV;AGpyGQ;EACE,gBAAA;AHsyGV;AGvyGQ;EACE,gBAAA;AHyyGV;AG1yGQ;EACE,gBAAA;AH4yGV;AG7yGQ;EACE,gBAAA;AH+yGV;AGhzGQ;EACE,gBAAA;AHkzGV;AGnzGQ;EACE,gBAAA;AHqzGV;AGtzGQ;EACE,gBAAA;AHwzGV;AGzzGQ;EACE,gBAAA;AH2zGV;AG5zGQ;EACE,gBAAA;AH8zGV;AG/zGQ;EACE,gBAAA;AHi0GV;AGl0GQ;EACE,gBAAA;AHo0GV;AGr0GQ;EACE,gBAAA;AHu0GV;AGx0GQ;EACE,gBAAA;AH00GV;AG30GQ;EACE,gBAAA;AH60GV;AG90GQ;EACE,gBAAA;AHg1GV;AGj1GQ;EACE,gBAAA;AHm1GV;AGp1GQ;EACE,gBAAA;AHs1GV;AGv1GQ;EACE,gBAAA;AHy1GV;AG11GQ;EACE,gBAAA;AH41GV;AG71GQ;EACE,gBAAA;AH+1GV;AGh2GQ;EACE,gBAAA;AHk2GV;AGn2GQ;EACE,gBAAA;AHq2GV;AGt2GQ;EACE,gBAAA;AHw2GV;AGz2GQ;EACE,gBAAA;AH22GV;AG52GQ;EACE,gBAAA;AH82GV;AG/2GQ;EACE,gBAAA;AHi3GV;AGl3GQ;EACE,gBAAA;AHo3GV;AGr3GQ;EACE,gBAAA;AHu3GV;AGx3GQ;EACE,gBAAA;AH03GV;AG33GQ;EACE,gBAAA;AH63GV;AG93GQ;EACE,gBAAA;AHg4GV;AGj4GQ;EACE,gBAAA;AHm4GV;AGp4GQ;EACE,gBAAA;AHs4GV;AGv4GQ;EACE,gBAAA;AHy4GV;AG14GQ;EACE,gBAAA;AH44GV;AG74GQ;EACE,gBAAA;AH+4GV;AGh5GQ;EACE,gBAAA;AHk5GV;AGn5GQ;EACE,gBAAA;AHq5GV;AGt5GQ;EACE,gBAAA;AHw5GV;AGz5GQ;EACE,gBAAA;AH25GV;AG55GQ;EACE,gBAAA;AH85GV;AG/5GQ;EACE,gBAAA;AHi6GV;AGl6GQ;EACE,gBAAA;AHo6GV;AGr6GQ;EACE,gBAAA;AHu6GV;AGx6GQ;EACE,gBAAA;AH06GV;AG36GQ;EACE,gBAAA;AH66GV;AG96GQ;EACE,gBAAA;AHg7GV;AGj7GQ;EACE,gBAAA;AHm7GV;AGp7GQ;EACE,gBAAA;AHs7GV;AGv7GQ;EACE,gBAAA;AHy7GV;AG17GQ;EACE,gBAAA;AH47GV;AG77GQ;EACE,gBAAA;AH+7GV;AGh8GQ;EACE,gBAAA;AHk8GV;AGn8GQ;EACE,gBAAA;AHq8GV;AGt8GQ;EACE,gBAAA;AHw8GV;AGz8GQ;EACE,gBAAA;AH28GV;AG58GQ;EACE,gBAAA;AH88GV;AG/8GQ;EACE,gBAAA;AHi9GV;AGl9GQ;EACE,gBAAA;AHo9GV;AGr9GQ;EACE,gBAAA;AHu9GV;AGx9GQ;EACE,gBAAA;AH09GV;AG39GQ;EACE,gBAAA;AH69GV;AG99GQ;EACE,gBAAA;AHg+GV;AGj+GQ;EACE,gBAAA;AHm+GV;AGp+GQ;EACE,gBAAA;AHs+GV;AGv+GQ;EACE,gBAAA;AHy+GV;AG1+GQ;EACE,gBAAA;AH4+GV;AG7+GQ;EACE,gBAAA;AH++GV;AGh/GQ;EACE,gBAAA;AHk/GV;AGn/GQ;EACE,gBAAA;AHq/GV;AGt/GQ;EACE,gBAAA;AHw/GV;AGz/GQ;EACE,gBAAA;AH2/GV;AG5/GQ;EACE,gBAAA;AH8/GV;AG//GQ;EACE,gBAAA;AHigHV;AGlgHQ;EACE,gBAAA;AHogHV;AGrgHQ;EACE,gBAAA;AHugHV;AGxgHQ;EACE,gBAAA;AH0gHV;AG3gHQ;EACE,gBAAA;AH6gHV;AG9gHQ;EACE,gBAAA;AHghHV;AGjhHQ;EACE,gBAAA;AHmhHV;AGphHQ;EACE,gBAAA;AHshHV;AGvhHQ;EACE,gBAAA;AHyhHV;AG1hHQ;EACE,gBAAA;AH4hHV;AG7hHQ;EACE,gBAAA;AH+hHV;AGhiHQ;EACE,gBAAA;AHkiHV;AGniHQ;EACE,gBAAA;AHqiHV;AGtiHQ;EACE,gBAAA;AHwiHV;AGziHQ;EACE,gBAAA;AH2iHV;AG5iHQ;EACE,gBAAA;AH8iHV;AG/iHQ;EACE,gBAAA;AHijHV;AGljHQ;EACE,gBAAA;AHojHV;AGrjHQ;EACE,gBAAA;AHujHV;AGxjHQ;EACE,gBAAA;AH0jHV;AG3jHQ;EACE,gBAAA;AH6jHV;AG9jHQ;EACE,gBAAA;AHgkHV;AGjkHQ;EACE,gBAAA;AHmkHV;AGpkHQ;EACE,gBAAA;AHskHV;AGvkHQ;EACE,gBAAA;AHykHV;AG1kHQ;EACE,gBAAA;AH4kHV;AG7kHQ;EACE,gBAAA;AH+kHV;AGhlHQ;EACE,gBAAA;AHklHV;AGnlHQ;EACE,gBAAA;AHqlHV;AGtlHQ;EACE,gBAAA;AHwlHV;AGzlHQ;EACE,gBAAA;AH2lHV;AG5lHQ;EACE,gBAAA;AH8lHV;AG/lHQ;EACE,gBAAA;AHimHV;AGlmHQ;EACE,gBAAA;AHomHV;AGrmHQ;EACE,gBAAA;AHumHV;AGxmHQ;EACE,gBAAA;AH0mHV;AG3mHQ;EACE,gBAAA;AH6mHV;AG9mHQ;EACE,gBAAA;AHgnHV;AGjnHQ;EACE,gBAAA;AHmnHV;AGpnHQ;EACE,gBAAA;AHsnHV;AGvnHQ;EACE,gBAAA;AHynHV;AG1nHQ;EACE,gBAAA;AH4nHV;AG7nHQ;EACE,gBAAA;AH+nHV;AGhoHQ;EACE,gBAAA;AHkoHV;AGnoHQ;EACE,gBAAA;AHqoHV;AGtoHQ;EACE,gBAAA;AHwoHV;AGzoHQ;EACE,gBAAA;AH2oHV;AG5oHQ;EACE,gBAAA;AH8oHV;AG/oHQ;EACE,gBAAA;AHipHV;AGlpHQ;EACE,gBAAA;AHopHV;AGrpHQ;EACE,gBAAA;AHupHV;AGxpHQ;EACE,gBAAA;AH0pHV;AG3pHQ;EACE,gBAAA;AH6pHV;AG9pHQ;EACE,gBAAA;AHgqHV;AGjqHQ;EACE,gBAAA;AHmqHV;AGpqHQ;EACE,gBAAA;AHsqHV;AGvqHQ;EACE,gBAAA;AHyqHV;AG1qHQ;EACE,gBAAA;AH4qHV;AG7qHQ;EACE,gBAAA;AH+qHV;AGhrHQ;EACE,gBAAA;AHkrHV;AGnrHQ;EACE,gBAAA;AHqrHV;AGtrHQ;EACE,gBAAA;AHwrHV;AGzrHQ;EACE,gBAAA;AH2rHV;AG5rHQ;EACE,gBAAA;AH8rHV;AG/rHQ;EACE,gBAAA;AHisHV;AGlsHQ;EACE,gBAAA;AHosHV;AGrsHQ;EACE,gBAAA;AHusHV;AGxsHQ;EACE,gBAAA;AH0sHV;AG3sHQ;EACE,gBAAA;AH6sHV;AG9sHQ;EACE,gBAAA;AHgtHV;AGjtHQ;EACE,gBAAA;AHmtHV;AGptHQ;EACE,gBAAA;AHstHV;AGvtHQ;EACE,gBAAA;AHytHV;AG1tHQ;EACE,gBAAA;AH4tHV;AG7tHQ;EACE,gBAAA;AH+tHV;AGhuHQ;EACE,gBAAA;AHkuHV;AGnuHQ;EACE,gBAAA;AHquHV;AGtuHQ;EACE,gBAAA;AHwuHV;AGzuHQ;EACE,gBAAA;AH2uHV;AG5uHQ;EACE,gBAAA;AH8uHV;AG/uHQ;EACE,gBAAA;AHivHV;AGlvHQ;EACE,gBAAA;AHovHV;AGrvHQ;EACE,gBAAA;AHuvHV;AGxvHQ;EACE,gBAAA;AH0vHV;AG3vHQ;EACE,gBAAA;AH6vHV;AG9vHQ;EACE,gBAAA;AHgwHV;AGjwHQ;EACE,gBAAA;AHmwHV;AGpwHQ;EACE,gBAAA;AHswHV;AGvwHQ;EACE,gBAAA;AHywHV;AG1wHQ;EACE,gBAAA;AH4wHV;AG7wHQ;EACE,gBAAA;AH+wHV;AGhxHQ;EACE,gBAAA;AHkxHV;AGnxHQ;EACE,gBAAA;AHqxHV;AGtxHQ;EACE,gBAAA;AHwxHV;AGzxHQ;EACE,gBAAA;AH2xHV;AG5xHQ;EACE,gBAAA;AH8xHV;AG/xHQ;EACE,gBAAA;AHiyHV;AGlyHQ;EACE,gBAAA;AHoyHV;AGryHQ;EACE,gBAAA;AHuyHV;AGxyHQ;EACE,gBAAA;AH0yHV;AG3yHQ;EACE,gBAAA;AH6yHV;AG9yHQ;EACE,gBAAA;AHgzHV;AGjzHQ;EACE,gBAAA;AHmzHV;AGpzHQ;EACE,gBAAA;AHszHV;AGvzHQ;EACE,gBAAA;AHyzHV;AG1zHQ;EACE,gBAAA;AH4zHV;AG7zHQ;EACE,gBAAA;AH+zHV;AGh0HQ;EACE,gBAAA;AHk0HV;AGn0HQ;EACE,gBAAA;AHq0HV;AGt0HQ;EACE,gBAAA;AHw0HV;AGz0HQ;EACE,gBAAA;AH20HV;AG50HQ;EACE,gBAAA;AH80HV;AG/0HQ;EACE,gBAAA;AHi1HV;AGl1HQ;EACE,gBAAA;AHo1HV;AGr1HQ;EACE,gBAAA;AHu1HV;AGx1HQ;EACE,gBAAA;AH01HV;AG31HQ;EACE,gBAAA;AH61HV;AG91HQ;EACE,gBAAA;AHg2HV;AGj2HQ;EACE,gBAAA;AHm2HV;AGp2HQ;EACE,gBAAA;AHs2HV;AGv2HQ;EACE,gBAAA;AHy2HV;AG12HQ;EACE,gBAAA;AH42HV;AG72HQ;EACE,gBAAA;AH+2HV;AGh3HQ;EACE,gBAAA;AHk3HV;AGn3HQ;EACE,gBAAA;AHq3HV;AGt3HQ;EACE,gBAAA;AHw3HV;AGz3HQ;EACE,gBAAA;AH23HV;AG53HQ;EACE,gBAAA;AH83HV;AG/3HQ;EACE,gBAAA;AHi4HV;AGl4HQ;EACE,gBAAA;AHo4HV;AGr4HQ;EACE,gBAAA;AHu4HV;AGx4HQ;EACE,gBAAA;AH04HV;AG34HQ;EACE,gBAAA;AH64HV;AG94HQ;EACE,gBAAA;AHg5HV;AGj5HQ;EACE,gBAAA;AHm5HV;AGp5HQ;EACE,gBAAA;AHs5HV;AGv5HQ;EACE,gBAAA;AHy5HV;AG15HQ;EACE,gBAAA;AH45HV;AG75HQ;EACE,gBAAA;AH+5HV;AGh6HQ;EACE,gBAAA;AHk6HV;AGn6HQ;EACE,gBAAA;AHq6HV;AGt6HQ;EACE,gBAAA;AHw6HV;AGz6HQ;EACE,gBAAA;AH26HV;AG56HQ;EACE,gBAAA;AH86HV;AG/6HQ;EACE,gBAAA;AHi7HV;AGl7HQ;EACE,gBAAA;AHo7HV;AGr7HQ;EACE,gBAAA;AHu7HV;AGx7HQ;EACE,gBAAA;AH07HV;AG37HQ;EACE,gBAAA;AH67HV;AG97HQ;EACE,gBAAA;AHg8HV;AGj8HQ;EACE,gBAAA;AHm8HV;AGp8HQ;EACE,gBAAA;AHs8HV;AGv8HQ;EACE,gBAAA;AHy8HV;AG18HQ;EACE,gBAAA;AH48HV;AG78HQ;EACE,gBAAA;AH+8HV;AGh9HQ;EACE,gBAAA;AHk9HV;AGn9HQ;EACE,gBAAA;AHq9HV;AGt9HQ;EACE,gBAAA;AHw9HV;AGz9HQ;EACE,gBAAA;AH29HV;AG59HQ;EACE,gBAAA;AH89HV;AG/9HQ;EACE,gBAAA;AHi+HV;AGl+HQ;EACE,gBAAA;AHo+HV;AGr+HQ;EACE,gBAAA;AHu+HV;AGx+HQ;EACE,gBAAA;AH0+HV;AG3+HQ;EACE,gBAAA;AH6+HV;AG9+HQ;EACE,gBAAA;AHg/HV;AGj/HQ;EACE,gBAAA;AHm/HV;AGp/HQ;EACE,gBAAA;AHs/HV;AGv/HQ;EACE,gBAAA;AHy/HV;AG1/HQ;EACE,gBAAA;AH4/HV;AG7/HQ;EACE,gBAAA;AH+/HV;AGhgIQ;EACE,gBAAA;AHkgIV;AGngIQ;EACE,gBAAA;AHqgIV;AGtgIQ;EACE,gBAAA;AHwgIV;AGzgIQ;EACE,gBAAA;AH2gIV;AG5gIQ;EACE,gBAAA;AH8gIV;AG/gIQ;EACE,gBAAA;AHihIV;AGlhIQ;EACE,gBAAA;AHohIV;AGrhIQ;EACE,gBAAA;AHuhIV;AGxhIQ;EACE,gBAAA;AH0hIV;AG3hIQ;EACE,gBAAA;AH6hIV;AG9hIQ;EACE,gBAAA;AHgiIV;AGjiIQ;EACE,gBAAA;AHmiIV;AGpiIQ;EACE,gBAAA;AHsiIV;AGviIQ;EACE,gBAAA;AHyiIV;AG1iIQ;EACE,gBAAA;AH4iIV;AG7iIQ;EACE,gBAAA;AH+iIV;AGhjIQ;EACE,gBAAA;AHkjIV;AGnjIQ;EACE,gBAAA;AHqjIV;AGtjIQ;EACE,gBAAA;AHwjIV;AGzjIQ;EACE,gBAAA;AH2jIV;AG5jIQ;EACE,gBAAA;AH8jIV;AG/jIQ;EACE,gBAAA;AHikIV;AGlkIQ;EACE,gBAAA;AHokIV;AGrkIQ;EACE,gBAAA;AHukIV;AGxkIQ;EACE,gBAAA;AH0kIV;AG3kIQ;EACE,gBAAA;AH6kIV;AG9kIQ;EACE,gBAAA;AHglIV;AGjlIQ;EACE,gBAAA;AHmlIV;AGplIQ;EACE,gBAAA;AHslIV;AGvlIQ;EACE,gBAAA;AHylIV;AG1lIQ;EACE,gBAAA;AH4lIV;AG7lIQ;EACE,gBAAA;AH+lIV;AGhmIQ;EACE,gBAAA;AHkmIV;AGnmIQ;EACE,gBAAA;AHqmIV;AGtmIQ;EACE,gBAAA;AHwmIV;AGzmIQ;EACE,gBAAA;AH2mIV;AG5mIQ;EACE,gBAAA;AH8mIV;AG/mIQ;EACE,gBAAA;AHinIV;AGlnIQ;EACE,gBAAA;AHonIV;AGrnIQ;EACE,gBAAA;AHunIV;AGxnIQ;EACE,gBAAA;AH0nIV;AG3nIQ;EACE,gBAAA;AH6nIV;AG9nIQ;EACE,gBAAA;AHgoIV;AGjoIQ;EACE,gBAAA;AHmoIV;AGpoIQ;EACE,gBAAA;AHsoIV;AGvoIQ;EACE,gBAAA;AHyoIV;AG1oIQ;EACE,gBAAA;AH4oIV;AG7oIQ;EACE,gBAAA;AH+oIV;AGhpIQ;EACE,gBAAA;AHkpIV;AGnpIQ;EACE,gBAAA;AHqpIV;AGtpIQ;EACE,gBAAA;AHwpIV;AGzpIQ;EACE,gBAAA;AH2pIV;AG5pIQ;EACE,gBAAA;AH8pIV;AG/pIQ;EACE,gBAAA;AHiqIV;AGlqIQ;EACE,gBAAA;AHoqIV;AGrqIQ;EACE,gBAAA;AHuqIV;AGxqIQ;EACE,gBAAA;AH0qIV;AG3qIQ;EACE,gBAAA;AH6qIV;AG9qIQ;EACE,gBAAA;AHgrIV;AGjrIQ;EACE,gBAAA;AHmrIV;AGprIQ;EACE,gBAAA;AHsrIV;AGvrIQ;EACE,gBAAA;AHyrIV;AG1rIQ;EACE,gBAAA;AH4rIV;AG7rIQ;EACE,gBAAA;AH+rIV;AGhsIQ;EACE,gBAAA;AHksIV;AGnsIQ;EACE,gBAAA;AHqsIV;AGtsIQ;EACE,gBAAA;AHwsIV;AGzsIQ;EACE,gBAAA;AH2sIV;AG5sIQ;EACE,gBAAA;AH8sIV;AG/sIQ;EACE,gBAAA;AHitIV;AGltIQ;EACE,gBAAA;AHotIV;AGrtIQ;EACE,gBAAA;AHutIV;AGxtIQ;EACE,gBAAA;AH0tIV;AG3tIQ;EACE,gBAAA;AH6tIV;AG9tIQ;EACE,gBAAA;AHguIV;AGjuIQ;EACE,gBAAA;AHmuIV;AGpuIQ;EACE,gBAAA;AHsuIV;AGvuIQ;EACE,gBAAA;AHyuIV;AG1uIQ;EACE,gBAAA;AH4uIV;AG7uIQ;EACE,gBAAA;AH+uIV;AGhvIQ;EACE,gBAAA;AHkvIV;AGnvIQ;EACE,gBAAA;AHqvIV;AGtvIQ;EACE,gBAAA;AHwvIV;AGzvIQ;EACE,gBAAA;AH2vIV;AG5vIQ;EACE,gBAAA;AH8vIV;AG/vIQ;EACE,gBAAA;AHiwIV;AGlwIQ;EACE,gBAAA;AHowIV;AGrwIQ;EACE,gBAAA;AHuwIV;AGxwIQ;EACE,gBAAA;AH0wIV;AG3wIQ;EACE,gBAAA;AH6wIV;AG9wIQ;EACE,gBAAA;AHgxIV;AGjxIQ;EACE,gBAAA;AHmxIV;AGpxIQ;EACE,gBAAA;AHsxIV;AGvxIQ;EACE,gBAAA;AHyxIV;AG1xIQ;EACE,gBAAA;AH4xIV;AG7xIQ;EACE,gBAAA;AH+xIV;AGhyIQ;EACE,gBAAA;AHkyIV;AGnyIQ;EACE,gBAAA;AHqyIV;AGtyIQ;EACE,gBAAA;AHwyIV;AGzyIQ;EACE,gBAAA;AH2yIV;AG5yIQ;EACE,gBAAA;AH8yIV;AG/yIQ;EACE,gBAAA;AHizIV;AGlzIQ;EACE,gBAAA;AHozIV;AGrzIQ;EACE,gBAAA;AHuzIV;AGxzIQ;EACE,gBAAA;AH0zIV;AG3zIQ;EACE,gBAAA;AH6zIV;AG9zIQ;EACE,gBAAA;AHg0IV;AGj0IQ;EACE,gBAAA;AHm0IV;AGp0IQ;EACE,gBAAA;AHs0IV;AGv0IQ;EACE,gBAAA;AHy0IV;AG10IQ;EACE,gBAAA;AH40IV;AG70IQ;EACE,gBAAA;AH+0IV;AGh1IQ;EACE,gBAAA;AHk1IV;AGn1IQ;EACE,gBAAA;AHq1IV;AGt1IQ;EACE,gBAAA;AHw1IV;AGz1IQ;EACE,gBAAA;AH21IV;AG51IQ;EACE,gBAAA;AH81IV;AG/1IQ;EACE,gBAAA;AHi2IV;AGl2IQ;EACE,gBAAA;AHo2IV;AGr2IQ;EACE,gBAAA;AHu2IV;AGx2IQ;EACE,gBAAA;AH02IV;AG32IQ;EACE,gBAAA;AH62IV;AG92IQ;EACE,gBAAA;AHg3IV;AGj3IQ;EACE,gBAAA;AHm3IV;AGp3IQ;EACE,gBAAA;AHs3IV;AGv3IQ;EACE,gBAAA;AHy3IV;AG13IQ;EACE,gBAAA;AH43IV;AG73IQ;EACE,gBAAA;AH+3IV;AGh4IQ;EACE,gBAAA;AHk4IV;AGn4IQ;EACE,gBAAA;AHq4IV;AGt4IQ;EACE,gBAAA;AHw4IV;AGz4IQ;EACE,gBAAA;AH24IV;AG54IQ;EACE,gBAAA;AH84IV;AG/4IQ;EACE,gBAAA;AHi5IV;AGl5IQ;EACE,gBAAA;AHo5IV;AGr5IQ;EACE,gBAAA;AHu5IV;AGx5IQ;EACE,gBAAA;AH05IV;AG35IQ;EACE,gBAAA;AH65IV;AG95IQ;EACE,gBAAA;AHg6IV;AGj6IQ;EACE,gBAAA;AHm6IV;AGp6IQ;EACE,gBAAA;AHs6IV;AGv6IQ;EACE,gBAAA;AHy6IV;AG16IQ;EACE,gBAAA;AH46IV;AG76IQ;EACE,gBAAA;AH+6IV;AGh7IQ;EACE,gBAAA;AHk7IV;AGn7IQ;EACE,gBAAA;AHq7IV;AGt7IQ;EACE,gBAAA;AHw7IV;AGz7IQ;EACE,gBAAA;AH27IV;AG57IQ;EACE,gBAAA;AH87IV;AG/7IQ;EACE,gBAAA;AHi8IV;AGl8IQ;EACE,gBAAA;AHo8IV;AGr8IQ;EACE,gBAAA;AHu8IV;AGx8IQ;EACE,gBAAA;AH08IV;AG38IQ;EACE,gBAAA;AH68IV;AG98IQ;EACE,gBAAA;AHg9IV;AGj9IQ;EACE,gBAAA;AHm9IV;AGp9IQ;EACE,gBAAA;AHs9IV;AGv9IQ;EACE,gBAAA;AHy9IV;AG19IQ;EACE,gBAAA;AH49IV;AG79IQ;EACE,gBAAA;AH+9IV;AGh+IQ;EACE,gBAAA;AHk+IV;AGn+IQ;EACE,gBAAA;AHq+IV;AGt+IQ;EACE,gBAAA;AHw+IV;AGz+IQ;EACE,gBAAA;AH2+IV;AG5+IQ;EACE,gBAAA;AH8+IV;AG/+IQ;EACE,gBAAA;AHi/IV;AGl/IQ;EACE,gBAAA;AHo/IV;AGr/IQ;EACE,gBAAA;AHu/IV;AGx/IQ;EACE,gBAAA;AH0/IV;AG3/IQ;EACE,gBAAA;AH6/IV;AG9/IQ;EACE,gBAAA;AHggJV;AGjgJQ;EACE,gBAAA;AHmgJV;AGpgJQ;EACE,gBAAA;AHsgJV;AGvgJQ;EACE,gBAAA;AHygJV;AG1gJQ;EACE,gBAAA;AH4gJV;AG7gJQ;EACE,gBAAA;AH+gJV;AGhhJQ;EACE,gBAAA;AHkhJV;AGnhJQ;EACE,gBAAA;AHqhJV;AGthJQ;EACE,gBAAA;AHwhJV;AGzhJQ;EACE,gBAAA;AH2hJV;AG5hJQ;EACE,gBAAA;AH8hJV;AG/hJQ;EACE,gBAAA;AHiiJV;AGliJQ;EACE,gBAAA;AHoiJV;AGriJQ;EACE,gBAAA;AHuiJV;AGxiJQ;EACE,gBAAA;AH0iJV;AG3iJQ;EACE,gBAAA;AH6iJV;AG9iJQ;EACE,gBAAA;AHgjJV;AGjjJQ;EACE,gBAAA;AHmjJV;AGpjJQ;EACE,gBAAA;AHsjJV;AGvjJQ;EACE,gBAAA;AHyjJV;AG1jJQ;EACE,gBAAA;AH4jJV;AG7jJQ;EACE,gBAAA;AH+jJV;AGhkJQ;EACE,gBAAA;AHkkJV;AGnkJQ;EACE,gBAAA;AHqkJV;AE95FA,mCAAA;AAgJA,yDAAA;AA6XA,yDAAA;AAi1DA,2CAAA;AA6CA,qBAAA;AApjDE;EACE,gBAvLoB;EAwLpB,eAzLkB;EA0LlB,iDAAA;AF+kEJ;AE5kEE;EAEE,cAAA;AF8kEJ;AE3kEE;EACE,eAAA;AF8kEJ;AEl6EE;EAvSE,wDAAA;EAYF,sBAAA;EA6RE,gBAAA;AFs6EJ;AEn6EE;EA5SE,wDAAA;EAYF,sBAAA;EAkSE,gBAAA;AFu6EJ;AEp6EE;EAjTE,wDAAA;EAYF,sBAAA;EAuSE,gBAAA;AFw6EJ;AEr6EE;EAtTE,wDAAA;EAYF,sBAAA;EA4SE,gBAAA;AFy6EJ;AEn6EE;EA9TE,qEAAA;EAuUA,gBAAA;AF+5EJ;AE55EE;EA1UE,qEAAA;EAmVA,gBAAA;AFw5EJ;AEr5EE;EAtVE,wDAAA;EAYF,sBAAA;AFouFF;AEt5EE;EA1VE,wDAAA;EAYF,sBAAA;AFyuFF;AEx5EI;EACE,gBAAA;AF05EN;AEt5EE;EAlWE,wDAAA;EAYF,sBAAA;AFivFF;AEv5EE;EAtWE,0DAAA;EAYF,uBAAA;EA4VE,gBAAA;AF25EJ;AEx5EE;EA3WE,wDAAA;EAYF,uBAAA;EAiWE,gBAAA;AF45EJ;AEz5EE;EAhXE,wDAAA;EAYF,wBAAA;EAsWE,gBAAA;AF65EJ;AE15EE;EArXE,wDAAA;EAYF,sBAAA;EA2WE,gBAAA;AF85EJ;AE7mEE;EAxqBE,wDAAA;EAYF,sBAAA;AF8wFF;AEn7DE;;EAGI,iDAAA;EACA,eAAA;EACA,gBAAA;AFq7DN;AEhvDE;EACE,iDAAA;AFmvDJ;AElrDE;EACE,iDAAA;AFqrDJ;AElrDE;EAEI,eAAA;EACA,gBAAA;AForDN;AEhrDE;EACE,eAAA;AFmrDJ;AEhrDE;;EAEE,eAAA;AFmrDJ;AEtjDE;EACE,iDAAA;AFyjDJ;AErjDE;EACE,iBAAA;AFwjDJ;AEp8CE;EACE,eAAA;EACA,gBAAA;AFu8CJ;AEr8CI;;EAEE,eA3FsB;AFkiD5B;AE91CE;EACE,iDAAA;AFi2CJ;AE91CE;EACE,eAAA;EACA,gBAAA;AFi2CJ;AE91CE;EACE,eAAA;AFi2CJ;AEjpCE;EACE,iDAAA;AFopCJ;AEjpCE;EACE,eAjL0B;AFq0C9B;AEjpCE;;EAGI,eAAA;EACA,gBAAA;AFmpCN;AE/oCE;EAEI,eA7LiC;EA8LjC,gBAAA;AFipCN;AE9jCE;EA1yDE,wDAAA;EAYF,sBAAA;AFi2FF;AE58BE;EAEI,iDAAA;EACA,eAAA;EACA,gBAAA;AF88BN;AE18BE;EAz6DE,wDAAA;EAYF,sBAAA;AF42FF;AE0tDE;EA3lJE,kBAeU;EAdV,gBAeY;EAdZ,kBAeY;EAdZ,iDAeY;EAGd,sBAAA;AFo3FF;AEstDE;EACE,yBAPuB;AF5sD3B;AEytDI;;EACE,eAvB2B;EAwB3B,kBAvlJU;AFk4FhB;AEytDI;;EACE,aAAA;EACA,YAAA;AFttDN;AEwtDM;;EACE,eAAA;EACA,kBAjmJQ;AF44FhB;AE0tDE;EACE,gBAAA;EAEA,uCAAA;AFxtDJ;AE4tDI;;EAtEF,6CAAA;EAEA,sBAAA;AFlpDF;AE8tDI;EA9EF,6CAAA;EAEA,sBAAA;AF9oDF;AEiuDE;EACE,eAAA;EACA,sBAnEiB;AF3pDrB;AEiuDE;EACE,cAAA;AF9tDJ;AEiuDE;EAGE,iBAhEuB;AFhqD3B;AEmuDE;EACE,cA/EoB;EAgFpB,0BAzEqB;EA6ErB,gCAAA;AFnuDJ;AEmtCI;EACE,sBAJqB;AF5sC3B;AEmtCI;EACE,mBAAA;AFjtCN;AEqtCM;;EA1DJ,oFAAA;EAIA,iDAAA;EAGA,sBAAA;AF5pCF;AEstCM;EAjEJ,sFAAA;EAIA,iDAAA;EAGA,sBAAA;AFvpCF;AEytCM;EAzEJ,sFAAA;EAIA,iDAAA;EAGA,sBAAA;AFlpCF;AE2tCI;EACE,cAAA;AFztCN;AE4tCI;EAGE,cAzCqB;AFnrC3B;AE+tCI;EACE,0BAjDmB;EAqDnB,gCAAA;AFhuCN;AEsuCE;EAGM;;IAxFN,6CAAA;EF3oCA;EE0uCM;IA/FN,6CAAA;EFxoCA;EE+uCM;IAvGN,4CAAA;EFroCA;AACF;AEkhCI;EACE,0BAAA;AFhhCN;AEmhCI;EACE,cAAA;EACA,kBAT2B;AFxgCjC;AEqhCM;;EAjCJ,6CAAA;EAEA,sBAAA;AFj/BF;AEyhCM;EA1CJ,6CAAA;EAEA,sBAAA;AF7+BF;AEm2CI;EACE,oBAAA;AFh2CN;AEm2CI;EACE,cAAA;EACA,mBAT8B;AFx1CpC;AEq2CM;;EAxCJ,6CAAA;EAEA,sBAAA;AF1zCF;AEy2CM;EAjDJ,6CAAA;EAEA,sBAAA;AFtzCF;AEr/BE;;EAGE,eAAA;AFu/BJ;AExiCE;;EARA,mBAAA;EACA,gBAAA;EACA,uBAAA;EAQE,cAAA;EACA,sBAAA;AF6iCJ;AE1iCI;;EACE,eAyCqB;AFogC3B;AE/yBE;EACE,qBAAA;AFkzBJ;AEvnBE;EAEI,iDAAA;EACA,eAAA;EACA,gBAAA;AFynBN;AEriBE;;EAGI,iDAAA;EACA,eAAA;AFuiBN;AEjUE;EACE,iDAAA;AFoUJ;AEpOE;EACE,iDAAA;AFuOJ;AEpOE;EACE,eAAA;AFuOJ;AE9BE;EACE,iDAAA;AFiCJ;AEiKE;EAEI,iDAAA;EACA,eAAA;EACA,gBAAA;AF/JN;AEwSE;EACE,iDAAA;AFrSJ;AEwSE;EAEI,eAAA;EACA,gBAAA;AFtSN;AE0SE;EACE,mBAAA;AFvSJ;AE0SE;EACE,eAAA;AFvSJ;AE0SE;EAEI,eAAA;EACA,gBAAA;AFxSN;AE0hBE;EACE,iDAAA;AFvhBJ;AE0hBE;EAEI,iDAAA;EACA,eAAA;EACA,gBAAA;AFxhBN;AEspBE;;;;;;;EAlvHE,wDAAA;EAYF,sBAAA;EA8uHE,SAAA;AFlpBJ;AEstBE;EACE,iDAAA;EACA,eArBoB;EAsBpB,gBArB2B;EAsB3B,mBAtB2B;AF7rB/B;AEstBE;EACE,eAvB4B;EAwB5B,gBAtBA;EAuBA,mBAvBA;AF5rBJ;AEn0BE;EACE,iDAHY;AFy0BhB;AEn0BE;EACE,iDAPY;AF60BhB;AEj0BI;EACE,eAAA;AFo0BN;AE/pCE;EARA,mBAAA;EACA,gBAAA;EACA,uBAAA;EAQE,cAAA;EACA,sBAAA;AFmqCJ;AEhqCI;EACE,eAqVuB;AF60B7B;AE10BI;EACE,eAAA;AF40BN;AE5qCE;EARA,mBAAA;EACA,gBAAA;EACA,uBAAA;EAQE,cAAA;EACA,sBAAA;AFgrCJ;AE7qCI;EACE,eA0VuB;AFq1B7B;AEl1BI;EACE,iDAAA;EACA,eAAA;EACA,gBAAA;AFo1BN;AE90BI;EACE,eAAA;AFi1BN;AE/rCE;EARA,mBAAA;EACA,gBAAA;EACA,uBAAA;EAQE,cAAA;EACA,sBAAA;AFmsCJ;AEhsCI;EACE,eAwWuB;AF01B7B;AEv1BI;EACE,eAAA;AFy1BN;AE5sCE;EARA,mBAAA;EACA,gBAAA;EACA,uBAAA;EAQE,cAAA;EACA,sBAAA;AFgtCJ;AE7sCI;EACE,eA6WuB;AFk2B7B;AE/1BI;EACE,iDAx3EY;EAy3EZ,eAAA;EACA,gBAAA;AFi2BN;AE/nGE;EAEI,iDAAA;EACA,eAAA;AFioGN;AEnlGE;EA/GE,wDAAA;EAYF,sBAAA;AF2rGF;AEsrBE;EAEI,iDAAA;EACA,eAAA;AFprBN;AEwrBE;EACE,cAAA;EAEE,oBAAA;EACA,kBAAA;EACA,gBAAA;AFtrBN;AEghDE;EACE,iDAAA;AF7gDJ;AEghDE;;EAEE,gBAAA;EACA,eAAA;AF7gDJ;AEz+GE;EACE,gBAAA;EAIA,kBAAA;AFy+GJ;AEl+GI;EACE,wBAAA;AFo+GN;AEh+GE;EACE,iBAAA;AFm+GJ;AEh+GE;EACE,kBAAA;EACA,kBAAA;EACA,oBAAA;EAEA,6DAAA;EACA,mBAAA;AFk+GJ;AEtgKI;EAwiDE,aAAA;AFi+GN;AEpiKE;EACE,SAAA;EACA,mBAAA;EACA,WAAA;EACA,YAAA;EACA,gBAAA;EACA,UAAA;EACA,kBAAA;EACA,UAAA;EAGA,UAAA;EAGA,wBAAA;EACA,qBAAA;AFmiKJ;AEjrKE;EAEE,oBAAA;EAGA,MAAA;EACA,OAAA;EACA,YAAA;EACA,WAAA;AFirKJ;AE7qKE;EACE,eAAA;EACA,aA3B4B;AF2sKhC;AE9qKI;EAGE,aAAA;AF8qKN;AEtqKE;EACE,aAAA;EACA,kBAAA;EACA,aA1CkB;AFmtKtB;AErqKE;EAGE,kBAAA;EACA,oBAAA;EACA,sBAAA;EACA,aApDkB;EAwDlB,aAAA;EACA,eAAA;EACA,gBAAA;AFmqKJ;AEhqKE;EAEE,kBAAA;EACA,MAAA;EACA,SAAA;EACA,OAAA;EACA,QAAA;EAEA,aApE2B;EAqE3B,oBAAA;EACA,wCAAA;EACA,0DAAA;EACA,UAAA;AFiqKJ;AE/pKI;EACE,UAAA;AFiqKN;AE3pKM;EAPF;IAQI,YAAA;EF8pKN;AACF;AE1pKE;EACE,+BArFmC;AFkvKvC;AErpKI;EACE,UAAA;AFwpKN;AElpKE;EACE,kBAAA;EACA,aA1GkB;EA+GlB,aAAA;EAIA,sBAAA;EAGA,cAAA;EACA,eAAA;AF4oKJ;AExoKE;EACE,eAAA;EAKA,WAAA;EAKA,kBAAA;AFmoKJ;AE1iKE;EAA0C,IAAA;AF8iK5C;AE7iKE;EAAwC,IAAA;AFgjK1C;AE9iKE;EAEE,+CAAA;AF+iKJ;AE5iKE;EAEE,6CAAA;AF8iKJ;AEziKE;EACE,YAAA;AF4iKJ;AEtiKE;EAqBA,yBAAA;EACA,kCAAA;EApBE,uBAAA;EACA,2BAAA;AF0iKJ;AEjiKE;EASA,yBAAA;EACA,kCAAA;EARE,oBAAA;AFqiKJ;AEj7GE;EACE,kBAAA;AFo7GJ;AE4hDE;EACE,kBAAA;AFzhDJ;AEvlHE;EAII,oCAAA;AFulHN;AEj2GE;EACE,0BAAA;AFo2GJ;AEl2GI;EAEE,+BAAA;AFm2GN;AE/1GI;EACE,+BAAA;AFi2GN;AE91GI;EACE,+BAAA;EACA,0BAAA;AFg2GN;AE71GI;EACE,0BAAA;AF+1GN;AE31GE;EACE,cAAA;AF81GJ;AE31GE;EACE,cAAA;AF81GJ;AE31GE;EACE,cAAA;AF81GJ;AElzGE;EACE,0BAAA;AFqzGJ;AElzGE;EACE,0BAAA;AFqzGJ;AElwGE;EACE,0BAAA;AFqwGJ;AEnwGI;EACE,cAAA;AFqwGN;AEjwGE;EACE,cAZe;AFgxGnB;AEjwGE;;EAEE,mBAAA;AFowGJ;AE5vGE;;;;EAIE,mBAAA;AF+vGJ;AE5vGE;;EAEE,mBAAA;AF+vGJ;AE1vGI;;EACE,mBAxCa;AFsyGnB;AEy5CE;EAIE,yBAAA;EACA,0BAAA;AFz5CJ;AEg6CI;EA5yMF,wHAAA;AFg5JF;AE45CI;EA5yMF,yHAAA;AFo5JF;AEw5CI;EA5yMF,yHAAA;AFw5JF;AEo5CI;EA5yMF,yHAAA;AF45JF;AEg5CI;EA5yMF,0HAAA;AFg6JF;AE44CI;EA5yMF,0HAAA;AFo6JF;AEw4CI;EA5yMF,2HAAA;AFw6JF;AEo4CI;EA5yMF,2HAAA;AF46JF;AEg4CI;EA5yMF,2HAAA;AFg7JF;AE43CI;EA5yMF,2HAAA;AFo7JF;AEw3CI;EA5yMF,4HAAA;AFw7JF;AEo3CI;EA5yMF,4HAAA;AF47JF;AEg3CI;EA5yMF,4HAAA;AFg8JF;AE42CI;EA5yMF,4HAAA;AFo8JF;AEw2CI;EA5yMF,4HAAA;AFw8JF;AEo2CI;EA5yMF,4HAAA;AF48JF;AEg2CI;EA5yMF,6HAAA;AFg9JF;AE41CI;EA5yMF,6HAAA;AFo9JF;AEw1CI;EA5yMF,6HAAA;AFw9JF;AEo1CI;EA5yMF,6HAAA;AF49JF;AEg1CI;EA5yMF,8HAAA;AFg+JF;AE40CI;EA5yMF,8HAAA;AFo+JF;AEw0CI;EA5yMF,8HAAA;AFw+JF;AEo0CI;EA5yMF,8HAAA;AF4+JF;AEg0CI;EA5yMF,8HAAA;AFg/JF;AEm0CI;EACE,aAAA;AFh0CN;AExqGE;EAEE,iBAAA;EACA,0BAAA;AF0qGJ;AEt+JE;EAnBA,0HAAA;AF4/JF;AEtqGI;EACE,iBAAA;AFwqGN;AEtqGM;EACE,0BAAA;AFwqGR;AEziGE;EACE,YAAA;EACA,mBAAA;AF4iGJ;AEp1KI;EA2yEE,kBAAA;EACA,gBAAA;AF4iGN;AEviGI;EACE,mBAAA;EACA,YAAA;AF0iGN;AEriGI;EACE,YAAA;EACA,mBAAA;AFwiGN;AEpiGE;EACE,kBAAA;AFuiGJ;AEniGI;EACE,aAAA;AFsiGN;AEjiGI;EAWI,mBAAA;EAMF,0BAAA;AFqhGN;AEjhGE;EACE,kBAAA;EACA,kBAAA;EACA,qBAAA;EACA,kBAAA;EACA,uCAAA;EACA,qBAAA;EACA,gBAAA;EACA,mBAAA;EACA,uBAAA;EACA,oBAAA;AFohGJ;AEjhGE;;EAEE,gBAAA;AFohGJ;AE/gGE;EAEE,eAAA;AFihGJ;AEhrGE;EACE,WANmB;EAOnB,YAPmB;EAQnB,iBARmB;AF2rGvB;AE/qGI;EACE,SAAA;AFirGN;AE5qGI;EACE,YAAA;AF8qGN;AEzqGI;EACE,WAAA;AF2qGN;AEtqGI;EACE,UAAA;EACA,YAAA;AFwqGN;AEnqGI;EACE,YAAA;AFqqGN;AEhqGI;EACE,WAAA;EACA,WAAA;AFkqGN;AE5pGM;EACE,UAAA;AF8pGR;AEzpGM;EACE,UAAA;EACA,WAAA;AF2pGR;AEtpGM;EACE,WAAA;AFwpGR;AEnpGM;EACE,WAAA;EACA,UAAA;AFqpGR;AExtGE;EACE,WAPqB;EAQrB,YARqB;EASrB,iBATqB;AFouGzB;AEvtGI;EACE,UAAA;AFytGN;AEptGI;EACE,aAAA;AFstGN;AEjtGI;EACE,WAAA;AFmtGN;AE9sGI;EACE,UAAA;EACA,YAAA;AFgtGN;AE3sGI;EACE,YAAA;AF6sGN;AExsGI;EACE,WAAA;EACA,WAAA;AF0sGN;AEpsGM;EACE,WAAA;AFssGR;AEjsGM;EACE,UAAA;EACA,YAAA;AFmsGR;AE9rGM;EACE,YAAA;AFgsGR;AE3rGM;EACE,WAAA;EACA,WAAA;AF6rGR;AEhwGE;EACE,WALmB;EAMnB,YANmB;EAOnB,iBAPmB;AF0wGvB;AE/vGI;EACE,UAAA;AFiwGN;AE5vGI;EACE,aAAA;AF8vGN;AEzvGI;EACE,WAAA;AF2vGN;AEtvGI;EACE,UAAA;EACA,YAAA;AFwvGN;AEnvGI;EACE,YAAA;AFqvGN;AEhvGI;EACE,WAAA;EACA,WAAA;AFkvGN;AE5uGM;EACE,WAAA;AF8uGR;AEzuGM;EACE,UAAA;EACA,YAAA;AF2uGR;AEtuGM;EACE,YAAA;AFwuGR;AEnuGM;EACE,WAAA;EACA,WAAA;AFquGR;AEzkGE;EAvmEA,6HAAA;EAymEE,iBAAA;EACA,0BAAA;AF4kGJ;AE98FE;EAKE,cAAA;EACA,uBAAA;AF68FJ;AE7+FE;EACE,cAAA;AF++FJ;AE7+FE;EACE,cAAA;AF++FJ;AE7+FE;EACE,cAAA;AF++FJ;AE3+FI;EAEE,0BAAA;AF4+FN;AE/iGE;EACE,yBAAA;AFijGJ;AE9iGE;EACE,yBAAA;AFgjGJ;AE7iGE;EACE,yBAAA;AF+iGJ;AE5iGE;EACE,6BAAA;AF8iGJ;AE79FI;EACE,YAxGuB;EAyGvB,8BAAA;AF+9FN;AE39FE;EACE,iBAAA;AF89FJ;AEz9FE;EACE,iCAAA;AF49FJ;AEz9FE;EAEE,0BAAA;EACA,uBAAA;AF29FJ;AEthGE;EACE,YAAA;AFwhGJ;AEthGE;EACE,YAAA;AFwhGJ;AEthGE;EACE,YAAA;AFwhGJ;AEphGI;EAEE,0BAAA;AFqhGN;AEliGE;EACE,yBAAA;AFoiGJ;AEliGE;EACE,yBAAA;AFoiGJ;AEliGE;EACE,yBAAA;AFoiGJ;AEhiGI;EAEE,qCAAA;AFiiGN;AEnkGE;EAXA,0CADmB;AFklGrB;AElkGE;EAfA,0CADmB;AFqlGrB;AEjkGE;EAnBA,0CADmB;AFwlGrB;AElvKE;EAnBA,wHAAA;AFywKF;AEtvKE;EAnBA,yHAAA;AF6wKF;AE1vKE;EAnBA,2HAAA;AFgxKF;AE7vKE;EAnBA,wHAAA;AFmxKF;AEhwKE;EAnBA,2HAAA;AFuxKF;AEpwKE;EAnBA,4HAAA;AF0xKF;AEvwKE;EAnBA,wHAAA;AF6xKF;AE92FE;;EA/6EA,yHAAA;AFkyKF;AE92FE;;EAEE,gBAAA;AFi3FJ;AE92FE;EACE,0BAAA;AFi3FJ;AE/2FI;EACE,qCAAA;AFi3FN;AE72FE;EACE,0BAAA;EACA,iBAAA;AFg3FJ;AE92FI;EACE,uBAAA;AFg3FN;AE52FE;EACE,0CAAA;AF+2FJ;AE52FE;EACE,iBAAA;EACA,2CAAA;AF+2FJ;AE32FI;EACE,iBAAA;EACA,kBAAA;EACA,yCAAA;AF82FN;AE12FE;EACE,yBAAA;EACA,0BAAA;AF62FJ;AE32FI;EACE,0BAAA;AF62FN;AEz2FE;EACE,0BAAA;EACA,yBAAA;AF42FJ;AE12FI;EACE,iBAAA;AF42FN;AEz2FI;EACE,yBAAA;AF22FN;AEv2FE;;EAEE,qCAAA;AF02FJ;AEz1FI;EACE,iBALc;AFi2FpB;AExzFE;EAEE,iBAAA;EACA,0BAAA;AF0zFJ;AEn1KE;EAnBA,yHAAA;AFy2KF;AEt1KE;EAnBA,wHAAA;AF42KF;AExzFE;EACE,0BAAA;AF2zFJ;AElvFE;EACE,iCAAA;AFqvFJ;AElvFE;EACE,aAdoB;AFmwFxB;AElvFE;EAGE,0BAAA;AFmvFJ;AEhvFE;EACE,yBAxBoB;AF2wFxB;AE/uFI;EACE,yBAAA;AFkvFN;AE/uFI;EACE,yBAAA;AFivFN;AE9uFI;EACE,yBAAA;AFgvFN;AEzuFM;EACE,yBAtCW;AFkxFnB;AEvuFM;EACE,qBA5CW;AFqxFnB;AEruFI;EACE,0BAAA;AFuuFN;AEjuFE;EACE,uBAAA;AFouFJ;AE/tFI;;EACE,mBAAA;AFmuFN;AEhuFI;;EACE,mBAAA;AFmuFN;AEhuFI;;EACE,mBAAA;AFmuFN;AEzoFE;EA3CA,yBAwCwB;EAvCxB,0BAwCwB;AFgpF1B;AEtrFE;EACE,0BAqCsB;EApCtB,YAAA;AFwrFJ;AE9oFM;EAhyFJ,yHAAA;AFi7KF;AE7oFM;EACE,aAAA;AF+oFR;AE3oFI;EACE,YAAA;AF6oFN;AE1oFI;EACE,iBAAA;AF4oFN;AEvoFI;EAlEF,yBAwBwE;EAvBxE,YAuBiC;AFsrFnC;AE3sFE;EACE,YAoB+B;EAnB/B,YAAA;AF6sFJ;AExrFE;EATA,0CADmB;AFqsFrB;AE/oFI;EAtEF,yBAwBwE;EAvBxE,YAuBiC;AFisFnC;AEttFE;EACE,YAoB+B;EAnB/B,YAAA;AFwtFJ;AEnsFE;EATA,0CADmB;AFgtFrB;AEtpFI;EA1EF,yBAwBwE;EAvBxE,YAuBiC;AF4sFnC;AEjuFE;EACE,YAoB+B;EAnB/B,YAAA;AFmuFJ;AE9sFE;EATA,0CADmB;AF2tFrB;AErkFE;EACE,iBAAA;AFwkFJ;AErkFE;;;;EAIE,mBAAA;AFwkFJ;AErkFE;;EAEE,wCAAA;AFwkFJ;AErkFE;EACE,0BAAA;AFwkFJ;AErkFE;EACE,0BAAA;AFwkFJ;AEx+EE;EACE,qCAAA;AF2+EJ;AEt+EE;;;EAGE,0BAAA;AFy+EJ;AEt+EE;EACE,0BAAA;AFy+EJ;AEt+EE;EACE,+BAAA;AFy+EJ;AEt+EE;EACE,0BAAA;AFy+EJ;AEt+EE;;EAEE,0BAAA;EACA,yBAAA;AFy+EJ;AE/gFE;EA2CI,0BAlCa;AF0gFnB;AEp+EE;EACE,0BAvCe;AF8gFnB;AEvhFE;;;EAwDM,qCAAA;AFq+ER;AEh+EE;EAOI,0BAAA;AF69EN;AEjiFE;EA+EI,iCAAA;AFs9EN;AEriFE;EAwFM,iCAAA;AFi9ER;AEh4EE;EACE,mCAtMA;AFykFJ;AEh4EE;;EAEE,kCAViB;AF64ErB;AEh4EE;;EAEE,8FAAA;AFm4EJ;AEh4EE;;EAEE,6FAAA;AFm4EJ;AEh4EE;;EAEE,mBAxBc;AF25ElB;AEh4EE;;EAEE,mBA5BuB;AF+5E3B;AEhmFE;EACE,yBAAA;EACA,YAAA;AFmmFJ;AEhmFE;EAII,yCAAA;AFgmFN;AEvlFE;EACE,iCAAA;AF0lFJ;AE7+EE;EAvmGA,0HAAA;EAymGE,uBAAA;EACA,0BAAA;AFg/EJ;AEh7EE;EACE,mCAtMA;AFwnFJ;AE/6EE;;EAEE,kCAViB;AF27ErB;AE96EE;;EAEE,8FAAA;AFg7EJ;AE76EE;;EAEE,6FAAA;AF+6EJ;AE56EE;;EAEE,mBAxBc;AFs8ElB;AE36EE;;EAEE,mBA5BuB;AFy8E3B;AE1oFE;EACE,yBAAA;EACA,YAAA;AF4oFJ;AEzoFE;EAII,yCAAA;AFwoFN;AE/nFE;EACE,iCAAA;AFioFJ;AEj9EE;EACE,kCAtMA;AFypFJ;AEh9EE;;EAEE,kCAViB;AF49ErB;AE/8EE;;EAEE,6FAAA;AFi9EJ;AE98EE;;EAEE,4FAAA;AFg9EJ;AE78EE;;EAEE,mBAxBc;AFu+ElB;AE58EE;;EAEE,mBA5BuB;AF0+E3B;AE3qFE;EACE,yBAAA;EACA,YAAA;AF6qFJ;AE1qFE;EAII,wCAAA;AFyqFN;AEhqFE;EACE,iCAAA;AFkqFJ;AEviFE;EArnGA,wHAAA;AFgqLF;AEviFE;EACE,cAAA;AF0iFJ;AExiFI;EACE,cAAA;AF0iFN;AEviFI;EACE,cAAA;AFyiFN;AEriFE;EACE,0BAAA;AFwiFJ;AEr8EE;EAzuGA,8HAAA;EA2uGE,iBAAA;EACA,0BAAA;AFw8EJ;AEv0FE;EACE,qCAAA;AF00FJ;AEv0FE;EACE,uCAAA;AF00FJ;AEr4EE;EAEE,iBAAA;EACA,0BAAA;AFu4EJ;AE9qLE;EAnBA,yHAAA;AFosLF;AEv4EE;EACE,qCAAA;AF04EJ;AEn4EM;EACE,+BAAA;AFs4ER;AE/3EE;EACE;IAEE,iBAAA;EFi4EJ;AACF;AE93EE;EACE,0BAAA;AFg4EJ;AE73EE;;EAEE,0BAAA;AFg4EJ;AE73EE;EACE,0BAAA;AFg4EJ;AE93EI;;EAEE,cAAA;AFg4EN;AEp2EI;EACE,YALe;AF42ErB;AEr2EM;EACE,YAVY;AFi3EpB;AEiLE;EACE,yBAXY;AFnKhB;AEiLE;EACE,yBAfY;AF/JhB;AEiLE;EACE,cAlBoB;AF5JxB;AEgLI;EACE,cAhBqB;AF9J3B;AEiLI;EACE,cAnBmB;AF5JzB;AEmLE;EACE,cA7BqB;AFnJzB;AEmLE;EACE,qCA9BqB;AFlJzB;AEoLI;EACE,yBAhCsB;AFjJ5B;AEmLM;EACE,yBArCmB;AF5I3B;AEoLM;EACE,yBAxCiB;AF1IzB;AEwLI;EACE,cA9CsB;AFvI5B;AEwLI;EACE,cApDqB;AFlI3B;AEyLI;EACE,cAvDmB;AFhIzB;AE+LI;EACE,cAhEmB;AF5HzB;AE8LM;;EAEE,cApEiB;AFxHzB;AEgMI;;EAEE,yBA1EmB;AFpHzB;AEkME;EACE,cA/EqB;AFhHzB;AErSI;EACE,0BALU;AF6ShB;AErSI;EACE,0BATU;AFgThB;AEpSI;EACE,qCAZc;AFkTpB;AEnSI;EA/9DF,4GAAA;EACA,yBAAA;EACA,2BAAA;AFqwEF;AE6CI;EACE,qCAJc;AFtCpB;AE6CI;EAxzEF,4GAAA;EACA,yBAAA;EACA,2BAAA;AF8wEF;AExbI;EACE,qCAPc;AFkcpB;AExbI;EACE,qCAVuB;AFoc7B;AEvbI;EACE,qCAbc;AFscpB;AErbM;EACE,0BAjBiB;AFwczB;AEpbM;EACE,6BAAA;AFsbR;AE/HI;EACE,0BATY;AF2IlB;AE/HI;EACE,0BAZkB;AF6IxB;AE7HM;EACE,cAhBkB;AF+I1B;AE5HM;EACE,cAnBiB;AFiJzB;AE3HM;EACE,cAtBe;AFmJvB;AEvHM;EACE,cA7Be;AFsJvB;AEpHM;EACE,0BAxCiB;AF8JzB;AEnHM;EACE,0BAtCmB;AF2J3B;AEx2EI;EACE,cAAA;AF22EN;AEx2EI;EACE,cAAA;AF02EN;AEv2EI;EACE,cAAA;AFy2EN;AE5vEE;EACE,0BAAA;AF+vEJ;AE5vEE;;EAEE,0BAAA;AF+vEJ;AE5vEE;EACE,oBAAA;AF+vEJ;AExzEE;EA4DI,0BAAA;AF+vEN;AEvzEE;EAwDI,0BAAA;AFkwEN;AEtzEE;EAoDI,0BAAA;AFqwEN;AErzEE;EAgDI,0BAAA;AFwwEN;AErvEE;EACE,oBAAA;AFwvEJ;AErvEE;;EAEE,oBAAA;AFwvEJ;AErvEE;EACE,cAAA;AFwvEJ;AElsEI;EACE,0BAAA;AFqsEN;AElsEI;EACE,0BAAA;AFosEN;AEjsEI;EACE,0BAAA;AFmsEN;AE/rEE;EACE,yBAAA;AFksEJ;AE5rEI;;;;;EACE,+BAAA;AFmsEN;AE9rEI;EACE,+BAAA;AFisEN;AExmEE;EAEE,iBAAA;AF0mEJ;AEn6LE;EAnBA,0HAAA;AFy7LF;AE1mEE;EACE,uBAAA;EACA,0BAAA;AF6mEJ;AE1mEM;EACE,0BAAA;AF4mER;AEvmEE;;EAEE,0BAAA;AF0mEJ;AEnmEI;;;;EACE,+BAAA;AFymEN;AE1iEE;EACE,iBAAA;AF6iEJ;AE1iEE;;EAEE,0BAAA;AF6iEJ;AE1iEE;;EAEE,yCAAA;EACA,2CAAA;AF6iEJ;AE1iEE;;EAEE,yCAAA;AF6iEJ;AEziEI;;;;EAIE,iCAAA;AF4iEN;AEvhEI;EACE,gBAJK;AF8hEX;AEx/DE;EACE,aAAA;AF2/DJ;AEx/DE;EACE,yBAAA;AF2/DJ;AEx/DE;EACE,yBAAA;AF2/DJ;AEv/DI;EACE,aAAA;AF0/DN;AEv/DI;EACE,yBAAA;AFy/DN;AEt/DI;EACE,yBAAA;AFw/DN;AEn/DI;EACE,aAAA;AFs/DN;AEn/DI;EACE,yBAAA;AFq/DN;AEl/DI;EACE,yBAAA;AFo/DN;AE58DI;EACE,eAAA;AF+8DN;AE58DI;EACE,eAAA;AF88DN;AE38DI;EACE,eAAA;AF68DN;AEv5DE;EACE,iCAAA;AF05DJ;AE/6DE;EACE,qBAAA;AFk7DJ;AE/6DE;;EAIE,yBAAA;AF+6DJ;AEv7DE;EACE,qBAAA;AFy7DJ;AEt7DE;;EAIE,yBAAA;AFs7DJ;AE97DE;EACE,qBAAA;AFg8DJ;AE77DE;;EAIE,yBAAA;AF67DJ;AE55DM;;EAEE,iCAAA;AF85DR;AE35DM;;EAEE,qCAAA;AF65DR;AE15DM;EACE,0BAAA;AF45DR;AEt5DI;EACE,uBAAA;AFw5DN;AEv2DE;EACE,0BAAA;AF02DJ;AEv2DE;EACE,0BAAA;AF02DJ;AEv2DE;EACE,0BAAA;AF02DJ;AEv2DE;EACE,0BAAA;AF02DJ;AEv2DE;EACE,iBAAA;AF02DJ;AE/jME;EAnBA,0HAAA;AFqlMF;AE12DI;EACE,+BAAA;AF42DN;AEt2DM;EACE,cAAA;AFy2DR;AEt2DM;EACE,cAAA;AFw2DR;AEr2DM;EACE,cAAA;AFu2DR;AEn2DI;EACE,cAAA;AFq2DN;AEl2DI;EACE,0BAAA;AFo2DN;AE1yDE;EACE,yBALmC;EAMnC,0BAAA;AF6yDJ;AE1yDE;EACE,uBAXwB;EAYxB,0BAAA;AF6yDJ;AE3yDI;EACE,uBAb2B;AF0zDjC;AE1yDI;EA30IF,6HAAA;AFwnMF;AEtyDE;EACE,2CAvBmB;AFg0DvB;AEvyDI;EACE,0CA1BiB;EA2BjB,kBAAA;AFyyDN;AEryDE;EACE,0CAhCmB;EAiCnB,kBAAA;AFwyDJ;AEtyDI;EACE,iBAAA;EACA,2CArCiB;AF60DvB;AEpyDE;EAQI,oCAAA;AFgyDN;AEtvDI;EACE,yBAAA;AFyvDN;AEtvDI;EAGE,0CAAA;AFsvDN;AEnvDI;EAGE,yBAAA;AFmvDN;AEhwDI;EACE,yBAAA;AFkwDN;AE/vDI;EAGE,0CAAA;AF+vDN;AE5vDI;EAGE,yBAAA;AF4vDN;AEzwDI;EACE,yBAAA;AF2wDN;AExwDI;EAGE,yCAAA;AFwwDN;AErwDI;EAGE,yBAAA;AFqwDN;AEhuDI;EAGE,uBAhBqB;AFgvD3B;AE5tDE;EAh9IA,yHAAA;EAk9IE,yBAAA;AF+tDJ;AE5tDE;EACE,qCA3BoB;AF0vDxB;AEhpDE;EACE,qCAVqB;AF6pDzB;AE5rDE;;;EAGE,yBAAA;AF+rDJ;AE5rDE;EACE,YAAA;AF8rDJ;AE3rDE;EAGE,yCADQ;AF4rDZ;AExsDE;;;EAGE,yBAAA;AF2sDJ;AExsDE;EACE,YAAA;AF0sDJ;AEvsDE;EAGE,yCADQ;AFwsDZ;AEptDE;;;EAGE,yBAAA;AFutDJ;AEptDE;EACE,YAAA;AFstDJ;AEntDE;EAGE,wCADQ;AFotDZ;AEtqDI;;EACE,qCA3B2B;AFqsDjC;AErqDI;;;EAGE,qCAlCwB;AF0sD9B;AEpqDM;EACE,qCAvCsB;AF6sD9B;AEhqDI;EAGE,qCADQ;AFkqDd;AEvpDM;;EAEE,qCA3DqC;AFotD7C;AErpDQ;;EAEE,qCAhEyC;AFutDnD;AEjpDM;EACE,iCA3EiB;EA4EjB,6BAAA;AFmpDR;AE9oDQ;EACE,iCAjFuB;AFiuDjC;AE7oDQ;EACE,iCApFoB;AFmuD9B;AEzoDE;EACE,gCAvFsB;AFmuD1B;AEnoDE;EACE,6HAAA;EAIA,mIAAA;AFmoDJ;AEznDE;EACE,8HAAA;AF4nDJ;AEriDI;EAGE,qCAAA;AFsiDN;AEhiDI;EACE;IACE,gBAAA;EFkiDN;AACF;AE/hDI;;EAIE,0BAAA;AF+hDN;AE5hDI;EAGE,qCAAA;EACA,YAAA;AF4hDN;AEzhDI;;;EAGE,yBAAA;EACA,YAAA;AF2hDN;AExhDI;EACE,6BAAA;EACA,cAAA;AF0hDN;AEvhDI;EACE,0BAAA;AFyhDN;AEthDI;EACE,cAAA;AFwhDN;AEphDE;EACE,uBAAA;AFuhDJ;AEphDE;EACE,sCAAA;AFuhDJ;AEphDE;;;EAGE,qCAAA;AFuhDJ;AEh/CI;EACE,YALK;AFw/CX;AEh/CI;;EAEE,kBAAA;AFm/CN;AE9+CI;EACE,UAAA;EACA,aAAA;AFi/CN;AE5+CM;EACE,SAAA;AF++CR;AE1+CI;EACE,SAAA;AF6+CN;AE78CE;EAYI,cAAA;AFq8CN;AEx5CE;;EAEE,4CAJc;AF+5ClB;AEv5CI;;EAEE,yCAVY;EAWZ,mBAAA;AF05CN;AEt5CE;EACE,0BAAA;AFy5CJ;AEv5CI;EACE,0BAAA;AFy5CN;AEr5CE;EACE,iCAAA;AFw5CJ;AEr5CE;EACE,iCAAA;AFw5CJ;AEp5CE;;EAEE,mBAAA;EACA,gBAAA;AFu5CJ;AE32CM;;;;;EACE,0CAAA;AFk3CR;AE73CE;EACE,yBAAA;AF+3CJ;AEh4CE;EACE,uBAAA;AFk4CJ;AEz3CM;;;;;EACE,0CAAA;AF+3CR;AE14CE;EACE,yBAAA;AF44CJ;AE74CE;EACE,uBAAA;AF+4CJ;AEt4CM;;;;;EACE,0CAAA;AF44CR;AEv5CE;EACE,yBAAA;AFy5CJ;AE15CE;EACE,uBAAA;AF45CJ;AEn5CM;;;;;EACE,0CAAA;AFy5CR;AEj5CE;EACE,yBAAA;AFm5CJ;AE/4CE;EACE,YAAA;AFi5CJ;AE/4CI;EACE,+BAAA;AFi5CN;AE54CE;EACE,mBAAA;AF84CJ;AE34CE;EACE,sCAAA;AF64CJ;AEx4CE;EACE,2CAAA;AF04CJ;AE56CM;;;;;EACE,0CAAA;AFk7CR;AE16CE;EACE,yBAAA;AF46CJ;AEx6CE;EACE,YAAA;AF06CJ;AEx6CI;EACE,+BAAA;AF06CN;AEr6CE;EACE,mBAAA;AFu6CJ;AEp6CE;EACE,sCAAA;AFs6CJ;AEj6CE;EACE,2CAAA;AFm6CJ;AEr8CM;;;;;EACE,0CAAA;AF28CR;AEn8CE;EACE,yBAAA;AFq8CJ;AEj8CE;EACE,YAAA;AFm8CJ;AEj8CI;EACE,+BAAA;AFm8CN;AE97CE;EACE,mBAAA;AFg8CJ;AE77CE;EACE,sCAAA;AF+7CJ;AE17CE;EACE,2CAAA;AF47CJ;AEt0CE;EACE,sBAAA;EACA,0BAAA;AFy0CJ;AEv0CI;EApCF,mBAAA;EACA,YAAA;AF82CF;AEv0CI;EAxCF,mBAAA;EACA,YAAA;AFk3CF;AEv0CI;EA5CF,mBAAA;EACA,YAAA;AFs3CF;AEl3CE;;;EAGE,8BAAA;AFo3CJ;AEj3CE;;;;;EAKE,cAAA;AFm3CJ;AEh3CE;EACE,yBAAA;AFk3CJ;AE/4CE;EACE,gBA4Ee;AFs0CnB;AEh5CE;EACE,YAyEe;AF00CnB;AE9zCI;EAzFF;IACE,gBA8Ec;EF60ChB;;EEz5CA;IACE,YA2Ec;EFi1ChB;AACF;AE7xCE;EACE,iCAAA;AF+xCJ;AEhYE;EACE,iBAAA;AFmYJ;AEhYE;;EAEE,0BAAA;AFmYJ;AE7WI;EACE,gBAJK;AFoXX;AEvvCE;EAGE,+BAAA;EACA,mBAAA;EAzzKF,2HAAA;AFkjNF;AEpvCE;EACE,cAAA;AFuvCJ;AIjjOA;;;EAAA;AAMA;EACE,sBAAA;AJkjOF;AI/iOA;;EAEE,aAAA;EACA,sBAAA;EACA,SAAA;EACA,YAAA;AJkjOF","sourcesContent":["/*\n * Entry point of global application style.\n * Component-specific style should not go here and be included directly as part of the components.\n */\n\n// Theme variables, must be included before the libraries to allow overriding defaults\n@import \"theme/theme-variables\";\n\n// 3rd party libraries\n@import \"~material-design-icons-iconfont/src/material-design-icons\";\n\n// Angular Material custom theme\n// The mixins below must be included once so we separated them from the variables\n@import \"~@angular/material/theming\";\n\n// Include the common styles for Angular Material. We include this here so that you only\n// have to load a single css file for Angular Material in your app.\n// Be sure that you only ever include this mixin once!\n@include mat-core();\n\n// Include theme styles for core and each component used in your app.\n// Alternatively, you can import and @include the theme mixins for each component\n// that you are using.\n@include angular-material-theme($app-theme);\n\n// Theme customization\n@import \"theme/theme\";\n","/*\n * Application global variables.\n */\n\n// Angular Material custom theme\n// See https://material.angular.io/guide/theming for more details.\n//\n// You can also read https://medium.com/@tomastrajan/the-complete-guide-to-angular-material-themes-4d165a9d24d1\n// for more insight about Angular Material theming.\n\n@import \"~@angular/material/theming\";\n\n// Define the palettes for your theme using the Material Design palettes available in palette.scss\n// (imported above). For each palette, you can optionally specify a default, lighter, and darker\n// hue.\n$app-primary: mat-palette($mat-blue);\n// stylelint-disable-next-line value-keyword-case\n$app-accent: mat-palette($mat-pink, A200, A100, A400);\n\n// The warn palette is optional (defaults to red).\n$app-warn: mat-palette($mat-red);\n\n// Create the theme object (a Sass map containing all of the palettes).\n$app-theme: mat-light-theme($app-primary, $app-accent, $app-warn);\n\n// Material design icons font path\n$material-design-icons-font-directory-path: \"~material-design-icons-iconfont/dist/fonts/\";\n","// File for which all imports are resolved and bundled. This is the entry-point for\n// the `@angular/material` theming Sass bundle. See `//src/material:theming_bundle`.\n\n// Import all the theming functionality.\n// We want overlays to always appear over user content, so set a baseline\n// very high z-index for the overlay container, which is where we create the new\n// stacking context for all overlays.\n$cdk-z-index-overlay-container: 1000 !default;\n$cdk-z-index-overlay: 1000 !default;\n$cdk-z-index-overlay-backdrop: 1000 !default;\n\n// Background color for all of the backdrops\n$cdk-overlay-dark-backdrop-background: rgba(0, 0, 0, 0.32) !default;\n\n// Default backdrop animation is based on the Material Design swift-ease-out.\n$backdrop-animation-duration: 400ms !default;\n$backdrop-animation-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n\n\n@mixin cdk-overlay() {\n  .cdk-overlay-container, .cdk-global-overlay-wrapper {\n    // Disable events from being captured on the overlay container.\n    pointer-events: none;\n\n    // The container should be the size of the viewport.\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n  }\n\n  // The overlay-container is an invisible element which contains all individual overlays.\n  .cdk-overlay-container {\n    position: fixed;\n    z-index: $cdk-z-index-overlay-container;\n\n    &:empty {\n      // Hide the element when it doesn't have any child nodes. This doesn't\n      // include overlays that have been detached, rather than disposed.\n      display: none;\n    }\n  }\n\n  // We use an extra wrapper element in order to use make the overlay itself a flex item.\n  // This makes centering the overlay easy without running into the subpixel rendering\n  // problems tied to using `transform` and without interfering with the other position\n  // strategies.\n  .cdk-global-overlay-wrapper {\n    display: flex;\n    position: absolute;\n    z-index: $cdk-z-index-overlay;\n  }\n\n  // A single overlay pane.\n  .cdk-overlay-pane {\n    // Note: it's important for this one to start off `absolute`,\n    // in order for us to be able to measure it correctly.\n    position: absolute;\n    pointer-events: auto;\n    box-sizing: border-box;\n    z-index: $cdk-z-index-overlay;\n\n    // For connected-position overlays, we set `display: flex` in\n    // order to force `max-width` and `max-height` to take effect.\n    display: flex;\n    max-width: 100%;\n    max-height: 100%;\n  }\n\n  .cdk-overlay-backdrop {\n    // TODO(jelbourn): reuse sidenav fullscreen mixin.\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    z-index: $cdk-z-index-overlay-backdrop;\n    pointer-events: auto;\n    -webkit-tap-highlight-color: transparent;\n    transition: opacity $backdrop-animation-duration $backdrop-animation-timing-function;\n    opacity: 0;\n\n    &.cdk-overlay-backdrop-showing {\n      opacity: 1;\n\n      // In high contrast mode the rgba background will become solid so we need to fall back\n      // to making it opaque using `opacity`. Note that we can't use the `cdk-high-contrast`\n      // mixin, because we can't normalize the import path to the _a11y.scss both for the\n      // source and when this file is distributed. See #10908.\n      @media screen and (-ms-high-contrast: active) {\n        opacity: 0.6;\n      }\n    }\n  }\n\n  .cdk-overlay-dark-backdrop {\n    background: $cdk-overlay-dark-backdrop-background;\n  }\n\n  .cdk-overlay-transparent-backdrop {\n    // Note: as of Firefox 57, having the backdrop be `background: none` will prevent it from\n    // capturing the user's mouse scroll events. Since we also can't use something like\n    // `rgba(0, 0, 0, 0)`, we work around the inconsistency by not setting the background at\n    // all and using `opacity` to make the element transparent.\n    &, &.cdk-overlay-backdrop-showing {\n      opacity: 0;\n    }\n  }\n\n  // Overlay parent element used with the connected position strategy. Used to constrain the\n  // overlay element's size to fit within the viewport.\n  .cdk-overlay-connected-position-bounding-box {\n    position: absolute;\n    z-index: $cdk-z-index-overlay;\n\n    // We use `display: flex` on this element exclusively for centering connected overlays.\n    // When *not* centering, a top/left/bottom/right will be set which overrides the normal\n    // flex layout.\n    display: flex;\n\n    // We use the `column` direction here to avoid some flexbox issues in Edge\n    // when using the \"grow after open\" options.\n    flex-direction: column;\n\n    // Add some dimensions so the element has an `innerText` which some people depend on in tests.\n    min-width: 1px;\n    min-height: 1px;\n  }\n\n  // Used when disabling global scrolling.\n  .cdk-global-scrollblock {\n    position: fixed;\n\n    // Necessary for the content not to lose its width. Note that we're using 100%, instead of\n    // 100vw, because 100vw includes the width plus the scrollbar, whereas 100% is the width\n    // that the element had before we made it `fixed`.\n    width: 100%;\n\n    // Note: this will always add a scrollbar to whatever element it is on, which can\n    // potentially result in double scrollbars. It shouldn't be an issue, because we won't\n    // block scrolling on a page that doesn't have a scrollbar in the first place.\n    overflow-y: scroll;\n  }\n}\n\n@mixin cdk-a11y {\n  .cdk-visually-hidden {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n\n    // Avoid browsers rendering the focus ring in some cases.\n    outline: 0;\n\n    // Avoid some cases where the browser will still render the native controls (see #9049).\n    -webkit-appearance: none;\n    -moz-appearance: none;\n  }\n}\n\n/// Emits the mixin's content nested under `$selector-context` if `$selector-context`\n/// is non-empty.\n/// @param selector-context The selector under which to nest the mixin's content.\n@mixin _cdk-optionally-nest-content($selector-context) {\n  @if ($selector-context == '') {\n    @content;\n  }\n  @else {\n    #{$selector-context} {\n      @content;\n    }\n  }\n}\n\n/// Applies styles for users in high contrast mode. Note that this only applies\n/// to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n/// attribute, however Chrome handles high contrast differently.\n///\n/// @param target Which kind of high contrast setting to target. Defaults to `active`, can be\n///    `white-on-black` or `black-on-white`.\n/// @param encapsulation Whether to emit styles for view encapsulation. Values are:\n///     * `on` - works for `Emulated`, `Native`, and `ShadowDom`\n///     * `off` - works for `None`\n///     * `any` - works for all encapsulation modes by emitting the CSS twice (default).\n@mixin cdk-high-contrast($target: active, $encapsulation: 'any') {\n  @if ($target != 'active' and $target != 'black-on-white' and $target != 'white-on-black') {\n    @error 'Unknown cdk-high-contrast value \"#{$target}\" provided. ' +\n           'Allowed values are \"active\", \"black-on-white\", and \"white-on-black\"';\n  }\n\n  @if ($encapsulation != 'on' and $encapsulation != 'off' and $encapsulation != 'any') {\n    @error 'Unknown cdk-high-contrast encapsulation \"#{$encapsulation}\" provided. ' +\n           'Allowed values are \"on\", \"off\", and \"any\"';\n  }\n\n  // If the selector context has multiple parts, such as `.section, .region`, just doing\n  // `.cdk-high-contrast-xxx #{&}` will only apply the parent selector to the first part of the\n  // context. We address this by nesting the selector context under .cdk-high-contrast.\n  @at-root {\n    $selector-context: #{&};\n\n    @if ($encapsulation != 'on') {\n      .cdk-high-contrast-#{$target} {\n        @include _cdk-optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n\n    @if ($encapsulation != 'off') {\n      .cdk-high-contrast-#{$target} :host {\n        @include _cdk-optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n  }\n}\n\n// Core styles that enable monitoring autofill state of text fields.\n@mixin cdk-text-field {\n  // Keyframes that apply no styles, but allow us to monitor when an text field becomes autofilled\n  // by watching for the animation events that are fired when they start. Note: the /*!*/ comment is\n  // needed to prevent LibSass from stripping the keyframes out.\n  // Based on: https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n  @keyframes cdk-text-field-autofill-start {/*!*/}\n  @keyframes cdk-text-field-autofill-end {/*!*/}\n\n  .cdk-text-field-autofill-monitored:-webkit-autofill {\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\n    animation: cdk-text-field-autofill-start 0s 1ms;\n  }\n\n  .cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\n    animation: cdk-text-field-autofill-end 0s 1ms;\n  }\n\n  // Remove the resize handle on autosizing textareas, because whatever height\n  // the user resized to will be overwritten once they start typing again.\n  textarea.cdk-textarea-autosize {\n    resize: none;\n  }\n\n  // This class is temporarily applied to the textarea when it is being measured. It is immediately\n  // removed when measuring is complete. We use `!important` rules here to make sure user-specified\n  // rules do not interfere with the measurement.\n  textarea.cdk-textarea-autosize-measuring {\n    @include _cdk-textarea-autosize-measuring-base;\n    height: auto !important;\n    overflow: hidden !important;\n  }\n\n  // Similar to the `cdk-textarea-autosize-measuring` class, but only applied on Firefox. We need\n  // to use this class, because Firefox has a bug where changing the `overflow` breaks the user's\n  // ability to undo/redo what they were typing (see #16629). This class is only scoped to Firefox,\n  // because the measurements there don't seem to be affected by the `height: 0`, whereas on other\n  // browsers they are, e.g. Chrome detects longer text and IE does't resize back to normal.\n  // Identical issue report: https://bugzilla.mozilla.org/show_bug.cgi?id=448784\n  textarea.cdk-textarea-autosize-measuring-firefox {\n    @include _cdk-textarea-autosize-measuring-base;\n    height: 0 !important;\n  }\n}\n\n@mixin _cdk-textarea-autosize-measuring-base {\n  // Having 2px top and bottom padding seems to fix a bug where Chrome gets an incorrect\n  // measurement. We just have to account for it later and subtract it off the final result.\n  padding: 2px 0 !important;\n  box-sizing: content-box !important;\n}\n\n// Used to generate UIDs for keyframes used to change the text field autofill styles.\n$cdk-text-field-autofill-color-frame-count: 0;\n\n// Mixin used to apply custom background and foreground colors to an autofilled text field.\n// Based on: https://stackoverflow.com/questions/2781549/\n// removing-input-background-colour-for-chrome-autocomplete#answer-37432260\n@mixin cdk-text-field-autofill-color($background, $foreground:'') {\n  @keyframes cdk-text-field-autofill-color-#{$cdk-text-field-autofill-color-frame-count} {\n    to {\n      background: $background;\n      @if $foreground != '' { color: $foreground; }\n    }\n  }\n\n  &:-webkit-autofill {\n    animation: cdk-text-field-autofill-color-#{$cdk-text-field-autofill-color-frame-count} both;\n  }\n\n  &.cdk-text-field-autofill-monitored:-webkit-autofill {\n    // Since Chrome 80 we need a 1ms delay for cdk-text-field-autofill-start, or the animationstart\n    // event won't fire.\n    animation: cdk-text-field-autofill-start 0s 1ms,\n               cdk-text-field-autofill-color-#{$cdk-text-field-autofill-color-frame-count} both;\n  }\n\n  $cdk-text-field-autofill-color-frame-count:\n      $cdk-text-field-autofill-color-frame-count + 1 !global;\n}\n\n\n// Core styles that can be used to apply material design treatments to any element.\n// Media queries\n// TODO(josephperrott): Change $mat-xsmall and $mat-small usages to rely on BreakpointObserver,\n$mat-xsmall: 'max-width: 599px';\n$mat-small: 'max-width: 959px';\n\n// TODO: Revisit all z-indices before beta\n// z-index master list\n\n$z-index-fab: 20 !default;\n$z-index-drawer: 100 !default;\n\n// Global constants\n$pi: 3.14159265;\n\n// Padding between input toggles and their labels\n$mat-toggle-padding: 8px !default;\n// Width and height of input toggles\n$mat-toggle-size: 20px !default;\n\n// Easing Curves\n// TODO(jelbourn): all of these need to be revisited\n\n// The default animation curves used by material design.\n$mat-linear-out-slow-in-timing-function: cubic-bezier(0, 0, 0.2, 0.1) !default;\n$mat-fast-out-slow-in-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !default;\n$mat-fast-out-linear-in-timing-function: cubic-bezier(0.4, 0, 1, 1) !default;\n\n$ease-in-out-curve-function: cubic-bezier(0.35, 0, 0.25, 1) !default;\n\n$swift-ease-out-duration: 400ms !default;\n$swift-ease-out-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n$swift-ease-out: all $swift-ease-out-duration $swift-ease-out-timing-function !default;\n\n$swift-ease-in-duration: 300ms !default;\n$swift-ease-in-timing-function: cubic-bezier(0.55, 0, 0.55, 0.2) !default;\n$swift-ease-in: all $swift-ease-in-duration $swift-ease-in-timing-function !default;\n\n$swift-ease-in-out-duration: 500ms !default;\n$swift-ease-in-out-timing-function: $ease-in-out-curve-function !default;\n$swift-ease-in-out: all $swift-ease-in-out-duration $swift-ease-in-out-timing-function !default;\n\n$swift-linear-duration: 80ms !default;\n$swift-linear-timing-function: linear !default;\n$swift-linear: all $swift-linear-duration $swift-linear-timing-function !default;\n\n\n\n// A collection of mixins and CSS classes that can be used to apply elevation to a material\n// element.\n// See: https://material.io/design/environment/elevation.html\n// Examples:\n//\n//\n// .mat-foo {\n//   @include $mat-elevation(2);\n//\n//   &:active {\n//     @include $mat-elevation(8);\n//   }\n// }\n//\n// <div id=\"external-card\" class=\"mat-elevation-z2\"><p>Some content</p></div>\n//\n// For an explanation of the design behind how elevation is implemented, see the design doc at\n// https://goo.gl/Kq0k9Z.\n\n// Colors for umbra, penumbra, and ambient shadows. As described in the design doc, each elevation\n// level is created using a set of 3 shadow values, one for umbra (the shadow representing the\n// space completely obscured by an object relative to its light source), one for penumbra (the\n// space partially obscured by an object), and one for ambient (the space which contains the object\n// itself). For a further explanation of these terms and their meanings, see\n// https://en.wikipedia.org/wiki/Umbra,_penumbra_and_antumbra.\n\n// Maps for the different shadow sets and their values within each z-space. These values were\n// created by taking a few reference shadow sets created by Google's Designers and interpolating\n// all of the values between them.\n\n@function _get-umbra-map($color, $opacity) {\n  $shadow-color: if(type-of($color) == color, rgba($color, $opacity * 0.2), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 2px 1px -1px #{$shadow-color}',\n    2: '0px 3px 1px -2px #{$shadow-color}',\n    3: '0px 3px 3px -2px #{$shadow-color}',\n    4: '0px 2px 4px -1px #{$shadow-color}',\n    5: '0px 3px 5px -1px #{$shadow-color}',\n    6: '0px 3px 5px -1px #{$shadow-color}',\n    7: '0px 4px 5px -2px #{$shadow-color}',\n    8: '0px 5px 5px -3px #{$shadow-color}',\n    9: '0px 5px 6px -3px #{$shadow-color}',\n    10: '0px 6px 6px -3px #{$shadow-color}',\n    11: '0px 6px 7px -4px #{$shadow-color}',\n    12: '0px 7px 8px -4px #{$shadow-color}',\n    13: '0px 7px 8px -4px #{$shadow-color}',\n    14: '0px 7px 9px -4px #{$shadow-color}',\n    15: '0px 8px 9px -5px #{$shadow-color}',\n    16: '0px 8px 10px -5px #{$shadow-color}',\n    17: '0px 8px 11px -5px #{$shadow-color}',\n    18: '0px 9px 11px -5px #{$shadow-color}',\n    19: '0px 9px 12px -6px #{$shadow-color}',\n    20: '0px 10px 13px -6px #{$shadow-color}',\n    21: '0px 10px 13px -6px #{$shadow-color}',\n    22: '0px 10px 14px -6px #{$shadow-color}',\n    23: '0px 11px 14px -7px #{$shadow-color}',\n    24: '0px 11px 15px -7px #{$shadow-color}'\n  );\n}\n\n@function _get-penumbra-map($color, $opacity) {\n  $shadow-color: if(type-of($color) == color, rgba($color, $opacity * 0.14), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 1px 1px 0px #{$shadow-color}',\n    2: '0px 2px 2px 0px #{$shadow-color}',\n    3: '0px 3px 4px 0px #{$shadow-color}',\n    4: '0px 4px 5px 0px #{$shadow-color}',\n    5: '0px 5px 8px 0px #{$shadow-color}',\n    6: '0px 6px 10px 0px #{$shadow-color}',\n    7: '0px 7px 10px 1px #{$shadow-color}',\n    8: '0px 8px 10px 1px #{$shadow-color}',\n    9: '0px 9px 12px 1px #{$shadow-color}',\n    10: '0px 10px 14px 1px #{$shadow-color}',\n    11: '0px 11px 15px 1px #{$shadow-color}',\n    12: '0px 12px 17px 2px #{$shadow-color}',\n    13: '0px 13px 19px 2px #{$shadow-color}',\n    14: '0px 14px 21px 2px #{$shadow-color}',\n    15: '0px 15px 22px 2px #{$shadow-color}',\n    16: '0px 16px 24px 2px #{$shadow-color}',\n    17: '0px 17px 26px 2px #{$shadow-color}',\n    18: '0px 18px 28px 2px #{$shadow-color}',\n    19: '0px 19px 29px 2px #{$shadow-color}',\n    20: '0px 20px 31px 3px #{$shadow-color}',\n    21: '0px 21px 33px 3px #{$shadow-color}',\n    22: '0px 22px 35px 3px #{$shadow-color}',\n    23: '0px 23px 36px 3px #{$shadow-color}',\n    24: '0px 24px 38px 3px #{$shadow-color}'\n  );\n}\n\n@function _get-ambient-map($color, $opacity) {\n  $shadow-color: if(type-of($color) == color, rgba($color, $opacity * 0.12), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 1px 3px 0px #{$shadow-color}',\n    2: '0px 1px 5px 0px #{$shadow-color}',\n    3: '0px 1px 8px 0px #{$shadow-color}',\n    4: '0px 1px 10px 0px #{$shadow-color}',\n    5: '0px 1px 14px 0px #{$shadow-color}',\n    6: '0px 1px 18px 0px #{$shadow-color}',\n    7: '0px 2px 16px 1px #{$shadow-color}',\n    8: '0px 3px 14px 2px #{$shadow-color}',\n    9: '0px 3px 16px 2px #{$shadow-color}',\n    10: '0px 4px 18px 3px #{$shadow-color}',\n    11: '0px 4px 20px 3px #{$shadow-color}',\n    12: '0px 5px 22px 4px #{$shadow-color}',\n    13: '0px 5px 24px 4px #{$shadow-color}',\n    14: '0px 5px 26px 4px #{$shadow-color}',\n    15: '0px 6px 28px 5px #{$shadow-color}',\n    16: '0px 6px 30px 5px #{$shadow-color}',\n    17: '0px 6px 32px 5px #{$shadow-color}',\n    18: '0px 7px 34px 6px #{$shadow-color}',\n    19: '0px 7px 36px 6px #{$shadow-color}',\n    20: '0px 8px 38px 7px #{$shadow-color}',\n    21: '0px 8px 40px 7px #{$shadow-color}',\n    22: '0px 8px 42px 7px #{$shadow-color}',\n    23: '0px 9px 44px 8px #{$shadow-color}',\n    24: '0px 9px 46px 8px #{$shadow-color}'\n  );\n}\n\n// The default duration value for elevation transitions.\n$mat-elevation-transition-duration: 280ms !default;\n\n// The default easing value for elevation transitions.\n$mat-elevation-transition-timing-function: $mat-fast-out-slow-in-timing-function;\n\n// The default color for elevation shadows.\n$mat-elevation-color: black !default;\n\n// The default opacity scaling value for elevation shadows.\n$mat-elevation-opacity: 1 !default;\n\n// Prefix for elevation-related selectors.\n$_mat-elevation-prefix: 'mat-elevation-z';\n\n// Applies the correct css rules to an element to give it the elevation specified by $zValue.\n// The $zValue must be between 0 and 24.\n@mixin mat-elevation($zValue, $color: $mat-elevation-color, $opacity: $mat-elevation-opacity) {\n  @if type-of($zValue) != number or not unitless($zValue) {\n    @error '$zValue must be a unitless number';\n  }\n  @if $zValue < 0 or $zValue > 24 {\n    @error '$zValue must be between 0 and 24';\n  }\n\n  box-shadow: #{map-get(_get-umbra-map($color, $opacity), $zValue)},\n              #{map-get(_get-penumbra-map($color, $opacity), $zValue)},\n              #{map-get(_get-ambient-map($color, $opacity), $zValue)};\n}\n\n@mixin _mat-theme-elevation($zValue, $config, $opacity: $mat-elevation-opacity) {\n  $foreground: map-get($config, foreground);\n  $elevation-color: map-get($foreground, elevation);\n  $elevation-color-or-default: if($elevation-color == null, $mat-elevation-color, $elevation-color);\n\n  @include mat-elevation($zValue, $elevation-color-or-default, $opacity);\n}\n\n// Applies the elevation to an element in a manner that allows\n// consumers to override it via the Material elevation classes.\n@mixin mat-overridable-elevation(\n    $zValue,\n    $color: $mat-elevation-color,\n    $opacity: $mat-elevation-opacity) {\n  &:not([class*='#{$_mat-elevation-prefix}']) {\n    @include mat-elevation($zValue, $color, $opacity);\n  }\n}\n\n@mixin _mat-theme-overridable-elevation($zValue, $config, $opacity: $mat-elevation-opacity) {\n  $foreground: map-get($config, foreground);\n  $elevation-color: map-get($foreground, elevation);\n  $elevation-color-or-default: if($elevation-color == null, $mat-elevation-color, $elevation-color);\n\n  @include mat-overridable-elevation($zValue, $elevation-color-or-default, $opacity);\n}\n\n// Returns a string that can be used as the value for a transition property for elevation.\n// Calling this function directly is useful in situations where a component needs to transition\n// more than one property.\n//\n// .foo {\n//   transition: mat-elevation-transition-property-value(), opacity 100ms ease;\n// }\n@function mat-elevation-transition-property-value(\n    $duration: $mat-elevation-transition-duration,\n    $easing: $mat-elevation-transition-timing-function) {\n  @return box-shadow #{$duration} #{$easing};\n}\n\n// Applies the correct css rules needed to have an element transition between elevations.\n// This mixin should be applied to elements whose elevation values will change depending on their\n// context (e.g. when active or disabled).\n//\n// NOTE(traviskaufman): Both this mixin and the above function use default parameters so they can\n// be used in the same way by clients.\n@mixin mat-elevation-transition(\n    $duration: $mat-elevation-transition-duration,\n    $easing: $mat-elevation-transition-timing-function) {\n  transition: mat-elevation-transition-property-value($duration, $easing);\n}\n\n// Color palettes from the Material Design spec.\n// See https://material.io/design/color/\n//\n// Contrast colors are hard-coded because it is too difficult (probably impossible) to\n// calculate them. These contrast colors are pulled from the public Material Design spec swatches.\n// While the contrast colors in the spec are not prescriptive, we use them for convenience.\n\n\n// @deprecated renamed to $dark-primary-text.\n// @breaking-change 8.0.0\n$black-87-opacity: rgba(black, 0.87);\n// @deprecated renamed to $light-primary-text.\n// @breaking-change 8.0.0\n$white-87-opacity: rgba(white, 0.87);\n// @deprecated use $dark-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$black-12-opacity: rgba(black, 0.12);\n// @deprecated use $light-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$white-12-opacity: rgba(white, 0.12);\n// @deprecated use $dark-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$black-6-opacity: rgba(black, 0.06);\n// @deprecated use $light-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$white-6-opacity: rgba(white, 0.06);\n\n$dark-primary-text: rgba(black, 0.87);\n$dark-secondary-text: rgba(black, 0.54);\n$dark-disabled-text: rgba(black, 0.38);\n$dark-dividers: rgba(black, 0.12);\n$dark-focused: rgba(black, 0.12);\n$light-primary-text: white;\n$light-secondary-text: rgba(white, 0.7);\n$light-disabled-text: rgba(white, 0.5);\n$light-dividers: rgba(white, 0.12);\n$light-focused: rgba(white, 0.12);\n\n$mat-red: (\n  50: #ffebee,\n  100: #ffcdd2,\n  200: #ef9a9a,\n  300: #e57373,\n  400: #ef5350,\n  500: #f44336,\n  600: #e53935,\n  700: #d32f2f,\n  800: #c62828,\n  900: #b71c1c,\n  A100: #ff8a80,\n  A200: #ff5252,\n  A400: #ff1744,\n  A700: #d50000,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-pink: (\n  50: #fce4ec,\n  100: #f8bbd0,\n  200: #f48fb1,\n  300: #f06292,\n  400: #ec407a,\n  500: #e91e63,\n  600: #d81b60,\n  700: #c2185b,\n  800: #ad1457,\n  900: #880e4f,\n  A100: #ff80ab,\n  A200: #ff4081,\n  A400: #f50057,\n  A700: #c51162,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-purple: (\n  50: #f3e5f5,\n  100: #e1bee7,\n  200: #ce93d8,\n  300: #ba68c8,\n  400: #ab47bc,\n  500: #9c27b0,\n  600: #8e24aa,\n  700: #7b1fa2,\n  800: #6a1b9a,\n  900: #4a148c,\n  A100: #ea80fc,\n  A200: #e040fb,\n  A400: #d500f9,\n  A700: #aa00ff,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-deep-purple: (\n  50: #ede7f6,\n  100: #d1c4e9,\n  200: #b39ddb,\n  300: #9575cd,\n  400: #7e57c2,\n  500: #673ab7,\n  600: #5e35b1,\n  700: #512da8,\n  800: #4527a0,\n  900: #311b92,\n  A100: #b388ff,\n  A200: #7c4dff,\n  A400: #651fff,\n  A700: #6200ea,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-indigo: (\n  50: #e8eaf6,\n  100: #c5cae9,\n  200: #9fa8da,\n  300: #7986cb,\n  400: #5c6bc0,\n  500: #3f51b5,\n  600: #3949ab,\n  700: #303f9f,\n  800: #283593,\n  900: #1a237e,\n  A100: #8c9eff,\n  A200: #536dfe,\n  A400: #3d5afe,\n  A700: #304ffe,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-blue: (\n  50: #e3f2fd,\n  100: #bbdefb,\n  200: #90caf9,\n  300: #64b5f6,\n  400: #42a5f5,\n  500: #2196f3,\n  600: #1e88e5,\n  700: #1976d2,\n  800: #1565c0,\n  900: #0d47a1,\n  A100: #82b1ff,\n  A200: #448aff,\n  A400: #2979ff,\n  A700: #2962ff,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-light-blue: (\n  50: #e1f5fe,\n  100: #b3e5fc,\n  200: #81d4fa,\n  300: #4fc3f7,\n  400: #29b6f6,\n  500: #03a9f4,\n  600: #039be5,\n  700: #0288d1,\n  800: #0277bd,\n  900: #01579b,\n  A100: #80d8ff,\n  A200: #40c4ff,\n  A400: #00b0ff,\n  A700: #0091ea,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-cyan: (\n  50: #e0f7fa,\n  100: #b2ebf2,\n  200: #80deea,\n  300: #4dd0e1,\n  400: #26c6da,\n  500: #00bcd4,\n  600: #00acc1,\n  700: #0097a7,\n  800: #00838f,\n  900: #006064,\n  A100: #84ffff,\n  A200: #18ffff,\n  A400: #00e5ff,\n  A700: #00b8d4,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-teal: (\n  50: #e0f2f1,\n  100: #b2dfdb,\n  200: #80cbc4,\n  300: #4db6ac,\n  400: #26a69a,\n  500: #009688,\n  600: #00897b,\n  700: #00796b,\n  800: #00695c,\n  900: #004d40,\n  A100: #a7ffeb,\n  A200: #64ffda,\n  A400: #1de9b6,\n  A700: #00bfa5,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-green: (\n  50: #e8f5e9,\n  100: #c8e6c9,\n  200: #a5d6a7,\n  300: #81c784,\n  400: #66bb6a,\n  500: #4caf50,\n  600: #43a047,\n  700: #388e3c,\n  800: #2e7d32,\n  900: #1b5e20,\n  A100: #b9f6ca,\n  A200: #69f0ae,\n  A400: #00e676,\n  A700: #00c853,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-light-green: (\n  50: #f1f8e9,\n  100: #dcedc8,\n  200: #c5e1a5,\n  300: #aed581,\n  400: #9ccc65,\n  500: #8bc34a,\n  600: #7cb342,\n  700: #689f38,\n  800: #558b2f,\n  900: #33691e,\n  A100: #ccff90,\n  A200: #b2ff59,\n  A400: #76ff03,\n  A700: #64dd17,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-lime: (\n  50: #f9fbe7,\n  100: #f0f4c3,\n  200: #e6ee9c,\n  300: #dce775,\n  400: #d4e157,\n  500: #cddc39,\n  600: #c0ca33,\n  700: #afb42b,\n  800: #9e9d24,\n  900: #827717,\n  A100: #f4ff81,\n  A200: #eeff41,\n  A400: #c6ff00,\n  A700: #aeea00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-yellow: (\n  50: #fffde7,\n  100: #fff9c4,\n  200: #fff59d,\n  300: #fff176,\n  400: #ffee58,\n  500: #ffeb3b,\n  600: #fdd835,\n  700: #fbc02d,\n  800: #f9a825,\n  900: #f57f17,\n  A100: #ffff8d,\n  A200: #ffff00,\n  A400: #ffea00,\n  A700: #ffd600,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $dark-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-amber: (\n  50: #fff8e1,\n  100: #ffecb3,\n  200: #ffe082,\n  300: #ffd54f,\n  400: #ffca28,\n  500: #ffc107,\n  600: #ffb300,\n  700: #ffa000,\n  800: #ff8f00,\n  900: #ff6f00,\n  A100: #ffe57f,\n  A200: #ffd740,\n  A400: #ffc400,\n  A700: #ffab00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $dark-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-orange: (\n  50: #fff3e0,\n  100: #ffe0b2,\n  200: #ffcc80,\n  300: #ffb74d,\n  400: #ffa726,\n  500: #ff9800,\n  600: #fb8c00,\n  700: #f57c00,\n  800: #ef6c00,\n  900: #e65100,\n  A100: #ffd180,\n  A200: #ffab40,\n  A400: #ff9100,\n  A700: #ff6d00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: black,\n  )\n);\n\n$mat-deep-orange: (\n  50: #fbe9e7,\n  100: #ffccbc,\n  200: #ffab91,\n  300: #ff8a65,\n  400: #ff7043,\n  500: #ff5722,\n  600: #f4511e,\n  700: #e64a19,\n  800: #d84315,\n  900: #bf360c,\n  A100: #ff9e80,\n  A200: #ff6e40,\n  A400: #ff3d00,\n  A700: #dd2c00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-brown: (\n  50: #efebe9,\n  100: #d7ccc8,\n  200: #bcaaa4,\n  300: #a1887f,\n  400: #8d6e63,\n  500: #795548,\n  600: #6d4c41,\n  700: #5d4037,\n  800: #4e342e,\n  900: #3e2723,\n  A100: #d7ccc8,\n  A200: #bcaaa4,\n  A400: #8d6e63,\n  A700: #5d4037,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-grey: (\n  50: #fafafa,\n  100: #f5f5f5,\n  200: #eeeeee,\n  300: #e0e0e0,\n  400: #bdbdbd,\n  500: #9e9e9e,\n  600: #757575,\n  700: #616161,\n  800: #424242,\n  900: #212121,\n  A100: #ffffff,\n  A200: #eeeeee,\n  A400: #bdbdbd,\n  A700: #616161,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n// Alias for alternate spelling.\n$mat-gray: $mat-grey;\n\n$mat-blue-grey: (\n  50: #eceff1,\n  100: #cfd8dc,\n  200: #b0bec5,\n  300: #90a4ae,\n  400: #78909c,\n  500: #607d8b,\n  600: #546e7a,\n  700: #455a64,\n  800: #37474f,\n  900: #263238,\n  A100: #cfd8dc,\n  A200: #b0bec5,\n  A400: #78909c,\n  A700: #455a64,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n// Alias for alternate spelling.\n$mat-blue-gray: $mat-blue-grey;\n\n\n// Background palette for light themes.\n$mat-light-theme-background: (\n  status-bar: map-get($mat-grey, 300),\n  app-bar:    map-get($mat-grey, 100),\n  background: map-get($mat-grey, 50),\n  hover:      rgba(black, 0.04), // TODO(kara): check style with Material Design UX\n  card:       white,\n  dialog:     white,\n  disabled-button: rgba(black, 0.12),\n  raised-button: white,\n  focused-button: $dark-focused,\n  selected-button: map-get($mat-grey, 300),\n  selected-disabled-button: map-get($mat-grey, 400),\n  disabled-button-toggle: map-get($mat-grey, 200),\n  unselected-chip: map-get($mat-grey, 300),\n  disabled-list-option: map-get($mat-grey, 200),\n  tooltip: map-get($mat-grey, 700),\n);\n\n// Background palette for dark themes.\n$mat-dark-theme-background: (\n  status-bar: black,\n  app-bar:    map-get($mat-grey, 900),\n  background: #303030,\n  hover:      rgba(white, 0.04), // TODO(kara): check style with Material Design UX\n  card:       map-get($mat-grey, 800),\n  dialog:     map-get($mat-grey, 800),\n  disabled-button: rgba(white, 0.12),\n  raised-button: map-get($mat-grey, 800),\n  focused-button: $light-focused,\n  selected-button: map-get($mat-grey, 900),\n  selected-disabled-button: map-get($mat-grey, 800),\n  disabled-button-toggle: black,\n  unselected-chip: map-get($mat-grey, 700),\n  disabled-list-option: black,\n  tooltip: map-get($mat-grey, 700),\n);\n\n// Foreground palette for light themes.\n$mat-light-theme-foreground: (\n  base:              black,\n  divider:           $dark-dividers,\n  dividers:          $dark-dividers,\n  disabled:          $dark-disabled-text,\n  disabled-button:   rgba(black, 0.26),\n  disabled-text:     $dark-disabled-text,\n  elevation:         black,\n  hint-text:         $dark-disabled-text,\n  secondary-text:    $dark-secondary-text,\n  icon:              rgba(black, 0.54),\n  icons:             rgba(black, 0.54),\n  text:              rgba(black, 0.87),\n  slider-min:        rgba(black, 0.87),\n  slider-off:        rgba(black, 0.26),\n  slider-off-active: rgba(black, 0.38),\n);\n\n// Foreground palette for dark themes.\n$mat-dark-theme-foreground: (\n  base:              white,\n  divider:           $light-dividers,\n  dividers:          $light-dividers,\n  disabled:          $light-disabled-text,\n  disabled-button:   rgba(white, 0.3),\n  disabled-text:     $light-disabled-text,\n  elevation:         black,\n  hint-text:         $light-disabled-text,\n  secondary-text:    $light-secondary-text,\n  icon:              white,\n  icons:             white,\n  text:              white,\n  slider-min:        white,\n  slider-off:        rgba(white, 0.3),\n  slider-off-active: rgba(white, 0.3),\n);\n\n\n// Whether density should be generated by default.\n$_mat-theme-generate-default-density: true !default;\n\n// For a given hue in a palette, return the contrast color from the map of contrast palettes.\n// @param $color-map\n// @param $hue\n@function mat-contrast($palette, $hue) {\n  @return map-get(map-get($palette, contrast), $hue);\n}\n\n\n// Creates a map of hues to colors for a theme. This is used to define a theme palette in terms\n// of the Material Design hues.\n// @param $color-map\n// @param $primary\n// @param $lighter\n@function mat-palette($base-palette, $default: 500, $lighter: 100, $darker: 700, $text: $default) {\n  $result: map-merge($base-palette, (\n    default: map-get($base-palette, $default),\n    lighter: map-get($base-palette, $lighter),\n    darker: map-get($base-palette, $darker),\n    text: map-get($base-palette, $text),\n\n    default-contrast: mat-contrast($base-palette, $default),\n    lighter-contrast: mat-contrast($base-palette, $lighter),\n    darker-contrast: mat-contrast($base-palette, $darker)\n  ));\n\n  // For each hue in the palette, add a \"-contrast\" color to the map.\n  @each $hue, $color in $base-palette {\n    $result: map-merge($result, (\n      '#{$hue}-contrast': mat-contrast($base-palette, $hue)\n    ));\n  }\n\n  @return $result;\n}\n\n\n// Gets a color from a theme palette (the output of mat-palette).\n// The hue can be one of the standard values (500, A400, etc.), one of the three preconfigured\n// hues (default, lighter, darker), or any of the aforementioned prefixed with \"-contrast\".\n//\n// @param $color-map The theme palette (output of mat-palette).\n// @param $hue The hue from the palette to use. If this is a value between 0 and 1, it will\n//     be treated as opacity.\n// @param $opacity The alpha channel value for the color.\n@function mat-color($palette, $hue: default, $opacity: null) {\n  // If hueKey is a number between zero and one, then it actually contains an\n  // opacity value, so recall this function with the default hue and that given opacity.\n  @if type-of($hue) == number and $hue >= 0 and $hue <= 1 {\n    @return mat-color($palette, default, $hue);\n  }\n\n  $color: map-get($palette, $hue);\n\n  @if (type-of($color) != color) {\n    // If the $color resolved to something different from a color (e.g. a CSS variable),\n    // we can't apply the opacity anyway so we return the value as is, otherwise Sass can\n    // throw an error or output something invalid.\n    @return $color;\n  }\n\n  @return rgba($color, if($opacity == null, opacity($color), $opacity));\n}\n\n// Validates the specified theme by ensuring that the optional color config defines\n// a primary, accent and warn palette. Returns the theme if no failures were found.\n@function _mat-validate-theme($theme) {\n  @if map-get($theme, color) {\n    $color: map-get($theme, color);\n    @if not map-get($color, primary) {\n      @error 'Theme does not define a valid \"primary\" palette.';\n    }\n    @else if not map-get($color, accent) {\n      @error 'Theme does not define a valid \"accent\" palette.';\n    }\n    @else if not map-get($color, warn) {\n      @error 'Theme does not define a valid \"warn\" palette.';\n    }\n  }\n  @return $theme;\n}\n\n// Creates a backwards compatible theme. Previously in Angular Material, theme objects\n// contained the color configuration directly. With the recent refactoring of the theming\n// system to allow for density and typography configurations, this is no longer the case.\n// To ensure that constructed themes which will be passed to custom theme mixins do not break,\n// we copy the color configuration and put its properties at the top-level of the theme object.\n// Here is an example of a pattern that should still work until it's officially marked as a\n// breaking change:\n//\n//    @mixin my-custom-component-theme($theme) {\n//      .my-comp {\n//        background-color: mat-color(map-get($theme, primary));\n//      }\n//    }\n//\n// Note that the `$theme.primary` key does usually not exist since the color configuration\n// is stored in `$theme.color` which contains a property for `primary`. This method copies\n// the map from `$theme.color` to `$theme` for backwards compatibility.\n@function _mat-create-backwards-compatibility-theme($theme) {\n  @if not map-get($theme, color) {\n    @return $theme;\n  }\n  $color: map-get($theme, color);\n  @return map-merge($theme, $color);\n}\n\n// Creates a light-themed color configuration from the specified\n// primary, accent and warn palettes.\n@function _mat-create-light-color-config($primary, $accent, $warn: null) {\n  @return (\n    primary: $primary,\n    accent: $accent,\n    warn: if($warn != null, $warn, mat-palette($mat-red)),\n    is-dark: false,\n    foreground: $mat-light-theme-foreground,\n    background: $mat-light-theme-background,\n  );\n}\n\n// Creates a dark-themed color configuration from the specified\n// primary, accent and warn palettes.\n@function _mat-create-dark-color-config($primary, $accent, $warn: null) {\n  @return (\n    primary: $primary,\n    accent: $accent,\n    warn: if($warn != null, $warn, mat-palette($mat-red)),\n    is-dark: true,\n    foreground: $mat-dark-theme-foreground,\n    background: $mat-dark-theme-background,\n  );\n}\n\n// Creates a container object for a light theme to be given to individual component theme mixins.\n// TODO: Remove legacy API and rename `$primary` to `$config`. Currently it cannot be renamed\n// as it would break existing apps that set the parameter by name.\n@function mat-light-theme($primary, $accent: null, $warn: mat-palette($mat-red)) {\n  // This function creates a container object for the individual component theme mixins. Consumers\n  // can construct such an object by calling this function, or by building the object manually.\n  // There are two possible ways to invoke this function in order to create such an object:\n  //\n  //    (1) Passing in a map that holds optional configurations for individual parts of the\n  //        theming system. For `color` configurations, the function only expects the palettes\n  //        for `primary` and `accent` (and optionally `warn`). The function will expand the\n  //        shorthand into an actual configuration that can be consumed in `-color` mixins.\n  //    (2) Legacy pattern: Passing in the palettes as parameters. This is not as flexible\n  //        as passing in a configuration map because only the `color` system can be configured.\n  //\n  // If the legacy pattern is used, we generate a container object only with a light-themed\n  // configuration for the `color` theming part.\n  @if $accent != null {\n    @return _mat-create-backwards-compatibility-theme(_mat-validate-theme((\n      _is-legacy-theme: true,\n      color: _mat-create-light-color-config($primary, $accent, $warn),\n    )));\n  }\n  // If the map pattern is used (1), we just pass-through the configurations for individual\n  // parts of the theming system, but update the `color` configuration if set. As explained\n  // above, the color shorthand will be expanded to an actual light-themed color configuration.\n  $result: $primary;\n  @if map-get($primary, color) {\n    $color-settings: map-get($primary, color);\n    $primary: map-get($color-settings, primary);\n    $accent: map-get($color-settings, accent);\n    $warn: map-get($color-settings, warn);\n    $result: map-merge($result, (color: _mat-create-light-color-config($primary, $accent, $warn)));\n  }\n  @return _mat-create-backwards-compatibility-theme(_mat-validate-theme($result));\n}\n\n// Creates a container object for a dark theme to be given to individual component theme mixins.\n// TODO: Remove legacy API and rename `$primary` to `$config`. Currently it cannot be renamed\n// as it would break existing apps that set the parameter by name.\n@function mat-dark-theme($primary, $accent: null, $warn: mat-palette($mat-red)) {\n  // This function creates a container object for the individual component theme mixins. Consumers\n  // can construct such an object by calling this function, or by building the object manually.\n  // There are two possible ways to invoke this function in order to create such an object:\n  //\n  //    (1) Passing in a map that holds optional configurations for individual parts of the\n  //        theming system. For `color` configurations, the function only expects the palettes\n  //        for `primary` and `accent` (and optionally `warn`). The function will expand the\n  //        shorthand into an actual configuration that can be consumed in `-color` mixins.\n  //    (2) Legacy pattern: Passing in the palettes as parameters. This is not as flexible\n  //        as passing in a configuration map because only the `color` system can be configured.\n  //\n  // If the legacy pattern is used, we generate a container object only with a dark-themed\n  // configuration for the `color` theming part.\n  @if $accent != null {\n    @return _mat-create-backwards-compatibility-theme(_mat-validate-theme((\n      _is-legacy-theme: true,\n      color: _mat-create-dark-color-config($primary, $accent, $warn),\n    )));\n  }\n  // If the map pattern is used (1), we just pass-through the configurations for individual\n  // parts of the theming system, but update the `color` configuration if set. As explained\n  // above, the color shorthand will be expanded to an actual dark-themed color configuration.\n  $result: $primary;\n  @if map-get($primary, color) {\n    $color-settings: map-get($primary, color);\n    $primary: map-get($color-settings, primary);\n    $accent: map-get($color-settings, accent);\n    $warn: map-get($color-settings, warn);\n    $result: map-merge($result, (color: _mat-create-dark-color-config($primary, $accent, $warn)));\n  }\n  @return _mat-create-backwards-compatibility-theme(_mat-validate-theme($result));\n}\n\n/// Gets the color configuration from the given theme or configuration.\n@function mat-get-color-config($theme, $default: null) {\n  // If a configuration has been passed, return the config directly.\n  @if not _mat-is-theme-object($theme) {\n    @return $theme;\n  }\n  // If the theme has been constructed through the legacy theming API, we use the theme object\n  // as color configuration instead of the dedicated `color` property. We do this because for\n  // backwards compatibility, we copied the color configuration from `$theme.color` to `$theme`.\n  // Hence developers could customize the colors at top-level and want to respect these changes\n  // TODO: Remove when legacy theming API is removed.\n  @if _mat-is-legacy-constructed-theme($theme) {\n    @return $theme;\n  }\n  @if map-has-key($theme, color) {\n    @return map-get($theme, color);\n  }\n  @return $default;\n}\n\n/// Gets the density configuration from the given theme or configuration.\n@function mat-get-density-config($theme-or-config, $default: 0) {\n  // If a configuration has been passed, return the config directly.\n  @if not _mat-is-theme-object($theme-or-config) {\n    @return $theme-or-config;\n  }\n  // In case a theme has been passed, extract the configuration if present,\n  // or fall back to the default density config.\n  @if map-has-key($theme-or-config, density) {\n    @return map-get($theme-or-config, density);\n  }\n  @return $default;\n}\n\n/// Gets the typography configuration from the given theme or configuration.\n/// For backwards compatibility, typography is not included by default.\n@function mat-get-typography-config($theme-or-config, $default: null) {\n  // If a configuration has been passed, return the config directly.\n  @if not _mat-is-theme-object($theme-or-config) {\n    @return $theme-or-config;\n  }\n  // In case a theme has been passed, extract the configuration if present,\n  // or fall back to the default typography config.\n  @if (map-has-key($theme-or-config, typography)) {\n    @return map-get($theme-or-config, typography);\n  }\n  @return $default;\n}\n\n// Checks whether the given value resolves to a theme object. Theme objects are always\n// of type `map` and can optionally only specify `color`, `density` or `typography`.\n@function _mat-is-theme-object($value) {\n  @return type-of($value) == 'map' and (\n    map-has-key($value, color) or\n    map-has-key($value, density) or\n    map-has-key($value, typography) or\n    length($value) == 0\n  );\n}\n\n// Checks whether a given value corresponds to a legacy constructed theme.\n@function _mat-is-legacy-constructed-theme($value) {\n  @return type-of($value) == 'map' and map-get($value, '_is-legacy-theme');\n}\n\n// Gets the theme from the given value that is either already a theme, or a color configuration.\n// This handles the legacy case where developers pass a color configuration directly to the\n// theme mixin. Before we introduced the new pattern for constructing a theme, developers passed\n// the color configuration directly to the theme mixins. This can be still the case if developers\n// construct a theme manually and pass it to a theme. We support this for backwards compatibility.\n// TODO(devversion): remove this in the future. Constructing themes manually is rare,\n// and the code can be easily updated to the new API.\n@function _mat-legacy-get-theme($theme-or-color-config) {\n  @if _mat-is-theme-object($theme-or-color-config) {\n    @return $theme-or-color-config;\n  }\n  @return _mat-create-backwards-compatibility-theme((\n    _is-legacy-theme: true,\n    color: $theme-or-color-config\n  ));\n}\n\n\n\n// Whether duplication warnings should be disabled. Warnings enabled by default.\n$mat-theme-ignore-duplication-warnings: false !default;\n\n// Warning that will be printed if duplicated styles are generated by a theme.\n$_mat-theme-duplicate-warning: 'Read more about how style duplication can be avoided in a ' +\n  'dedicated guide. https://github.com/angular/components/blob/master/guides/duplicate-theming-styles.md';\n\n// These variable are not intended to be overridden externally. They use `!default` to\n// avoid being reset every time this file is imported.\n$_mat-theme-emitted-color: () !default;\n$_mat-theme-emitted-typography: () !default;\n$_mat-theme-emitted-density: () !default;\n\n// Checks if configurations that have been declared in the given theme have been generated\n// before. If so, warnings will be reported. This should notify developers in case duplicate\n// styles are accidentally generated due to wrong usage of the all-theme mixins.\n//\n// Additionally, this mixin controls the default value for the density configuration. By\n// default, density styles are generated at scale zero. If the same density styles would be\n// generated a second time though, the default value will change to avoid duplicate styles.\n//\n// The mixin keeps track of all configurations in a list that is scoped to the specified\n// id. This is necessary because a given theme can be passed to multiple disjoint theme mixins\n// (e.g. `angular-material-theme` and `angular-material-mdc-theme`) without causing any\n// style duplication.\n@mixin _mat-check-duplicate-theme-styles($theme-or-color-config, $id) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  $color-config: mat-get-color-config($theme);\n  $density-config: mat-get-density-config($theme);\n  $typography-config: mat-get-typography-config($theme);\n  // Lists of previous `color`, `density` and `typography` configurations.\n  $previous-color: map-get($_mat-theme-emitted-color, $id) or ();\n  $previous-typography: map-get($_mat-theme-emitted-typography, $id) or ();\n  $previous-density: map-get($_mat-theme-emitted-density, $id) or ();\n  // Whether duplicate legacy density styles would be generated.\n  $duplicate-legacy-density: false;\n\n  // Check if the color configuration has been generated before.\n  @if $color-config != null {\n    @if index($previous-color, $color-config) != null and\n        not $mat-theme-ignore-duplication-warnings {\n      @warn 'The same color styles are generated multiple times. ' +\n          $_mat-theme-duplicate-warning;\n    }\n    $previous-color: append($previous-color, $color-config);\n  }\n\n  // Check if the typography configuration has been generated before.\n  @if $typography-config != null {\n    @if index($previous-typography, $typography-config) != null and\n        not $mat-theme-ignore-duplication-warnings {\n      @warn 'The same typography styles are generated multiple times. ' +\n          $_mat-theme-duplicate-warning;\n    }\n    $previous-typography: append($previous-typography, $typography-config);\n  }\n\n  // Check if the density configuration has been generated before.\n  @if $density-config != null {\n    @if index($previous-density, $density-config) != null {\n      // Only report a warning if density styles would be duplicated for non-legacy theme\n      // definitions. For legacy themes, we have compatibility logic that avoids duplication\n      // of default density styles. We don't want to report a warning in those cases.\n      @if _mat-is-legacy-constructed-theme($theme) {\n        $duplicate-legacy-density: true;\n      }\n      @else if not $mat-theme-ignore-duplication-warnings {\n        @warn 'The same density styles are generated multiple times. ' +\n           $_mat-theme-duplicate-warning;\n      }\n    }\n    $previous-density: append($previous-density, $density-config);\n  }\n\n  $_mat-theme-emitted-color: map-merge(\n      $_mat-theme-emitted-color, ($id: $previous-color)) !global;\n  $_mat-theme-emitted-density: map-merge(\n      $_mat-theme-emitted-density, ($id: $previous-density)) !global;\n  $_mat-theme-emitted-typography: map-merge(\n      $_mat-theme-emitted-typography, ($id: $previous-typography)) !global;\n\n  // Optionally, consumers of this mixin can wrap contents inside so that nested\n  // duplicate style checks do not report another warning. e.g. if developers include\n  // the `angular-material-theme` mixin twice, only the top-level duplicate styles check\n  // should report a warning. Not all individual components should report a warning too.\n  $orig-mat-theme-ignore-duplication-warnings: $mat-theme-ignore-duplication-warnings;\n  $mat-theme-ignore-duplication-warnings: true !global;\n\n  // If duplicate default density styles would be generated for a legacy constructed theme,\n  // we adjust the density generation so that no density styles are generated by default.\n  // If no default density styles have been generated yet, we ensure that the styles\n  // are generated at root. For legacy themes our goal is to generate default density\n  // styles **once** and at root. This matches the old behavior where density styles were\n  // part of the base component styles (that did not use view encapsulation).\n  // TODO: Remove this compatibility logic when the legacy theming API is removed.\n  $_mat-density-generate-at-root: _mat-is-legacy-constructed-theme($theme) !global;\n  $_mat-density-generate-styles: not $duplicate-legacy-density !global;\n\n  @content;\n  $mat-theme-ignore-duplication-warnings: $orig-mat-theme-ignore-duplication-warnings !global;\n\n  $_mat-density-generate-at-root: false !global;\n  $_mat-density-generate-styles: true !global;\n}\n\n\n\n$mat-ripple-color-opacity: 0.1;\n\n@mixin mat-ripple() {\n\n  // The host element of an mat-ripple directive should always have a position of \"absolute\" or\n  // \"relative\" so that the ripples inside are correctly positioned relatively to the container.\n  .mat-ripple {\n    overflow: hidden;\n\n    // By default, every ripple container should have position: relative in favor of creating an\n    // easy API for developers using the MatRipple directive.\n    position: relative;\n\n    // Promote containers that have ripples to a new layer. We want to target `:not(:empty)`,\n    // because we don't want all ripple containers to have their own layer since they're used in a\n    // lot of places and the layer is only relevant while animating. Note that ideally we'd use\n    // the `contain` property here (see #13175), because `:empty` can be broken by having extra\n    // text inside the element, but it isn't very well supported yet.\n    &:not(:empty) {\n      transform: translateZ(0);\n    }\n  }\n\n  .mat-ripple.mat-ripple-unbounded {\n    overflow: visible;\n  }\n\n  .mat-ripple-element {\n    position: absolute;\n    border-radius: 50%;\n    pointer-events: none;\n\n    transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n    transform: scale(0);\n\n    // In high contrast mode the ripple is opaque, causing it to obstruct the content.\n    @include cdk-high-contrast(active, off) {\n      display: none;\n    }\n  }\n}\n\n/* Colors for the ripple elements.*/\n@mixin mat-ripple-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $foreground-base: map-get($foreground, base);\n\n  .mat-ripple-element {\n    // If the ripple color is resolves to a color *type*, we can use it directly, otherwise\n    // (e.g. it resolves to a CSS variable) we fall back to using the color and setting an opacity.\n    @if (type-of($foreground-base) == color) {\n      background-color: rgba($foreground-base, $mat-ripple-color-opacity);\n    }\n    @else {\n      background-color: $foreground-base;\n      opacity: $mat-ripple-color-opacity;\n    }\n  }\n}\n\n@mixin mat-ripple-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-ripple') {\n    $color: mat-get-color-config($theme);\n    @if $color != null {\n      @include mat-ripple-color($color);\n    }\n  }\n}\n\n\n\n// This mixin ensures an element spans to fill the nearest ancestor with defined positioning.\n@mixin mat-fill {\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  position: absolute;\n}\n\n\n/// Mixin that turns on strong focus indicators.\n///\n/// @example\n///   .my-app {\n///     @include mat-strong-focus-indicators($config);\n///   }\n@mixin mat-strong-focus-indicators($config: ()) {\n  // Default focus indicator config.\n  $default-config: (\n    border-style: solid,\n    border-width: 3px,\n    border-radius: 4px,\n  );\n\n  // Merge default config with user config.\n  $config: map-merge($default-config, $config);\n  $border-style: map-get($config, border-style);\n  $border-width: map-get($config, border-width);\n  $border-radius: map-get($config, border-radius);\n\n  // Base styles for focus indicators.\n  .mat-focus-indicator::before {\n    @include mat-fill();\n    box-sizing: border-box;\n    pointer-events: none;\n    border: $border-width $border-style transparent;\n    border-radius: $border-radius;\n  }\n\n  // By default, all focus indicators are flush with the bounding box of their\n  // host element. For particular elements (listed below), default inset/offset\n  // values are necessary to ensure that the focus indicator is sufficiently\n  // contrastive and renders appropriately.\n\n  .mat-focus-indicator.mat-flat-button::before,\n  .mat-focus-indicator.mat-raised-button::before,\n  .mat-focus-indicator.mat-fab::before,\n  .mat-focus-indicator.mat-mini-fab::before,\n  .mat-focus-indicator.mat-chip::before,\n  .mat-focus-indicator.mat-sort-header-container::before {\n    margin: -($border-width + 2px);\n  }\n\n  .mat-focus-indicator.mat-stroked-button::before,\n  .mat-focus-indicator.mat-calendar-body-cell-content::before {\n    margin: -($border-width + 3px);\n  }\n\n  .mat-focus-indicator.mat-tab-link::before,\n  .mat-focus-indicator.mat-tab-label::before {\n    margin: 5px;\n  }\n\n  // Render the focus indicator on focus. Defining a pseudo element's\n  // content will cause it to render.\n\n  // Checkboxes, radios, and slide toggles render focus indicators when the\n  // associated visually-hidden input is focused.\n  .mat-checkbox-input:focus ~ .mat-focus-indicator::before,\n  .mat-radio-input:focus ~ .mat-focus-indicator::before,\n  .mat-slide-toggle-input:focus ~ .mat-slide-toggle-thumb-container .mat-focus-indicator::before,\n\n  // For options, render the focus indicator when the class .mat-active\n  // is present.\n  .mat-focus-indicator.mat-option.mat-active::before,\n\n  // For calendar cells, render the focus indicator when the parent cell is\n  // focused.\n  .mat-calendar-body-cell:focus .mat-focus-indicator::before,\n\n  // For all other components, render the focus indicator on focus.\n  .mat-focus-indicator:focus::before {\n    content: '';\n  }\n}\n\n// Mixin that applies the border color for the focus indicators.\n@mixin _mat-strong-focus-indicators-border-color($color) {\n  .mat-focus-indicator::before {\n    border-color: $color;\n  }\n}\n\n@mixin mat-strong-focus-indicators-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  @include _mat-strong-focus-indicators-border-color(mat-color(map-get($config, primary)));\n}\n\n/// Mixin that sets the color of the focus indicators.\n///\n/// @param {color|map} $theme-or-color\n///   If theme, focus indicators are set to the primary color of the theme. If\n///   color, focus indicators are set to that color.\n///\n/// @example\n///   .demo-dark-theme {\n///     @include mat-strong-focus-indicators-theme($dark-theme-map);\n///   }\n///\n/// @example\n///   .demo-red-theme {\n///     @include mat-strong-focus-indicators-theme(#f00);\n///   }\n/* stylelint-disable-next-line material/theme-mixin-api */\n@mixin mat-strong-focus-indicators-theme($theme-or-color) {\n  @if type-of($theme-or-color) != 'map' {\n    @include _mat-strong-focus-indicators-border-color($theme-or-color);\n  }\n  @else {\n    $theme: _mat-legacy-get-theme($theme-or-color);\n    @include _mat-check-duplicate-theme-styles($theme, 'mat-strong-focus-indicators') {\n      $color: mat-get-color-config($theme);\n      @if $color != null {\n        @include mat-strong-focus-indicators-color($color);\n      }\n    }\n  }\n}\n\n// Mixin that ensures focus indicator host elements are positioned so that the focus indicator\n// pseudo element within is positioned relative to the host. Private mixin included within\n// `mat-core`.\n@mixin _mat-strong-focus-indicators-positioning() {\n  .mat-focus-indicator {\n    position: relative;\n  }\n}\n\n\n\n\n// Utility for fetching a nested value from a typography config.\n@function _mat-get-type-value($config, $level, $name) {\n  @return map-get(map-get($config, $level), $name);\n}\n\n// Gets the font size for a level inside a typography config.\n@function mat-font-size($config, $level) {\n  @return _mat-get-type-value($config, $level, font-size);\n}\n\n// Gets the line height for a level inside a typography config.\n@function mat-line-height($config, $level) {\n  @return _mat-get-type-value($config, $level, line-height);\n}\n\n// Gets the font weight for a level inside a typography config.\n@function mat-font-weight($config, $level) {\n  @return _mat-get-type-value($config, $level, font-weight);\n}\n\n// Gets the letter spacing for a level inside a typography config.\n@function mat-letter-spacing($config, $level) {\n  @return _mat-get-type-value($config, $level, letter-spacing);\n}\n\n// Gets the font-family from a typography config and removes the quotes around it.\n@function mat-font-family($config, $level: null) {\n  $font-family: map-get($config, font-family);\n\n  @if $level != null {\n    $font-family: _mat-get-type-value($config, $level, font-family);\n  }\n\n  // Guard against unquoting non-string values, because it's deprecated.\n  @return if(type-of($font-family) == string, unquote($font-family), $font-family);\n}\n\n// Outputs the shorthand `font` CSS property, based on a set of typography values. Falls back to\n// the individual properties if a value that isn't allowed in the shorthand is passed in.\n@mixin mat-typography-font-shorthand($font-size, $font-weight, $line-height, $font-family) {\n  // If any of the values are set to `inherit`, we can't use the shorthand\n  // so we fall back to passing in the individual properties.\n  @if ($font-size == inherit or\n       $font-weight == inherit or\n       $line-height == inherit or\n       $font-family == inherit or\n       $font-size == null or\n       $font-weight == null or\n       $line-height == null or\n       $font-family == null) {\n\n    font-size: $font-size;\n    font-weight: $font-weight;\n    line-height: $line-height;\n    font-family: $font-family;\n  }\n  @else {\n    // Otherwise use the shorthand `font`, because it's the least amount of bytes. Note\n    // that we need to use interpolation for `font-size/line-height` in order to prevent\n    // Sass from dividing the two values.\n    font: $font-weight #{$font-size}/#{$line-height} $font-family;\n  }\n}\n\n// Converts a typography level into CSS styles.\n@mixin mat-typography-level-to-styles($config, $level) {\n  $font-size: mat-font-size($config, $level);\n  $font-weight: mat-font-weight($config, $level);\n  $line-height: mat-line-height($config, $level);\n  $font-family: mat-font-family($config, $level);\n\n  @include mat-typography-font-shorthand($font-size, $font-weight, $line-height, $font-family);\n  letter-spacing: mat-letter-spacing($config, $level);\n}\n\n\n@mixin mat-option-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $background: map-get($config, background);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n\n  .mat-option {\n    color: mat-color($foreground, text);\n\n    &:hover:not(.mat-option-disabled),\n    &:focus:not(.mat-option-disabled) {\n      background: mat-color($background, hover);\n    }\n\n    // In multiple mode there is a checkbox to show that the option is selected.\n    &.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled) {\n      background: mat-color($background, hover);\n    }\n\n    &.mat-active {\n      background: mat-color($background, hover);\n      color: mat-color($foreground, text);\n    }\n\n    &.mat-option-disabled {\n      color: mat-color($foreground, hint-text);\n    }\n  }\n\n  .mat-primary .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: mat-color($primary, text);\n  }\n\n  .mat-accent .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: mat-color($accent, text);\n  }\n\n  .mat-warn .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: mat-color($warn, text);\n  }\n}\n\n@mixin mat-option-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-option {\n    font: {\n      family: mat-font-family($config);\n      size: mat-font-size($config, subheading-2);\n    }\n  }\n}\n\n@mixin _mat-option-density($config-or-theme) {}\n\n@mixin mat-option-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-option') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-option-color($color);\n    }\n    @if $density != null {\n      @include _mat-option-density($density);\n    }\n    @if $typography != null {\n      @include mat-option-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin mat-optgroup-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n\n  .mat-optgroup-label {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-optgroup-disabled .mat-optgroup-label {\n    color: mat-color($foreground, hint-text);\n  }\n}\n\n@mixin mat-optgroup-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-optgroup-label {\n    @include mat-typography-level-to-styles($config, body-2);\n  }\n}\n\n@mixin _mat-optgroup-density($config-or-theme) {}\n\n@mixin mat-optgroup-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-optgroup') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-optgroup-color($color);\n    }\n    @if $density != null {\n      @include _mat-optgroup-density($density);\n    }\n    @if $typography != null {\n      @include mat-optgroup-typography($typography);\n    }\n  }\n}\n\n\n\n\n@mixin mat-pseudo-checkbox-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $is-dark-theme: map-get($config, is-dark);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n  $colored-box-selector: '.mat-pseudo-checkbox-checked, .mat-pseudo-checkbox-indeterminate';\n\n  .mat-pseudo-checkbox {\n    color: mat-color(map-get($config, foreground), secondary-text);\n\n    &::after {\n      color: mat-color($background, background);\n    }\n  }\n\n  .mat-pseudo-checkbox-disabled {\n    color: $disabled-color;\n  }\n\n  .mat-primary .mat-pseudo-checkbox-checked,\n  .mat-primary .mat-pseudo-checkbox-indeterminate {\n    background: mat-color(map-get($config, primary));\n  }\n\n  // Default to the accent color. Note that the pseudo checkboxes are meant to inherit the\n  // theme from their parent, rather than implementing their own theming, which is why we\n  // don't attach to the `mat-*` classes. Also note that this needs to be below `.mat-primary`\n  // in order to allow for the color to be overwritten if the checkbox is inside a parent that\n  // has `mat-accent` and is placed inside another parent that has `mat-primary`.\n  .mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-indeterminate,\n  .mat-accent .mat-pseudo-checkbox-checked,\n  .mat-accent .mat-pseudo-checkbox-indeterminate {\n    background: mat-color(map-get($config, accent));\n  }\n\n  .mat-warn .mat-pseudo-checkbox-checked,\n  .mat-warn .mat-pseudo-checkbox-indeterminate {\n    background: mat-color(map-get($config, warn));\n  }\n\n  .mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-indeterminate {\n    &.mat-pseudo-checkbox-disabled {\n      background: $disabled-color;\n    }\n  }\n}\n\n@mixin mat-pseudo-checkbox-typography($config-or-theme) {}\n\n@mixin _mat-pseudo-checkbox-density($config-or-theme) {}\n\n@mixin mat-pseudo-checkbox-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-pseudo-checkbox') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-pseudo-checkbox-color($color);\n    }\n    @if $density != null {\n      @include _mat-pseudo-checkbox-density($density);\n    }\n    @if $typography != null {\n      @include mat-pseudo-checkbox-typography($typography);\n    }\n  }\n}\n\n\n\n// Represents a typography level from the Material design spec.\n@function mat-typography-level(\n  $font-size,\n  $line-height: $font-size,\n  $font-weight: 400,\n  $font-family: null,\n  $letter-spacing: normal) {\n\n  @return (\n    font-size: $font-size,\n    line-height: $line-height,\n    font-weight: $font-weight,\n    font-family: $font-family,\n    letter-spacing: $letter-spacing\n  );\n}\n\n// Represents a collection of typography levels.\n// Defaults come from https://material.io/guidelines/style/typography.html\n// Note: The spec doesn't mention letter spacing. The values here come from\n// eyeballing it until it looked exactly like the spec examples.\n@function mat-typography-config(\n  $font-family:   'Roboto, \"Helvetica Neue\", sans-serif',\n  $display-4:     mat-typography-level(112px, 112px, 300, $letter-spacing: -0.05em),\n  $display-3:     mat-typography-level(56px, 56px, 400, $letter-spacing: -0.02em),\n  $display-2:     mat-typography-level(45px, 48px, 400, $letter-spacing: -0.005em),\n  $display-1:     mat-typography-level(34px, 40px, 400),\n  $headline:      mat-typography-level(24px, 32px, 400),\n  $title:         mat-typography-level(20px, 32px, 500),\n  $subheading-2:  mat-typography-level(16px, 28px, 400),\n  $subheading-1:  mat-typography-level(15px, 24px, 400),\n  $body-2:        mat-typography-level(14px, 24px, 500),\n  $body-1:        mat-typography-level(14px, 20px, 400),\n  $caption:       mat-typography-level(12px, 20px, 400),\n  $button:        mat-typography-level(14px, 14px, 500),\n  // Line-height must be unit-less fraction of the font-size.\n  $input:         mat-typography-level(inherit, 1.125, 400)\n) {\n\n  // Declare an initial map with all of the levels.\n  $config: (\n    display-4:      $display-4,\n    display-3:      $display-3,\n    display-2:      $display-2,\n    display-1:      $display-1,\n    headline:       $headline,\n    title:          $title,\n    subheading-2:   $subheading-2,\n    subheading-1:   $subheading-1,\n    body-2:         $body-2,\n    body-1:         $body-1,\n    caption:        $caption,\n    button:         $button,\n    input:          $input,\n  );\n\n  // Loop through the levels and set the `font-family` of the ones that don't have one to the base.\n  // Note that Sass can't modify maps in place, which means that we need to merge and re-assign.\n  @each $key, $level in $config {\n    @if map-get($level, font-family) == null {\n      $new-level: map-merge($level, (font-family: $font-family));\n      $config: map-merge($config, ($key: $new-level));\n    }\n  }\n\n  // Add the base font family to the config.\n  @return map-merge($config, (font-family: $font-family));\n}\n\n// Adds the base typography styles, based on a config.\n/* stylelint-disable-next-line material/theme-mixin-api */\n@mixin mat-base-typography($config, $selector: '.mat-typography') {\n  .mat-h1, .mat-headline, #{$selector} h1 {\n    @include mat-typography-level-to-styles($config, headline);\n    margin: 0 0 16px;\n  }\n\n  .mat-h2, .mat-title, #{$selector} h2 {\n    @include mat-typography-level-to-styles($config, title);\n    margin: 0 0 16px;\n  }\n\n  .mat-h3, .mat-subheading-2, #{$selector} h3 {\n    @include mat-typography-level-to-styles($config, subheading-2);\n    margin: 0 0 16px;\n  }\n\n  .mat-h4, .mat-subheading-1, #{$selector} h4 {\n    @include mat-typography-level-to-styles($config, subheading-1);\n    margin: 0 0 16px;\n  }\n\n  // Note: the spec doesn't have anything that would correspond to h5 and h6, but we add these for\n  // consistency. The font sizes come from the Chrome user agent styles which have h5 at 0.83em\n  // and h6 at 0.67em.\n  .mat-h5, #{$selector} h5 {\n    @include mat-typography-font-shorthand(\n       // calc is used here to support css variables\n      calc(#{mat-font-size($config, body-1)} * 0.83),\n      mat-font-weight($config, body-1),\n      mat-line-height($config, body-1),\n      mat-font-family($config, body-1)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-h6, #{$selector} h6 {\n    @include mat-typography-font-shorthand(\n       // calc is used here to support css variables\n      calc(#{mat-font-size($config, body-1)} * 0.67),\n      mat-font-weight($config, body-1),\n      mat-line-height($config, body-1),\n      mat-font-family($config, body-1)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-body-strong, .mat-body-2 {\n    @include mat-typography-level-to-styles($config, body-2);\n  }\n\n  .mat-body, .mat-body-1, #{$selector} {\n    @include mat-typography-level-to-styles($config, body-1);\n\n    p {\n      margin: 0 0 12px;\n    }\n  }\n\n  .mat-small, .mat-caption {\n    @include mat-typography-level-to-styles($config, caption);\n  }\n\n  .mat-display-4, #{$selector} .mat-display-4 {\n    @include mat-typography-level-to-styles($config, display-4);\n    margin: 0 0 56px;\n  }\n\n  .mat-display-3, #{$selector} .mat-display-3 {\n    @include mat-typography-level-to-styles($config, display-3);\n    margin: 0 0 64px;\n  }\n\n  .mat-display-2, #{$selector} .mat-display-2 {\n    @include mat-typography-level-to-styles($config, display-2);\n    margin: 0 0 64px;\n  }\n\n  .mat-display-1, #{$selector} .mat-display-1 {\n    @include mat-typography-level-to-styles($config, display-1);\n    margin: 0 0 64px;\n  }\n}\n\n\n\n\n\n@mixin mat-autocomplete-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $background: map-get($config, background);\n\n  .mat-autocomplete-panel {\n    @include _mat-theme-overridable-elevation(4, $config);\n    background: mat-color($background, card);\n    color: mat-color($foreground, text);\n\n    // Selected options in autocompletes should not be gray, but we\n    // only want to override the background for selected options if\n    // they are *not* in hover or focus state. This change has to be\n    // made here because base option styles are shared between the\n    // autocomplete and the select.\n    .mat-option.mat-selected:not(.mat-active):not(:hover) {\n      background: mat-color($background, card);\n\n      &:not(.mat-option-disabled) {\n        color: mat-color($foreground, text);\n      }\n    }\n  }\n}\n\n@mixin mat-autocomplete-typography($config-or-theme) {}\n\n@mixin _mat-autocomplete-density($config-or-theme) {}\n\n@mixin mat-autocomplete-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-autocomplete') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-autocomplete-color($color);\n    }\n    @if $density != null {\n      @include _mat-autocomplete-density($density);\n    }\n    @if $typography != null {\n      @include mat-autocomplete-typography($typography);\n    }\n  }\n}\n\n// This contains all of the styles for the badge\n// rather than just the color/theme because of\n// no style sheet support for directives.\n\n\n\n\n\n\n$mat-badge-font-size: 12px;\n$mat-badge-font-weight: 600;\n$mat-badge-default-size: 22px !default;\n$mat-badge-small-size: $mat-badge-default-size - 6;\n$mat-badge-large-size: $mat-badge-default-size + 6;\n\n// Mixin for building offset given different sizes\n@mixin _mat-badge-size($size) {\n  .mat-badge-content {\n    width: $size;\n    height: $size;\n    line-height: $size;\n  }\n\n  &.mat-badge-above {\n    .mat-badge-content {\n      top: -$size / 2;\n    }\n  }\n\n  &.mat-badge-below {\n    .mat-badge-content {\n      bottom: -$size / 2;\n    }\n  }\n\n  &.mat-badge-before {\n    .mat-badge-content {\n      left: -$size;\n    }\n  }\n\n  [dir='rtl'] &.mat-badge-before {\n    .mat-badge-content {\n      left: auto;\n      right: -$size;\n    }\n  }\n\n  &.mat-badge-after {\n    .mat-badge-content {\n      right: -$size;\n    }\n  }\n\n  [dir='rtl'] &.mat-badge-after {\n    .mat-badge-content {\n      right: auto;\n      left: -$size;\n    }\n  }\n\n  &.mat-badge-overlap {\n    &.mat-badge-before {\n      .mat-badge-content {\n        left: -$size / 2;\n      }\n    }\n\n    [dir='rtl'] &.mat-badge-before {\n      .mat-badge-content {\n        left: auto;\n        right: -$size / 2;\n      }\n    }\n\n    &.mat-badge-after {\n      .mat-badge-content {\n        right: -$size / 2;\n      }\n    }\n\n    [dir='rtl'] &.mat-badge-after {\n      .mat-badge-content {\n        right: auto;\n        left: -$size / 2;\n      }\n    }\n  }\n}\n\n@mixin mat-badge-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $primary: map-get($config, primary);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-badge-content {\n    color: mat-color($primary, default-contrast);\n    background: mat-color($primary);\n\n    @include cdk-high-contrast(active, off) {\n      outline: solid 1px;\n      border-radius: 0;\n    }\n  }\n\n  .mat-badge-accent {\n    .mat-badge-content {\n      background: mat-color($accent);\n      color: mat-color($accent, default-contrast);\n    }\n  }\n\n  .mat-badge-warn {\n    .mat-badge-content {\n      color: mat-color($warn, default-contrast);\n      background: mat-color($warn);\n    }\n  }\n\n  .mat-badge {\n    position: relative;\n  }\n\n  .mat-badge-hidden {\n    .mat-badge-content {\n      display: none;\n    }\n  }\n\n  .mat-badge-disabled {\n    .mat-badge-content {\n      $app-background: mat-color($background, 'background');\n      $badge-color: mat-color($foreground, disabled-button);\n\n      // The disabled color usually has some kind of opacity, but because the badge is overlayed\n      // on top of something else, it won't look good if it's opaque. If it is a color *type*,\n      // we convert it into a solid color by taking the opacity from the rgba value and using\n      // the value to determine the percentage of the background to put into foreground when\n      // mixing the colors together.\n      @if (type-of($badge-color) == color and type-of($app-background) == color) {\n        $badge-opacity: opacity($badge-color);\n        background: mix($app-background, rgba($badge-color, 1), (1 - $badge-opacity) * 100%);\n      }\n      @else {\n        background: $badge-color;\n      }\n\n      color: mat-color($foreground, disabled-text);\n    }\n  }\n\n  .mat-badge-content {\n    position: absolute;\n    text-align: center;\n    display: inline-block;\n    border-radius: 50%;\n    transition: transform 200ms ease-in-out;\n    transform: scale(0.6);\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    pointer-events: none;\n  }\n\n  .ng-animate-disabled .mat-badge-content,\n  .mat-badge-content._mat-animation-noopable {\n    transition: none;\n  }\n\n  // The active class is added after the element is added\n  // so it can animate scale to default\n  .mat-badge-content.mat-badge-active {\n    // Scale to `none` instead of `1` to avoid blurry text in some browsers.\n    transform: none;\n  }\n\n  .mat-badge-small {\n    @include _mat-badge-size($mat-badge-small-size);\n  }\n  .mat-badge-medium {\n    @include _mat-badge-size($mat-badge-default-size);\n  }\n  .mat-badge-large {\n    @include _mat-badge-size($mat-badge-large-size);\n  }\n}\n\n@mixin mat-badge-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-badge-content {\n    font-weight: $mat-badge-font-weight;\n    font-size: $mat-badge-font-size;\n    font-family: mat-font-family($config);\n  }\n\n  .mat-badge-small .mat-badge-content {\n    // Set the font size to 75% of the original.\n    font-size: $mat-badge-font-size * 0.75;\n  }\n\n  .mat-badge-large .mat-badge-content {\n    font-size: $mat-badge-font-size * 2;\n  }\n}\n\n@mixin _mat-badge-density($config-or-theme) {}\n\n@mixin mat-badge-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-badge') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-badge-color($color);\n    }\n    @if $density != null {\n      @include _mat-badge-density($density);\n    }\n    @if $typography != null {\n      @include mat-badge-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-bottom-sheet-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-bottom-sheet-container {\n    @include _mat-theme-elevation(16, $config);\n    background: mat-color($background, dialog);\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-bottom-sheet-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-bottom-sheet-container {\n    @include mat-typography-level-to-styles($config, body-1);\n  }\n}\n\n@mixin _mat-bottom-sheet-density($config-or-theme) {}\n\n@mixin mat-bottom-sheet-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-bottom-sheet') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-bottom-sheet-color($color);\n    }\n    @if $density != null {\n      @include _mat-bottom-sheet-density($density);\n    }\n    @if $typography != null {\n      @include mat-bottom-sheet-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n$_mat-button-ripple-opacity: 0.1;\n\n// Applies a focus style to an mat-button element for each of the supported palettes.\n@mixin _mat-button-focus-overlay-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n\n  &.mat-primary .mat-button-focus-overlay {\n    background-color: mat-color($primary);\n  }\n\n  &.mat-accent .mat-button-focus-overlay {\n    background-color: mat-color($accent);\n  }\n\n  &.mat-warn .mat-button-focus-overlay {\n    background-color: mat-color($warn);\n  }\n\n  &.mat-button-disabled .mat-button-focus-overlay {\n    background-color: transparent;\n  }\n}\n\n// Applies the background color for a ripple. If the value provided is not a Sass color,\n// we assume that we've been given a CSS variable. Since we can't perform alpha-blending\n// on a CSS variable, we instead add the opacity directly to the ripple element.\n@mixin _mat-button-ripple-background($palette, $hue, $opacity) {\n  $background-color: mat-color($palette, $hue, $opacity);\n  background-color: $background-color;\n  @if (type-of($background-color) != color) {\n    opacity: $opacity;\n  }\n}\n\n@mixin _mat-button-ripple-color($theme, $hue, $opacity: $_mat-button-ripple-opacity) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  &.mat-primary .mat-ripple-element {\n    @include _mat-button-ripple-background($primary, $hue, $opacity);\n  }\n\n  &.mat-accent .mat-ripple-element {\n    @include _mat-button-ripple-background($accent, $hue, $opacity);\n  }\n\n  &.mat-warn .mat-ripple-element {\n    @include _mat-button-ripple-background($warn, $hue, $opacity);\n  }\n}\n\n// Applies a property to an mat-button element for each of the supported palettes.\n@mixin _mat-button-theme-property($theme, $property, $hue) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  &.mat-primary {\n    #{$property}: mat-color($primary, $hue);\n  }\n  &.mat-accent {\n    #{$property}: mat-color($accent, $hue);\n  }\n  &.mat-warn {\n    #{$property}: mat-color($warn, $hue);\n  }\n\n  &.mat-primary, &.mat-accent, &.mat-warn, &.mat-button-disabled {\n    &.mat-button-disabled {\n      $palette: if($property == 'color', $foreground, $background);\n      #{$property}: mat-color($palette, disabled-button);\n    }\n  }\n}\n\n@mixin mat-button-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-button, .mat-icon-button, .mat-stroked-button {\n    // Buttons without a background color should inherit the font color. This is necessary to\n    // ensure that the button is readable on custom background colors. It's wrong to always assume\n    // that those buttons are always placed inside of containers with the default background\n    // color of the theme (e.g. themed toolbars).\n    color: inherit;\n    background: transparent;\n\n    @include _mat-button-theme-property($config, 'color', text);\n    @include _mat-button-focus-overlay-color($config);\n\n    // Setup the ripple color to be based on the text color. This ensures that the ripples\n    // are matching with the current theme palette and are in contrast to the background color\n    // (e.g in themed toolbars).\n    .mat-ripple-element {\n      opacity: $_mat-button-ripple-opacity;\n      background-color: currentColor;\n    }\n  }\n\n  .mat-button-focus-overlay {\n    background: map-get($foreground, base);\n  }\n\n  // Note: this needs a bit extra specificity, because we're not guaranteed the inclusion\n  // order of the theme styles and the button reset may end up resetting this as well.\n  .mat-stroked-button:not(.mat-button-disabled) {\n    border-color: mat-color($foreground, divider);\n  }\n\n  .mat-flat-button, .mat-raised-button, .mat-fab, .mat-mini-fab {\n    // Default font and background color when not using any color palette.\n    color: mat-color($foreground, text);\n    background-color: mat-color($background, raised-button);\n\n    @include _mat-button-theme-property($config, 'color', default-contrast);\n    @include _mat-button-theme-property($config, 'background-color', default);\n    @include _mat-button-ripple-color($config, default-contrast);\n  }\n\n  .mat-stroked-button, .mat-flat-button {\n    @include _mat-theme-overridable-elevation(0, $config);\n  }\n\n  .mat-raised-button {\n    @include _mat-theme-overridable-elevation(2, $config);\n\n    &:not(.mat-button-disabled):active {\n      @include _mat-theme-overridable-elevation(8, $config);\n    }\n\n    &.mat-button-disabled {\n      @include _mat-theme-overridable-elevation(0, $config);\n    }\n  }\n\n  .mat-fab, .mat-mini-fab {\n    @include _mat-theme-overridable-elevation(6, $config);\n\n    &:not(.mat-button-disabled):active {\n      @include _mat-theme-overridable-elevation(12, $config);\n    }\n\n    &.mat-button-disabled {\n      @include _mat-theme-overridable-elevation(0, $config);\n    }\n  }\n}\n\n@mixin mat-button-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-button, .mat-raised-button, .mat-icon-button, .mat-stroked-button,\n  .mat-flat-button, .mat-fab, .mat-mini-fab {\n    font: {\n      family: mat-font-family($config, button);\n      size: mat-font-size($config, button);\n      weight: mat-font-weight($config, button);\n    }\n  }\n}\n\n@mixin _mat-button-density($config-or-theme) {}\n\n@mixin mat-button-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-button') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-button-color($color);\n    }\n    @if $density != null {\n      @include _mat-button-density($density);\n    }\n    @if $typography != null {\n      @include mat-button-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n// Taken from mat-density with small modifications to not rely on the new Sass module\n// system, and to support arbitrary properties in a density configuration.\n// https://github.com/material-components/material-components-web/blob/master/packages/mdc-density\n\n$_mat-density-interval: 4px !default;\n$_mat-density-minimum-scale: minimum !default;\n$_mat-density-maximum-scale: maximum !default;\n$_mat-density-supported-scales: (default, minimum, maximum) !default;\n$_mat-density-default-scale: 0 !default;\n\n// Whether density should be generated at root. This will be temporarily set to `true`\n// whenever density styles for legacy themes are generated.\n$_mat-density-generate-at-root: false;\n// Whether density styles should be generated. This will be temporarily set to `false` if\n// duplicate density styles for a legacy theme would be generated. For legacy themes,\n// we always generate the default density **only once** at root.\n$_mat-density-generate-styles: true;\n\n// Mixin that can be used to wrap density styles of given components. The mixin will\n// move the density styles to root if the `$_mat-density-generate-at-root` global variable\n// is set. If `$_mat-density-generate-styles` is set to `false`, generation of density\n// styles wrapped in this mixin is skipped. This mixin exists to improve backwards compatibility\n// of the new theming API where density styles are included as part of themes. Previously,\n// density styles of components were part of their base styles. With the new API, they are\n// part of the theming system. The `<..>-theme` mixins generate density by default unless\n// the density configuration is explicitly specified as per new API. This means, that projects\n// using `<..>-theme` mixins for separate themes (like `.dark-theme`) will cause duplicate\n// density styles. This is breaking as it increases specificity of density styles. This mixin\n// provides an API to control generation of density styles so that we can ensure they are only\n// created *once* and at root.\n@mixin _mat-density-legacy-compatibility() {\n  @if $_mat-density-generate-styles and $_mat-density-generate-at-root {\n    @at-root {\n      @content;\n    }\n  }\n  @else if $_mat-density-generate-styles {\n    @content;\n  }\n}\n\n@function _mat-density-prop-value($density-config, $density-scale, $property-name) {\n  @if (type-of($density-scale) == 'string' and\n      index($list: $_mat-density-supported-scales, $value: $density-scale) == null) {\n    @error 'mat-density: Supported density scales #{$_mat-density-supported-scales}, '  +\n      'but received #{$density-scale}.';\n  }\n\n  $value: null;\n  $property-scale-map: map-get($density-config, $property-name);\n\n  @if map-has-key($property-scale-map, $density-scale) {\n    $value: map-get($property-scale-map, $density-scale);\n  }\n  @else {\n    $value: map-get($property-scale-map, default) + $density-scale * $_mat-density-interval;\n  }\n\n  $min-value: map-get($property-scale-map, $_mat-density-minimum-scale);\n  $max-value: map-get($property-scale-map, $_mat-density-maximum-scale);\n\n  @if ($value < $min-value or $value > $max-value) {\n    @error 'mat-density: #{$property-name} must be between #{$min-value} and ' +\n      '#{$max-value} (inclusive), but received #{$value}.';\n  }\n\n  @return $value;\n}\n\n$mat-button-toggle-standard-height: 48px !default;\n// Minimum height for highest density can vary based on the content that developers\n// project into button-toggle's. We use a minimum of `24px` though because commonly\n// icons or text are displayed. Icons by default have a size of `24px`.\n$mat-button-toggle-standard-minimum-height: 24px !default;\n$mat-button-toggle-standard-maximum-height: $mat-button-toggle-standard-height !default;\n\n$mat-button-toggle-standard-density-config: (\n  height: (\n    default: $mat-button-toggle-standard-height,\n    maximum: $mat-button-toggle-standard-maximum-height,\n    minimum: $mat-button-toggle-standard-minimum-height,\n  )\n) !default;\n\n\n@mixin mat-button-toggle-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $background: map-get($config, background);\n  $divider-color: mat-color($foreground, divider);\n\n  .mat-button-toggle-standalone,\n  .mat-button-toggle-group {\n    @include _mat-theme-elevation(2, $config);\n  }\n\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n  .mat-button-toggle-group-appearance-standard {\n    box-shadow: none;\n  }\n\n  .mat-button-toggle {\n    color: mat-color($foreground, hint-text);\n\n    .mat-button-toggle-focus-overlay {\n      background-color: mat-color($background, focused-button);\n    }\n  }\n\n  .mat-button-toggle-appearance-standard {\n    color: mat-color($foreground, text);\n    background: mat-color($background, card);\n\n    .mat-button-toggle-focus-overlay {\n      background-color: mat-color($background, focused-button, 1);\n    }\n  }\n\n  .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n    border-left: solid 1px $divider-color;\n  }\n\n  [dir='rtl'] .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n    border-left: none;\n    border-right: solid 1px $divider-color;\n  }\n\n  .mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical {\n    .mat-button-toggle + .mat-button-toggle {\n      border-left: none;\n      border-right: none;\n      border-top: solid 1px $divider-color;\n    }\n  }\n\n  .mat-button-toggle-checked {\n    background-color: mat-color($background, selected-button);\n    color: mat-color($foreground, secondary-text);\n\n    &.mat-button-toggle-appearance-standard {\n      color: mat-color($foreground, text);\n    }\n  }\n\n  .mat-button-toggle-disabled {\n    color: mat-color($foreground, disabled-button);\n    background-color: mat-color($background, disabled-button-toggle);\n\n    &.mat-button-toggle-appearance-standard {\n      background: mat-color($background, card);\n    }\n\n    &.mat-button-toggle-checked {\n      background-color: mat-color($background, selected-disabled-button);\n    }\n  }\n\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n  .mat-button-toggle-group-appearance-standard {\n    border: solid 1px $divider-color;\n  }\n}\n\n@mixin mat-button-toggle-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-button-toggle {\n    font-family: mat-font-family($config);\n  }\n}\n\n@mixin _mat-button-toggle-density($config-or-theme) {\n  $density-scale: mat-get-density-config($config-or-theme);\n  $standard-height: _mat-density-prop-value(\n      $mat-button-toggle-standard-density-config, $density-scale, height);\n\n  @include _mat-density-legacy-compatibility() {\n    .mat-button-toggle-appearance-standard .mat-button-toggle-label-content {\n      line-height: $standard-height;\n    }\n  }\n}\n\n@mixin mat-button-toggle-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-button-toggle') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-button-toggle-color($color);\n    }\n    @if $density != null {\n      @include _mat-button-toggle-density($density);\n    }\n    @if $typography != null {\n      @include mat-button-toggle-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n@mixin mat-card-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-card {\n    @include _mat-theme-overridable-elevation(1, $config);\n    background: mat-color($background, card);\n    color: mat-color($foreground, text);\n\n    // Needs extra specificity to be able to override the elevation selectors.\n    &.mat-card-flat {\n      @include _mat-theme-overridable-elevation(0, $config);\n    }\n  }\n\n  .mat-card-subtitle {\n    color: mat-color($foreground, secondary-text);\n  }\n}\n\n@mixin mat-card-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-card {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-card-title {\n    font: {\n      size: mat-font-size($config, headline);\n      weight: mat-font-weight($config, title);\n    }\n  }\n\n  .mat-card-header .mat-card-title {\n    font-size: mat-font-size($config, title);\n  }\n\n  .mat-card-subtitle,\n  .mat-card-content {\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n@mixin _mat-card-density($config-or-theme) {}\n\n@mixin mat-card-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-card') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-card-color($color);\n    }\n    @if $density != null {\n      @include _mat-card-density($density);\n    }\n    @if $typography != null {\n      @include mat-card-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin mat-checkbox-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $is-dark-theme: map-get($config, is-dark);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n\n  // The color of the checkbox's checkmark / mixedmark.\n  $checkbox-mark-color: mat-color($background, background);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n\n  .mat-checkbox-frame {\n    border-color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-checkbox-checkmark {\n    fill: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-checkmark-path {\n    // !important is needed here because a stroke must be set as an\n    // attribute on the SVG in order for line animation to work properly.\n    stroke: $checkbox-mark-color !important;\n  }\n\n  .mat-checkbox-mixedmark {\n    background-color: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-indeterminate, .mat-checkbox-checked {\n    &.mat-primary .mat-checkbox-background {\n      background-color: mat-color($primary);\n    }\n\n    &.mat-accent .mat-checkbox-background {\n      background-color: mat-color($accent);\n    }\n\n    &.mat-warn .mat-checkbox-background {\n      background-color: mat-color($warn);\n    }\n  }\n\n  .mat-checkbox-disabled {\n    &.mat-checkbox-checked,\n    &.mat-checkbox-indeterminate {\n      .mat-checkbox-background {\n        background-color: $disabled-color;\n      }\n    }\n\n    &:not(.mat-checkbox-checked) {\n      .mat-checkbox-frame {\n        border-color: $disabled-color;\n      }\n    }\n\n    .mat-checkbox-label {\n      color: mat-color($foreground, secondary-text);\n    }\n  }\n\n  // Switch this to a solid color since we're using `opacity`\n  // to control how opaque the ripple should be.\n  .mat-checkbox .mat-ripple-element {\n    background-color: map-get(map-get($config, foreground), base);\n  }\n\n  .mat-checkbox-checked:not(.mat-checkbox-disabled),\n  .mat-checkbox:active:not(.mat-checkbox-disabled) {\n    &.mat-primary .mat-ripple-element {\n      background: mat-color($primary);\n    }\n\n    &.mat-accent .mat-ripple-element {\n      background: mat-color($accent);\n    }\n\n    &.mat-warn .mat-ripple-element {\n      background: mat-color($warn);\n    }\n  }\n}\n\n@mixin mat-checkbox-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-checkbox {\n    font-family: mat-font-family($config);\n  }\n\n  // TODO(kara): Remove this style when fixing vertical baseline\n  .mat-checkbox-layout .mat-checkbox-label {\n    line-height: mat-line-height($config, body-2);\n  }\n}\n\n@mixin _mat-checkbox-density($config-or-theme) {}\n\n@mixin mat-checkbox-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-checkbox') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-checkbox-color($color);\n    }\n    @if $density != null {\n      @include _mat-checkbox-density($density);\n    }\n    @if $typography != null {\n      @include mat-checkbox-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n$mat-chip-remove-font-size: 18px;\n\n@mixin _mat-chip-element-color($foreground, $background) {\n  background-color: $background;\n  color: $foreground;\n\n  .mat-chip-remove {\n    color: $foreground;\n    opacity: 0.4;\n  }\n}\n\n\n// Applies the background color for a ripple element.\n// If the color value provided is not a Sass color,\n// we assume that we've been given a CSS variable.\n// Since we can't perform alpha-blending on a CSS variable,\n// we instead add the opacity directly to the ripple element.\n@mixin _mat-chips-ripple-background($palette, $default-contrast, $opacity) {\n  $background-color: mat-color($palette, $default-contrast, $opacity);\n  background-color: $background-color;\n  @if (type-of($background-color) != color) {\n    opacity: $opacity;\n  }\n}\n\n@mixin _mat-chip-theme-color($palette) {\n  @include _mat-chip-element-color(mat-color($palette, default-contrast), mat-color($palette));\n\n  .mat-ripple-element {\n    @include _mat-chips-ripple-background($palette, default-contrast, 0.1);\n  }\n}\n\n@mixin mat-chips-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $is-dark-theme: map-get($config, is-dark);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  $unselected-background: mat-color($background, unselected-chip);\n  $unselected-foreground: mat-color($foreground, text);\n\n  .mat-chip.mat-standard-chip {\n    @include _mat-chip-element-color($unselected-foreground, $unselected-background);\n\n    &:not(.mat-chip-disabled) {\n      &:active {\n        @include _mat-theme-elevation(3, $config);\n      }\n\n      .mat-chip-remove:hover {\n        opacity: 0.54;\n      }\n    }\n\n    &.mat-chip-disabled {\n      opacity: 0.4;\n    }\n\n    &::after {\n      background: map-get($foreground, base);\n    }\n  }\n\n  .mat-chip.mat-standard-chip.mat-chip-selected {\n    &.mat-primary {\n      @include _mat-chip-theme-color($primary);\n    }\n\n    &.mat-warn {\n      @include _mat-chip-theme-color($warn);\n    }\n\n    &.mat-accent {\n      @include _mat-chip-theme-color($accent);\n    }\n  }\n}\n\n@mixin mat-chips-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-chip {\n    font-size: mat-font-size($config, body-2);\n    font-weight: mat-font-weight($config, body-2);\n\n    .mat-chip-trailing-icon.mat-icon,\n    .mat-chip-remove.mat-icon {\n      font-size: $mat-chip-remove-font-size;\n    }\n  }\n}\n\n@mixin _mat-chips-density($config-or-theme) {}\n\n@mixin mat-chips-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-chips') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-chips-color($color);\n    }\n    @if $density != null {\n      @include _mat-chips-density($density);\n    }\n    @if $typography != null {\n      @include mat-chips-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-divider-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n\n  .mat-divider {\n    border-top-color: mat-color($foreground, divider);\n  }\n\n  .mat-divider-vertical {\n    border-right-color: mat-color($foreground, divider);\n  }\n}\n\n@mixin mat-divider-typography($config-or-theme) {}\n\n@mixin _mat-divider-density($config-or-theme) {}\n\n@mixin mat-divider-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-divider') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-divider-color($color);\n    }\n    @if $density != null {\n      @include _mat-divider-density($density);\n    }\n    @if $typography != null {\n      @include mat-divider-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin mat-table-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-table {\n    background: mat-color($background, 'card');\n  }\n\n  .mat-table thead, .mat-table tbody, .mat-table tfoot,\n  mat-header-row, mat-row, mat-footer-row,\n  [mat-header-row], [mat-row], [mat-footer-row],\n  .mat-table-sticky {\n    background: inherit;\n  }\n\n  mat-row, mat-header-row, mat-footer-row,\n  th.mat-header-cell, td.mat-cell, td.mat-footer-cell {\n    border-bottom-color: mat-color($foreground, divider);\n  }\n\n  .mat-header-cell {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-cell, .mat-footer-cell {\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-table-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-table {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-header-cell {\n    font-size: mat-font-size($config, caption);\n    font-weight: mat-font-weight($config, body-2);\n  }\n\n  .mat-cell, .mat-footer-cell {\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n@mixin _mat-table-density($config-or-theme) {}\n\n@mixin mat-table-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-table') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-table-color($color);\n    }\n    @if $density != null {\n      @include _mat-table-density($density);\n    }\n    @if $typography != null {\n      @include mat-table-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n$mat-datepicker-selected-today-box-shadow-width: 1px;\n$mat-datepicker-selected-fade-amount: 0.6;\n$mat-datepicker-range-fade-amount: 0.2;\n$mat-datepicker-today-fade-amount: 0.2;\n$mat-calendar-body-font-size: 13px !default;\n$mat-calendar-weekday-table-font-size: 11px !default;\n\n@mixin _mat-datepicker-color($palette) {\n  @include mat-date-range-colors(\n    mat-color($palette, default, $mat-datepicker-range-fade-amount));\n\n  .mat-calendar-body-selected {\n    background-color: mat-color($palette);\n    color: mat-color($palette, default-contrast);\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-selected {\n    $background: mat-color($palette);\n\n    @if (type-of($background) == color) {\n      background-color: fade-out($background, $mat-datepicker-selected-fade-amount);\n    }\n    @else {\n      // If we couldn't resolve to background to a color (e.g. it's a CSS variable),\n      // fall back to fading the content out via `opacity`.\n      opacity: $mat-datepicker-today-fade-amount;\n    }\n  }\n\n  .mat-calendar-body-today.mat-calendar-body-selected {\n    box-shadow: inset 0 0 0 $mat-datepicker-selected-today-box-shadow-width\n                mat-color($palette, default-contrast);\n  }\n}\n\n// Utility mixin to target cells that aren't selected. Used to make selector easier to follow.\n@mixin _mat-datepicker-unselected-cell {\n  &:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    @content;\n  }\n}\n\n@mixin mat-datepicker-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $background: map-get($config, background);\n  $disabled-color: mat-color($foreground, disabled-text);\n\n  .mat-calendar-arrow {\n    border-top-color: mat-color($foreground, icon);\n  }\n\n  // The prev/next buttons need a bit more specificity to\n  // avoid being overwritten by the .mat-icon-button.\n  .mat-datepicker-toggle,\n  .mat-datepicker-content .mat-calendar-next-button,\n  .mat-datepicker-content .mat-calendar-previous-button {\n    color: mat-color($foreground, icon);\n  }\n\n  .mat-calendar-table-header {\n    color: mat-color($foreground, hint-text);\n  }\n\n  .mat-calendar-table-header-divider::after {\n    background: mat-color($foreground, divider);\n  }\n\n  .mat-calendar-body-label {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-calendar-body-cell-content,\n  .mat-date-range-input-separator {\n    color: mat-color($foreground, text);\n    border-color: transparent;\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-cell-content {\n    @include _mat-datepicker-unselected-cell {\n      color: $disabled-color;\n    }\n  }\n\n  .mat-form-field-disabled .mat-date-range-input-separator {\n    color: $disabled-color;\n  }\n\n  .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover,\n  .cdk-keyboard-focused .mat-calendar-body-active,\n  .cdk-program-focused .mat-calendar-body-active {\n    & > .mat-calendar-body-cell-content {\n      @include _mat-datepicker-unselected-cell {\n        background-color: mat-color($background, hover);\n      }\n    }\n  }\n\n  .mat-calendar-body-in-preview {\n    $divider-color: mat-color($foreground, divider);\n\n    @if type-of($divider-color) == color {\n      // The divider color is set under the assumption that it'll be used\n      // for a solid border, but because we're using a dashed border for the\n      // preview range, we need to bump its opacity to ensure that it's visible.\n      color: rgba($divider-color, min(opacity($divider-color) * 2, 1));\n    }\n    @else {\n      color: $divider-color;\n    }\n  }\n\n  .mat-calendar-body-today {\n    @include _mat-datepicker-unselected-cell {\n      // Note: though it's not text, the border is a hint about the fact that this is today's date,\n      // so we use the hint color.\n      border-color: mat-color($foreground, hint-text);\n    }\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-today {\n    @include _mat-datepicker-unselected-cell {\n      $color: mat-color($foreground, hint-text);\n\n      @if (type-of($color) == color) {\n        border-color: fade-out($color, $mat-datepicker-today-fade-amount);\n      }\n      @else {\n        // If the color didn't resolve to a color value, but something like a CSS variable, we can't\n        // fade it out so we fall back to reducing the element opacity. Note that we don't use the\n        // $mat-datepicker-today-fade-amount, because hint text usually has some opacity applied\n        // to it already and we don't want them to stack on top of each other.\n        opacity: 0.5;\n      }\n    }\n  }\n\n  @include _mat-datepicker-color(map-get($config, primary));\n\n  .mat-datepicker-content {\n    @include _mat-theme-elevation(4, $config);\n    background-color: mat-color($background, card);\n    color: mat-color($foreground, text);\n\n    &.mat-accent {\n      @include _mat-datepicker-color(map-get($config, accent));\n    }\n\n    &.mat-warn {\n      @include _mat-datepicker-color(map-get($config, warn));\n    }\n  }\n\n  .mat-datepicker-content-touch {\n    @include _mat-theme-elevation(0, $config);\n  }\n\n  .mat-datepicker-toggle-active {\n    color: mat-color(map-get($config, primary), text);\n\n    &.mat-accent {\n      color: mat-color(map-get($config, accent), text);\n    }\n\n    &.mat-warn {\n      color: mat-color(map-get($config, warn), text);\n    }\n  }\n\n  .mat-date-range-input-inner[disabled] {\n    color: mat-color($foreground, disabled-text);\n  }\n}\n\n@mixin mat-datepicker-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-calendar {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-calendar-body {\n    font-size: $mat-calendar-body-font-size;\n  }\n\n  .mat-calendar-body-label,\n  .mat-calendar-period-button {\n    font: {\n      size: mat-font-size($config, button);\n      weight: mat-font-weight($config, button);\n    }\n  }\n\n  .mat-calendar-table-header th {\n    font: {\n      size: $mat-calendar-weekday-table-font-size;\n      weight: mat-font-weight($config, body-1);\n    }\n  }\n}\n\n@mixin mat-date-range-colors(\n  $range-color,\n  $comparison-color: rgba(#f9ab00, $mat-datepicker-range-fade-amount),\n  $overlap-color: #a8dab5,\n  $overlap-selected-color: darken($overlap-color, 30%)) {\n\n  .mat-calendar-body-in-range::before {\n    background: $range-color;\n  }\n\n  .mat-calendar-body-comparison-identical,\n  .mat-calendar-body-in-comparison-range::before {\n    background: $comparison-color;\n  }\n\n  .mat-calendar-body-comparison-bridge-start::before,\n  [dir='rtl'] .mat-calendar-body-comparison-bridge-end::before {\n    background: linear-gradient(to right, $range-color 50%, $comparison-color 50%);\n  }\n\n  .mat-calendar-body-comparison-bridge-end::before,\n  [dir='rtl'] .mat-calendar-body-comparison-bridge-start::before {\n    background: linear-gradient(to left, $range-color 50%, $comparison-color 50%);\n  }\n\n  .mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\n  .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n    background: $overlap-color;\n  }\n\n  .mat-calendar-body-comparison-identical.mat-calendar-body-selected,\n  .mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n    background: $overlap-selected-color;\n  }\n}\n\n@mixin _mat-datepicker-density($config-or-theme) {}\n\n@mixin mat-datepicker-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-datepicker') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-datepicker-color($color);\n    }\n    @if $density != null {\n      @include _mat-datepicker-density($density);\n    }\n    @if $typography != null {\n      @include mat-datepicker-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n@mixin mat-dialog-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-dialog-container {\n    @include _mat-theme-elevation(24, $config);\n    background: mat-color($background, dialog);\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-dialog-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-dialog-title {\n    @include mat-typography-level-to-styles($config, title);\n  }\n}\n\n@mixin _mat-dialog-density($config-or-theme) {}\n\n@mixin mat-dialog-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-dialog') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-dialog-color($color);\n    }\n    @if $density != null {\n      @include _mat-dialog-density($density);\n    }\n    @if $typography != null {\n      @include mat-dialog-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n// Default minimum and maximum height for collapsed panel headers.\n$mat-expansion-panel-header-collapsed-height: 48px !default;\n$mat-expansion-panel-header-collapsed-minimum-height: 36px !default;\n$mat-expansion-panel-header-collapsed-maximum-height:\n    $mat-expansion-panel-header-collapsed-height !default;\n\n// Default minimum and maximum height for expanded panel headers.\n$mat-expansion-panel-header-expanded-height: 64px !default;\n$mat-expansion-panel-header-expanded-minimum-height: 48px !default;\n$mat-expansion-panel-header-expanded-maximum-height:\n    $mat-expansion-panel-header-expanded-height !default;\n\n// Density configuration for the expansion panel. Captures the\n// height for both expanded and collapsed panel headers.\n$mat-expansion-panel-header-density-config: (\n  collapsed-height: (\n    default: $mat-expansion-panel-header-collapsed-height,\n    maximum: $mat-expansion-panel-header-collapsed-maximum-height,\n    minimum: $mat-expansion-panel-header-collapsed-minimum-height,\n  ),\n  expanded-height: (\n    default: $mat-expansion-panel-header-expanded-height,\n    maximum: $mat-expansion-panel-header-expanded-maximum-height,\n    minimum: $mat-expansion-panel-header-expanded-minimum-height,\n  )\n) !default;\n\n// Note: Keep this in sync with the animation timing for the toggle indicator\n// and body expansion. These are animated using Angular animations.\n$mat-expansion-panel-header-transition: 225ms cubic-bezier(0.4, 0, 0.2, 1);\n\n\n@mixin mat-expansion-panel-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-expansion-panel {\n    @include _mat-theme-overridable-elevation(2, $config);\n    background: mat-color($background, card);\n    color: mat-color($foreground, text);\n  }\n\n  .mat-action-row {\n    border-top-color: mat-color($foreground, divider);\n  }\n\n  .mat-expansion-panel {\n    & .mat-expansion-panel-header.cdk-keyboard-focused,\n    & .mat-expansion-panel-header.cdk-program-focused,\n    &:not(.mat-expanded) .mat-expansion-panel-header:hover {\n      &:not([aria-disabled='true']) {\n        background: mat-color($background, hover);\n      }\n    }\n  }\n\n  // Disable the hover on touch devices since it can appear like it is stuck. We can't use\n  // `@media (hover)` above, because the desktop support browser support isn't great.\n  @media (hover: none) {\n    .mat-expansion-panel:not(.mat-expanded):not([aria-disabled='true'])\n      .mat-expansion-panel-header:hover {\n      background: mat-color($background, card);\n    }\n  }\n\n  .mat-expansion-panel-header-title {\n    color: mat-color($foreground, text);\n  }\n\n  .mat-expansion-panel-header-description,\n  .mat-expansion-indicator::after {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-expansion-panel-header[aria-disabled='true'] {\n    color: mat-color($foreground, disabled-button);\n\n    .mat-expansion-panel-header-title,\n    .mat-expansion-panel-header-description {\n      color: inherit;\n    }\n  }\n}\n\n@mixin mat-expansion-panel-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-expansion-panel-header {\n    font: {\n      family: mat-font-family($config, subheading-1);\n      size: mat-font-size($config, subheading-1);\n      weight: mat-font-weight($config, subheading-1);\n    }\n  }\n\n  .mat-expansion-panel-content {\n    @include mat-typography-level-to-styles($config, body-1);\n  }\n}\n\n@mixin _mat-expansion-panel-density($config-or-theme) {\n  $density-scale: mat-get-density-config($config-or-theme);\n  $expanded-height: _mat-density-prop-value(\n        $mat-expansion-panel-header-density-config, $density-scale, expanded-height);\n  $collapsed-height: _mat-density-prop-value(\n      $mat-expansion-panel-header-density-config, $density-scale, collapsed-height);\n\n  @include _mat-density-legacy-compatibility() {\n    .mat-expansion-panel-header {\n      height: $collapsed-height;\n\n      &.mat-expanded {\n        height: $expanded-height;\n      }\n    }\n  }\n}\n\n@mixin mat-expansion-panel-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-expansion-panel') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-expansion-panel-color($color);\n    }\n    @if $density != null {\n      @include _mat-expansion-panel-density($density);\n    }\n    @if $typography != null {\n      @include mat-expansion-panel-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n// This mixin will ensure that lines that overflow the container will hide the overflow and\n// truncate neatly with an ellipsis.\n@mixin mat-truncate-line() {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n// Mixin to provide all mat-line styles, changing secondary font size based on whether the list\n// is in dense mode.\n@mixin mat-line-base($secondary-font-size) {\n  .mat-line {\n    @include mat-truncate-line();\n    display: block;\n    box-sizing: border-box;\n\n    // all lines but the top line should have smaller text\n    &:nth-child(n+2) {\n      font-size: $secondary-font-size;\n    }\n  }\n}\n\n// This mixin normalizes default element styles, e.g. font weight for heading text.\n@mixin mat-normalize-text() {\n  & > * {\n    margin: 0;\n    padding: 0;\n    font-weight: normal;\n    font-size: inherit;\n  }\n}\n\n// This mixin provides base styles for the wrapper around mat-line elements in a list.\n@mixin mat-line-wrapper-base() {\n  @include mat-normalize-text();\n\n  display: flex;\n  flex-direction: column;\n  flex: auto;\n  box-sizing: border-box;\n  overflow: hidden;\n\n  // Must remove wrapper when lines are empty or it takes up horizontal\n  // space and pushes other elements to the right.\n  &:empty {\n    display: none;\n  }\n}\n\n\n\n// Include this empty mixin for consistency with the other components.\n@mixin mat-grid-list-color($config-or-theme) {}\n\n@mixin mat-grid-list-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-grid-tile-header,\n  .mat-grid-tile-footer {\n    @include mat-line-base(mat-font-size($config, caption));\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n@mixin _mat-grid-list-density($config-or-theme) {}\n\n@mixin mat-grid-list-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-grid-list') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-grid-list-color($color);\n    }\n    @if $density != null {\n      @include _mat-grid-list-density($density);\n    }\n    @if $typography != null {\n      @include mat-grid-list-typography($typography);\n    }\n  }\n}\n\n\n\n\n@mixin mat-icon-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-icon {\n    &.mat-primary {\n      color: mat-color($primary, text);\n    }\n\n    &.mat-accent {\n      color: mat-color($accent, text);\n    }\n\n    &.mat-warn {\n      color: mat-color($warn, text);\n    }\n  }\n}\n\n@mixin mat-icon-typography($config-or-theme) {}\n\n@mixin _mat-icon-density($config-or-theme) {}\n\n@mixin mat-icon-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-icon') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-icon-color($color);\n    }\n    @if $density != null {\n      @include _mat-icon-density($density);\n    }\n    @if $typography != null {\n      @include mat-icon-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n// Renders a gradient for showing the dashed line when the input is disabled.\n// Unlike using a border, a gradient allows us to adjust the spacing of the dotted line\n// to match the Material Design spec.\n@mixin mat-control-disabled-underline($color) {\n  background-image: linear-gradient(to right, $color 0%, $color 33%, transparent 0%);\n  background-size: 4px 100%;\n  background-repeat: repeat-x;\n}\n\n// Figures out the color of the placeholder for a form control.\n// Used primarily to prevent the various form controls from\n// becoming out of sync since these colors aren't in a palette.\n@function _mat-control-placeholder-color($config) {\n  $foreground: map-get($config, foreground);\n  $is-dark-theme: map-get($config, is-dark);\n  @return mat-color($foreground, secondary-text, if($is-dark-theme, 0.5, 0.42));\n}\n\n\n/* stylelint-disable material/no-prefixes */\n@mixin user-select($value) {\n  -webkit-user-select: $value;\n  -moz-user-select: $value;\n  -ms-user-select: $value;\n  user-select: $value;\n}\n\n@mixin input-placeholder {\n  &::placeholder {\n    @content;\n  }\n\n  &::-moz-placeholder {\n    @content;\n  }\n\n  &::-webkit-input-placeholder {\n    @content;\n  }\n\n  &:-ms-input-placeholder {\n    @content;\n  }\n}\n\n@mixin cursor-grab {\n  cursor: -webkit-grab;\n  cursor: grab;\n}\n\n@mixin cursor-grabbing {\n  cursor: -webkit-grabbing;\n  cursor: grabbing;\n}\n\n@mixin backface-visibility($value) {\n  -webkit-backface-visibility: $value;\n  backface-visibility: $value;\n}\n\n@mixin position-sticky {\n  position: -webkit-sticky;\n  position: sticky;\n}\n/* stylelint-enable */\n\n\n\n@mixin mat-input-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $foreground: map-get($config, foreground);\n\n  .mat-form-field-type-mat-native-select .mat-form-field-infix::after {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-input-element:disabled,\n  .mat-form-field-type-mat-native-select.mat-form-field-disabled .mat-form-field-infix::after {\n    color: mat-color($foreground, disabled-text);\n  }\n\n  .mat-input-element {\n    caret-color: mat-color($primary, text);\n\n    @include input-placeholder {\n      color: _mat-control-placeholder-color($config);\n    }\n\n    // On dark themes we set the native `select` color to some shade of white,\n    // however the color propagates to all of the `option` elements, which are\n    // always on a white background inside the dropdown, causing them to blend in.\n    // Since we can't change background of the dropdown, we need to explicitly\n    // reset the color of the options to something dark.\n    @if (map-get($config, is-dark)) {\n      option {\n        color: $dark-primary-text;\n      }\n\n      option:disabled {\n        color: $dark-disabled-text;\n      }\n    }\n  }\n\n  .mat-form-field.mat-accent .mat-input-element {\n    caret-color: mat-color($accent, text);\n  }\n\n  .mat-form-field.mat-warn .mat-input-element,\n  .mat-form-field-invalid .mat-input-element {\n    caret-color: mat-color($warn, text);\n  }\n\n  .mat-form-field-type-mat-native-select.mat-form-field-invalid .mat-form-field-infix::after {\n    color: mat-color($warn, text);\n  }\n}\n\n@mixin mat-input-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n\n  // The amount of space between the top of the line and the top of the actual text\n  // (as a fraction of the font-size).\n  $line-spacing: ($line-height - 1) / 2;\n\n  // <input> elements seem to have their height set slightly too large on Safari causing the text to\n  // be misaligned w.r.t. the placeholder. Adding this margin corrects it.\n  input.mat-input-element {\n    margin-top: -$line-spacing * 1em;\n  }\n}\n\n@mixin _mat-input-density($config-or-theme) {}\n\n@mixin mat-input-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-input') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-input-color($color);\n    }\n    @if $density != null {\n      @include _mat-input-density($density);\n    }\n    @if $typography != null {\n      @include mat-input-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n@mixin mat-list-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-list-base {\n    .mat-list-item {\n      color: mat-color($foreground, text);\n    }\n\n    .mat-list-option {\n      color: mat-color($foreground, text);\n    }\n\n    .mat-subheader {\n      color: mat-color($foreground, secondary-text);\n    }\n  }\n\n  .mat-list-item-disabled {\n    background-color: mat-color($background, disabled-list-option);\n  }\n\n  .mat-list-option,\n  .mat-nav-list .mat-list-item,\n  .mat-action-list .mat-list-item {\n    &:hover, &:focus {\n      background: mat-color($background, 'hover');\n    }\n  }\n\n  .mat-list-single-selected-option {\n    &, &:hover, &:focus {\n      background: mat-color($background, hover, 0.12);\n    }\n  }\n}\n\n@mixin mat-list-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  $font-family: mat-font-family($config);\n\n  .mat-list-item {\n    font-family: $font-family;\n  }\n\n  .mat-list-option {\n    font-family: $font-family;\n  }\n\n  // Default list\n  .mat-list-base {\n    .mat-list-item {\n      font-size: mat-font-size($config, subheading-2);\n      @include mat-line-base(mat-font-size($config, body-1));\n    }\n\n    .mat-list-option {\n      font-size: mat-font-size($config, subheading-2);\n      @include mat-line-base(mat-font-size($config, body-1));\n    }\n\n    .mat-subheader {\n      font-family: mat-font-family($config, body-2);\n      font-size: mat-font-size($config, body-2);\n      font-weight: mat-font-weight($config, body-2);\n    }\n  }\n\n  // Dense list\n  .mat-list-base[dense] {\n    .mat-list-item {\n      font-size: mat-font-size($config, caption);\n      @include mat-line-base(mat-font-size($config, caption));\n    }\n\n    .mat-list-option {\n      font-size: mat-font-size($config, caption);\n      @include mat-line-base(mat-font-size($config, caption));\n    }\n\n    .mat-subheader {\n      font-family: $font-family;\n      font-size: mat-font-size($config, caption);\n      font-weight: mat-font-weight($config, body-2);\n    }\n  }\n}\n\n@mixin _mat-list-density($config-or-theme) {}\n\n@mixin mat-list-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-list') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-list-color($color);\n    }\n    @if $density != null {\n      @include _mat-list-density($density);\n    }\n    @if $typography != null {\n      @include mat-list-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n@mixin mat-menu-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-menu-panel {\n    @include _mat-theme-overridable-elevation(4, $config);\n    background: mat-color($background, 'card');\n  }\n\n  .mat-menu-item {\n    background: transparent;\n    color: mat-color($foreground, 'text');\n\n    &[disabled] {\n      &, &::after {\n        color: mat-color($foreground, 'disabled');\n      }\n    }\n  }\n\n  .mat-menu-item .mat-icon-no-color,\n  .mat-menu-item-submenu-trigger::after {\n    color: mat-color($foreground, 'icon');\n  }\n\n  .mat-menu-item:hover,\n  .mat-menu-item.cdk-program-focused,\n  .mat-menu-item.cdk-keyboard-focused,\n  .mat-menu-item-highlighted {\n    &:not([disabled]) {\n      background: mat-color($background, 'hover');\n    }\n  }\n}\n\n@mixin mat-menu-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-menu-item {\n    font: {\n      family: mat-font-family($config, body-1);\n      size: mat-font-size($config, body-1);\n      weight: mat-font-weight($config, body-1);\n    }\n  }\n}\n\n@mixin _mat-menu-density($config-or-theme) {}\n\n@mixin mat-menu-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-menu') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-menu-color($color);\n    }\n    @if $density != null {\n      @include _mat-menu-density($density);\n    }\n    @if $typography != null {\n      @include mat-menu-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n$mat-paginator-height: 56px !default;\n// Minimum height for paginator's in the highest density is determined based on how\n// much the paginator can shrink until the content exceeds (i.e. navigation buttons).\n$mat-paginator-minimum-height: 40px !default;\n$mat-paginator-maximum-height: $mat-paginator-height !default;\n\n$mat-paginator-density-config: (\n  height: (\n    default: $mat-paginator-height,\n    maximum: $mat-paginator-maximum-height,\n    minimum: $mat-paginator-minimum-height,\n  )\n) !default;\n\n\n@mixin mat-paginator-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $background: map-get($config, background);\n\n  .mat-paginator {\n    background: mat-color($background, 'card');\n  }\n\n  .mat-paginator,\n  .mat-paginator-page-size .mat-select-trigger {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-paginator-decrement,\n  .mat-paginator-increment {\n    border-top: 2px solid mat-color($foreground, 'icon');\n    border-right: 2px solid mat-color($foreground, 'icon');\n  }\n\n  .mat-paginator-first,\n  .mat-paginator-last {\n    border-top: 2px solid mat-color($foreground, 'icon');\n  }\n\n  .mat-icon-button[disabled] {\n    .mat-paginator-decrement,\n    .mat-paginator-increment,\n    .mat-paginator-first,\n    .mat-paginator-last {\n      border-color: mat-color($foreground, 'disabled');\n    }\n  }\n}\n\n@mixin mat-paginator-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-paginator,\n  .mat-paginator-page-size .mat-select-trigger {\n    font: {\n      family: mat-font-family($config, caption);\n      size: mat-font-size($config, caption);\n    }\n  }\n}\n\n@mixin _mat-paginator-density($config-or-theme) {\n  $density-scale: mat-get-density-config($config-or-theme);\n  $height: _mat-density-prop-value($mat-paginator-density-config, $density-scale, height);\n\n  @include _mat-density-legacy-compatibility() {\n    .mat-paginator-container {\n      min-height: $height;\n    }\n  }\n}\n\n@mixin mat-paginator-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-paginator') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-paginator-color($color);\n    }\n    @if $density != null {\n      @include _mat-paginator-density($density);\n    }\n    @if $typography != null {\n      @include mat-paginator-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-progress-bar-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n\n  .mat-progress-bar-background {\n    fill: mat-color($primary, lighter);\n  }\n\n  .mat-progress-bar-buffer {\n    background-color: mat-color($primary, lighter);\n  }\n\n  .mat-progress-bar-fill::after {\n    background-color: mat-color($primary);\n  }\n\n  .mat-progress-bar.mat-accent {\n    .mat-progress-bar-background {\n      fill: mat-color($accent, lighter);\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: mat-color($accent, lighter);\n    }\n\n    .mat-progress-bar-fill::after {\n      background-color: mat-color($accent);\n    }\n  }\n\n  .mat-progress-bar.mat-warn {\n    .mat-progress-bar-background {\n      fill: mat-color($warn, lighter);\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: mat-color($warn, lighter);\n    }\n\n    .mat-progress-bar-fill::after {\n      background-color: mat-color($warn);\n    }\n  }\n}\n\n@mixin mat-progress-bar-typography($config-or-theme) {}\n\n@mixin _mat-progress-bar-density($config-or-theme) {}\n\n@mixin mat-progress-bar-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-progress-bar') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-progress-bar-color($color);\n    }\n    @if $density != null {\n      @include _mat-progress-bar-density($density);\n    }\n    @if $typography != null {\n      @include mat-progress-bar-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin mat-progress-spinner-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n\n  .mat-progress-spinner, .mat-spinner {\n    circle {\n      stroke: mat-color($primary);\n    }\n\n    &.mat-accent circle {\n      stroke: mat-color($accent);\n    }\n\n    &.mat-warn circle {\n      stroke: mat-color($warn);\n    }\n  }\n}\n\n@mixin mat-progress-spinner-typography($config-or-theme) {}\n\n@mixin _mat-progress-spinner-density($config-or-theme) {}\n\n@mixin mat-progress-spinner-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-progress-spinner') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-progress-spinner-color($color);\n    }\n    @if $density != null {\n      @include _mat-progress-spinner-density($density);\n    }\n    @if $typography != null {\n      @include mat-progress-spinner-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin _mat-radio-color($palette) {\n  &.mat-radio-checked .mat-radio-outer-circle {\n    border-color: mat-color($palette);\n  }\n\n  .mat-radio-inner-circle,\n  .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),\n  &.mat-radio-checked .mat-radio-persistent-ripple,\n  &:active .mat-radio-persistent-ripple {\n    background-color: mat-color($palette);\n  }\n}\n\n@mixin mat-radio-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-radio-outer-circle {\n    border-color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-radio-button {\n    &.mat-primary {\n      @include _mat-radio-color($primary);\n    }\n\n    &.mat-accent {\n      @include _mat-radio-color($accent);\n    }\n\n    &.mat-warn {\n      @include _mat-radio-color($warn);\n    }\n\n    // This needs extra specificity, because the classes above are combined\n    // (e.g. `.mat-radio-button.mat-accent`) which increases their specificity a lot.\n    // TODO: consider making the selectors into descendants (`.mat-primary .mat-radio-button`).\n    &.mat-radio-disabled {\n      &.mat-radio-checked .mat-radio-outer-circle,\n      .mat-radio-outer-circle {\n        border-color: mat-color($foreground, disabled);\n      }\n\n      .mat-radio-ripple .mat-ripple-element,\n      .mat-radio-inner-circle {\n        background-color: mat-color($foreground, disabled);\n      }\n\n      .mat-radio-label-content {\n        color: mat-color($foreground, disabled);\n      }\n    }\n\n    // Switch this to a solid color since we're using `opacity`\n    // to control how opaque the ripple should be.\n    .mat-ripple-element {\n      background-color: map-get($foreground, base);\n    }\n  }\n}\n\n@mixin mat-radio-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-radio-button {\n    font-family: mat-font-family($config);\n  }\n}\n\n@mixin _mat-radio-density($config-or-theme) {}\n\n@mixin mat-radio-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-radio') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-radio-color($color);\n    }\n    @if $density != null {\n      @include _mat-radio-density($density);\n    }\n    @if $typography != null {\n      @include mat-radio-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n\n@mixin mat-select-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $background: map-get($config, background);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n\n  .mat-select-value {\n    color: mat-color($foreground, text);\n  }\n\n  .mat-select-placeholder {\n    color: _mat-control-placeholder-color($config);\n  }\n\n  .mat-select-disabled .mat-select-value {\n    color: mat-color($foreground, disabled-text);\n  }\n\n  .mat-select-arrow {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-select-panel {\n    background: mat-color($background, card);\n    @include _mat-theme-overridable-elevation(4, $config);\n\n    .mat-option.mat-selected:not(.mat-option-multiple) {\n      background: mat-color($background, hover, 0.12);\n    }\n  }\n\n  .mat-form-field {\n    &.mat-focused {\n      &.mat-primary .mat-select-arrow {\n        color: mat-color($primary, text);\n      }\n\n      &.mat-accent .mat-select-arrow {\n        color: mat-color($accent, text);\n      }\n\n      &.mat-warn .mat-select-arrow {\n        color: mat-color($warn, text);\n      }\n    }\n\n    .mat-select.mat-select-invalid .mat-select-arrow {\n      color: mat-color($warn, text);\n    }\n\n    .mat-select.mat-select-disabled .mat-select-arrow {\n      color: mat-color($foreground, disabled-text);\n    }\n  }\n}\n\n@mixin mat-select-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n\n  .mat-select {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-select-trigger {\n    height: $line-height * 1em;\n  }\n}\n\n@mixin _mat-select-density($config-or-theme) {}\n\n@mixin mat-select-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-select') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-select-color($color);\n    }\n    @if $density != null {\n      @include _mat-select-density($density);\n    }\n    @if $typography != null {\n      @include mat-select-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin mat-sidenav-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  $drawer-background-color: mat-color($background, dialog);\n  $drawer-container-background-color:  mat-color($background, background);\n  $drawer-push-background-color: mat-color($background, dialog);\n  $drawer-side-border: solid 1px mat-color($foreground, divider);\n\n  .mat-drawer-container {\n    background-color: $drawer-container-background-color;\n    color: mat-color($foreground, text);\n  }\n\n  .mat-drawer {\n    background-color: $drawer-background-color;\n    color: mat-color($foreground, text);\n\n    &.mat-drawer-push {\n      background-color: $drawer-push-background-color;\n    }\n\n    &:not(.mat-drawer-side) {\n      // The elevation of z-16 is noted in the design specifications.\n      // See https://material.io/design/components/navigation-drawer.html\n      @include _mat-theme-elevation(16, $config);\n    }\n  }\n\n  .mat-drawer-side {\n    border-right: $drawer-side-border;\n\n    &.mat-drawer-end {\n      border-left: $drawer-side-border;\n      border-right: none;\n    }\n  }\n\n  [dir='rtl'] .mat-drawer-side {\n    border-left: $drawer-side-border;\n    border-right: none;\n\n    &.mat-drawer-end {\n      border-left: none;\n      border-right: $drawer-side-border;\n    }\n  }\n\n  .mat-drawer-backdrop.mat-drawer-shown {\n    $opacity: 0.6;\n    $backdrop-color: mat-color($background, card, $opacity);\n\n    @if (type-of($backdrop-color) == color) {\n      // We use invert() here to have the darken the background color expected to be used. If the\n      // background is light, we use a dark backdrop. If the background is dark,\n      // we use a light backdrop.\n      background-color: invert($backdrop-color);\n    }\n    @else {\n      // If we couldn't resolve the backdrop color to a color value, fall back to using\n      // `opacity` to make it opaque since its end value could be a solid color.\n      background-color: $backdrop-color;\n      opacity: $opacity;\n    }\n  }\n}\n\n@mixin mat-sidenav-typography($config-or-theme) {}\n\n@mixin _mat-sidenav-density($config-or-theme) {}\n\n@mixin mat-sidenav-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-sidenav') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-sidenav-color($color);\n    }\n    @if $density != null {\n      @include _mat-sidenav-density($density);\n    }\n    @if $typography != null {\n      @include mat-sidenav-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n@mixin _mat-slide-toggle-checked($palette, $thumb-checked-hue) {\n  &.mat-checked {\n    .mat-slide-toggle-thumb {\n      background-color: mat-color($palette, $thumb-checked-hue);\n    }\n\n    .mat-slide-toggle-bar {\n      // Opacity is determined from the specs for the selection controls.\n      // See: https://material.io/design/components/selection-controls.html#specs\n      background-color: mat-color($palette, $thumb-checked-hue, 0.54);\n    }\n\n    .mat-ripple-element {\n      // Set no opacity for the ripples because the ripple opacity will be adjusted dynamically\n      // based on the type of interaction with the slide-toggle (e.g. for hover, focus)\n      background-color: mat-color($palette, $thumb-checked-hue);\n    }\n  }\n}\n\n@mixin mat-slide-toggle-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $is-dark: map-get($config, is-dark);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  // Color hues are based on the specs which briefly show the hues that are applied to a switch.\n  // The 2018 specs no longer describe how dark switches should look like. Due to the lack of\n  // information for dark themed switches, we partially keep the old behavior that is based on\n  // the previous specifications. For the checked color we always use the `default` hue because\n  // that follows MDC and also makes it easier for people to create a custom theme without needing\n  // to specify each hue individually.\n  $thumb-unchecked-hue: if($is-dark, 400, 50);\n  $thumb-checked-hue: default;\n\n  $bar-unchecked-color: mat-color($foreground, disabled);\n  $ripple-unchecked-color: mat-color($foreground, base);\n\n  .mat-slide-toggle {\n    @include _mat-slide-toggle-checked($accent, $thumb-checked-hue);\n\n    &.mat-primary {\n      @include _mat-slide-toggle-checked($primary, $thumb-checked-hue);\n    }\n\n    &.mat-warn {\n      @include _mat-slide-toggle-checked($warn, $thumb-checked-hue);\n    }\n\n    &:not(.mat-checked) .mat-ripple-element {\n      // Set no opacity for the ripples because the ripple opacity will be adjusted dynamically\n      // based on the type of interaction with the slide-toggle (e.g. for hover, focus)\n      background-color: $ripple-unchecked-color;\n    }\n  }\n\n  .mat-slide-toggle-thumb {\n    @include _mat-theme-elevation(1, $config);\n    background-color: mat-color($mat-grey, $thumb-unchecked-hue);\n  }\n\n  .mat-slide-toggle-bar {\n    background-color: $bar-unchecked-color;\n  }\n}\n\n@mixin mat-slide-toggle-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-slide-toggle-content {\n    font-family: mat-font-family($config);\n  }\n}\n\n@mixin _mat-slide-toggle-density($config-or-theme) {}\n\n@mixin mat-slide-toggle-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-slide-toggle') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-slide-toggle-color($color);\n    }\n    @if $density != null {\n      @include _mat-slide-toggle-density($density);\n    }\n    @if $typography != null {\n      @include mat-slide-toggle-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n@mixin _mat-slider-inner-content-theme($palette) {\n  .mat-slider-track-fill,\n  .mat-slider-thumb,\n  .mat-slider-thumb-label {\n    background-color: mat-color($palette);\n  }\n\n  .mat-slider-thumb-label-text {\n    color: mat-color($palette, default-contrast);\n  }\n\n  .mat-slider-focus-ring {\n    $opacity: 0.2;\n    $color: mat-color($palette, default, $opacity);\n    background-color: $color;\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (type-of($color) != color) {\n      opacity: $opacity;\n    }\n  }\n}\n\n@mixin mat-slider-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  $mat-slider-off-color: mat-color($foreground, slider-off);\n  $mat-slider-off-focused-color: mat-color($foreground, slider-off-active);\n  $mat-slider-disabled-color: mat-color($foreground, slider-off);\n  $mat-slider-labeled-min-value-thumb-color: mat-color($foreground, slider-min);\n  $mat-slider-labeled-min-value-thumb-label-color: mat-color($foreground, slider-off);\n  $mat-slider-tick-opacity: 0.7;\n  $mat-slider-tick-color: mat-color($foreground, base, $mat-slider-tick-opacity);\n  $mat-slider-tick-size: 2px;\n\n  .mat-slider-track-background {\n    background-color: $mat-slider-off-color;\n  }\n\n  .mat-primary {\n    @include _mat-slider-inner-content-theme($primary);\n  }\n\n  .mat-accent {\n    @include _mat-slider-inner-content-theme($accent);\n  }\n\n  .mat-warn {\n    @include _mat-slider-inner-content-theme($warn);\n  }\n\n  .mat-slider:hover,\n  .cdk-focused {\n    .mat-slider-track-background {\n      background-color: $mat-slider-off-focused-color;\n    }\n  }\n\n  .mat-slider-disabled {\n    .mat-slider-track-background,\n    .mat-slider-track-fill,\n    .mat-slider-thumb {\n      background-color: $mat-slider-disabled-color;\n    }\n\n    &:hover {\n      .mat-slider-track-background {\n        background-color: $mat-slider-disabled-color;\n      }\n    }\n  }\n\n  .mat-slider-min-value {\n    .mat-slider-focus-ring {\n      $opacity: 0.12;\n      $color: mat-color($foreground, base, $opacity);\n      background-color: $color;\n\n      // `mat-color` uses `rgba` for the opacity which won't work with\n      // CSS variables so we need to use `opacity` as a fallback.\n      @if (type-of($color) != color) {\n        opacity: $opacity;\n      }\n    }\n\n    &.mat-slider-thumb-label-showing {\n      .mat-slider-thumb,\n      .mat-slider-thumb-label {\n        background-color: $mat-slider-labeled-min-value-thumb-color;\n      }\n\n      &.cdk-focused {\n        .mat-slider-thumb,\n        .mat-slider-thumb-label {\n          background-color: $mat-slider-labeled-min-value-thumb-label-color;\n        }\n      }\n    }\n\n    &:not(.mat-slider-thumb-label-showing) {\n      .mat-slider-thumb {\n        border-color: $mat-slider-off-color;\n        background-color: transparent;\n      }\n\n      &:hover,\n      &.cdk-focused {\n        .mat-slider-thumb {\n          border-color: $mat-slider-off-focused-color;\n        }\n\n        &.mat-slider-disabled .mat-slider-thumb {\n          border-color: $mat-slider-disabled-color;\n        }\n      }\n    }\n  }\n\n  .mat-slider-has-ticks .mat-slider-wrapper::after {\n    border-color: $mat-slider-tick-color;\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n\n  .mat-slider-horizontal .mat-slider-ticks {\n    background-image: repeating-linear-gradient(to right, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n    // Firefox doesn't draw the gradient correctly with 'to right'\n    // (see https://bugzilla.mozilla.org/show_bug.cgi?id=1314319).\n    background-image: -moz-repeating-linear-gradient(0.0001deg, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n\n  .mat-slider-vertical .mat-slider-ticks {\n    background-image: repeating-linear-gradient(to bottom, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n}\n\n@mixin mat-slider-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-slider-thumb-label-text {\n    font: {\n      family: mat-font-family($config);\n      size: mat-font-size($config, caption);\n      weight: mat-font-weight($config, body-2);\n    }\n  }\n}\n\n@mixin _mat-slider-density($config-or-theme) {}\n\n@mixin mat-slider-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-slider') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-slider-color($color);\n    }\n    @if $density != null {\n      @include _mat-slider-density($density);\n    }\n    @if $typography != null {\n      @include mat-slider-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n$mat-stepper-header-height: 72px !default;\n// Minimum height for highest density stepper's is determined based on how much\n// stepper headers can shrink until the step icon or step label exceed. We can't use\n// a value below `42px` because the optional label for steps would otherwise exceed.\n$mat-stepper-header-minimum-height: 42px !default;\n$mat-stepper-header-maximum-height: $mat-stepper-header-height !default;\n\n$mat-stepper-density-config: (\n  height: (\n    default: $mat-stepper-header-height,\n    maximum: $mat-stepper-header-maximum-height,\n    minimum: $mat-stepper-header-minimum-height,\n  )\n) !default;\n\n// Note: These variables are not denoted with `!default` because they are used in the non-theme\n// component styles. Modifying these variables does not have the desired effect for consumers.\n$mat-stepper-label-header-height: 24px;\n$mat-stepper-label-position-bottom-top-gap: 16px;\n$mat-stepper-label-min-width: 50px;\n\n$mat-vertical-stepper-content-margin: 36px;\n\n$mat-stepper-side-gap: 24px;\n$mat-stepper-line-width: 1px;\n$mat-stepper-line-gap: 8px;\n\n$mat-step-sub-label-font-size: 12px;\n$mat-step-header-icon-size: 16px;\n\n\n@mixin mat-stepper-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $background: map-get($config, background);\n  $primary: map-get($config, primary);\n  $warn: map-get($config, warn);\n\n  .mat-step-header {\n    &.cdk-keyboard-focused,\n    &.cdk-program-focused,\n    &:hover {\n      background-color: mat-color($background, hover);\n    }\n\n    // On touch devices the :hover state will linger on the element after a tap.\n    // Reset it via `@media` after the declaration, because the media query isn't\n    // supported by all browsers yet.\n    @media (hover: none) {\n      &:hover {\n        background: none;\n      }\n    }\n\n    .mat-step-label,\n    .mat-step-optional {\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\n      // instead of secondary-text.\n      color: mat-color($foreground, secondary-text);\n    }\n\n    .mat-step-icon {\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\n      // instead of secondary-text.\n      background-color: mat-color($foreground, secondary-text);\n      color: mat-color($primary, default-contrast);\n    }\n\n    .mat-step-icon-selected,\n    .mat-step-icon-state-done,\n    .mat-step-icon-state-edit {\n      background-color: mat-color($primary);\n      color: mat-color($primary, default-contrast);\n    }\n\n    .mat-step-icon-state-error {\n      background-color: transparent;\n      color: mat-color($warn, text);\n    }\n\n    .mat-step-label.mat-step-label-active {\n      color: mat-color($foreground, text);\n    }\n\n    .mat-step-label.mat-step-label-error {\n      color: mat-color($warn, text);\n    }\n  }\n\n  .mat-stepper-horizontal, .mat-stepper-vertical {\n    background-color: mat-color($background, card);\n  }\n\n  .mat-stepper-vertical-line::before {\n    border-left-color: mat-color($foreground, divider);\n  }\n\n  .mat-horizontal-stepper-header::before,\n  .mat-horizontal-stepper-header::after,\n  .mat-stepper-horizontal-line {\n    border-top-color: mat-color($foreground, divider);\n  }\n}\n\n@mixin mat-stepper-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-stepper-vertical, .mat-stepper-horizontal {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-step-label {\n    font: {\n      size: mat-font-size($config, body-1);\n      weight: mat-font-weight($config, body-1);\n    };\n  }\n\n  .mat-step-sub-label-error {\n    font-weight: normal;\n  }\n\n  .mat-step-label-error {\n    font-size: mat-font-size($config, body-2);\n  }\n\n  .mat-step-label-selected {\n    font: {\n      size: mat-font-size($config, body-2);\n      weight: mat-font-weight($config, body-2);\n    };\n  }\n}\n\n@mixin _mat-stepper-density($config-or-theme) {\n  $density-scale: mat-get-density-config($config-or-theme);\n  $height: _mat-density-prop-value($mat-stepper-density-config, $density-scale, height);\n  $vertical-padding: ($height - $mat-stepper-label-header-height) / 2;\n\n  @include _mat-density-legacy-compatibility() {\n    .mat-horizontal-stepper-header {\n      height: $height;\n    }\n\n    .mat-stepper-label-position-bottom .mat-horizontal-stepper-header,\n    .mat-vertical-stepper-header, {\n      padding: $vertical-padding $mat-stepper-side-gap;\n    }\n\n    // Ensures that the vertical lines for the step content exceed into the step\n    // headers with a given distance (`$mat-stepper-line-gap`) to the step icon.\n    .mat-stepper-vertical-line::before {\n      top: $mat-stepper-line-gap - $vertical-padding;\n      bottom: $mat-stepper-line-gap - $vertical-padding;\n    }\n\n    // Ensures that the horizontal lines for the step header are centered vertically.\n    .mat-stepper-label-position-bottom .mat-horizontal-stepper-header {\n      &::after, &::before {\n        top: $vertical-padding + $mat-stepper-label-header-height / 2;\n      }\n    }\n\n    // Ensures that the horizontal line for the step content is aligned centered vertically.\n    .mat-stepper-label-position-bottom .mat-stepper-horizontal-line {\n      top: $vertical-padding + $mat-stepper-label-header-height / 2;\n    }\n  }\n}\n\n@mixin mat-stepper-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-stepper') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-stepper-color($color);\n    }\n    @if $density != null {\n      @include _mat-stepper-density($density);\n    }\n    @if $typography != null {\n      @include mat-stepper-typography($typography);\n    }\n  }\n}\n\n\n\n\n@mixin mat-sort-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-sort-header-arrow {\n    $table-background: mat-color($background, 'card');\n    $text-color: mat-color($foreground, secondary-text);\n\n    // Because the arrow is made up of multiple elements that are stacked on top of each other,\n    // we can't use the semi-transparent color from the theme directly. If the value is a color\n    // *type*, we convert it into a solid color by taking the opacity from the rgba value and\n    // using the value to determine the percentage of the background to put into foreground\n    // when mixing the colors together. Otherwise, if it resolves to something different\n    // (e.g. it resolves to a CSS variable), we use the color directly.\n    @if (type-of($table-background) == color and type-of($text-color) == color) {\n      $text-opacity: opacity($text-color);\n      color: mix($table-background, rgba($text-color, 1), (1 - $text-opacity) * 100%);\n    }\n    @else {\n      color: $text-color;\n    }\n  }\n}\n\n@mixin mat-sort-typography($config-or-theme) {}\n\n@mixin _mat-sort-density($config-or-theme) {}\n\n@mixin mat-sort-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-sort') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-sort-color($color);\n    }\n    @if $density != null {\n      @include _mat-sort-density($density);\n    }\n    @if $typography != null {\n      @include mat-sort-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin mat-tabs-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n  $header-border: 1px solid mat-color($foreground, divider);\n\n  .mat-tab-nav-bar,\n  .mat-tab-header {\n    border-bottom: $header-border;\n  }\n\n  .mat-tab-group-inverted-header {\n    .mat-tab-nav-bar,\n    .mat-tab-header {\n      border-top: $header-border;\n      border-bottom: none;\n    }\n  }\n\n  .mat-tab-label, .mat-tab-link {\n    color: mat-color($foreground, text);\n\n    &.mat-tab-disabled {\n      color: mat-color($foreground, disabled-text);\n    }\n  }\n\n  .mat-tab-header-pagination-chevron {\n    border-color: mat-color($foreground, text);\n  }\n\n  .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n    border-color: mat-color($foreground, disabled-text);\n  }\n\n  // Remove header border when there is a background color\n  .mat-tab-group[class*='mat-background-'] .mat-tab-header,\n  .mat-tab-nav-bar[class*='mat-background-'] {\n    border-bottom: none;\n    border-top: none;\n  }\n\n  .mat-tab-group, .mat-tab-nav-bar {\n    $theme-colors: (\n      primary: $primary,\n      accent: $accent,\n      warn: $warn\n    );\n\n    @each $name, $color in $theme-colors {\n      // Set the foreground color of the tabs\n      &.mat-#{$name} {\n        @include _mat-tab-label-focus($color);\n        @include _mat-ink-bar($color);\n\n        // Override ink bar when background color is the same\n        &.mat-background-#{$name} {\n          @include _mat-ink-bar($color, default-contrast);\n        }\n      }\n    }\n\n    @each $name, $color in $theme-colors {\n      // Set background color of the tabs and override focus color\n      &.mat-background-#{$name} {\n        @include _mat-tab-label-focus($color);\n        @include _mat-tabs-background($color);\n      }\n    }\n  }\n}\n\n@mixin _mat-ink-bar($color, $hue: default) {\n  .mat-ink-bar {\n    background-color: mat-color($color, $hue);\n  }\n}\n\n@mixin _mat-tab-label-focus($tab-focus-color) {\n  .mat-tab-label,\n  .mat-tab-link {\n    &.cdk-keyboard-focused,\n    &.cdk-program-focused {\n      &:not(.mat-tab-disabled) {\n        background-color: mat-color($tab-focus-color, lighter, 0.3);\n      }\n    }\n  }\n}\n\n@mixin _mat-tabs-background($background-color) {\n  // Set background color for the tab group\n  .mat-tab-header, .mat-tab-links, .mat-tab-header-pagination {\n    background-color: mat-color($background-color);\n  }\n\n  // Set labels to contrast against background\n  .mat-tab-label, .mat-tab-link {\n    color: mat-color($background-color, default-contrast);\n\n    &.mat-tab-disabled {\n      color: mat-color($background-color, default-contrast, 0.4);\n    }\n  }\n\n  // Set pagination chevrons to contrast background\n  .mat-tab-header-pagination-chevron {\n    border-color: mat-color($background-color, default-contrast);\n  }\n\n  .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n    border-color: mat-color($background-color, default-contrast, 0.4);\n  }\n\n  // Set ripples color to be the contrast color of the new background. Otherwise the ripple\n  // color will be based on the app background color.\n  .mat-ripple-element {\n    background-color: mat-color($background-color, default-contrast, 0.12);\n  }\n}\n\n@mixin mat-tabs-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-tab-group {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-tab-label, .mat-tab-link {\n    font: {\n      family: mat-font-family($config, button);\n      size: mat-font-size($config, button);\n      weight: mat-font-weight($config, button);\n    }\n  }\n}\n\n@mixin _mat-tabs-density($config-or-theme) {}\n\n@mixin mat-tabs-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-tabs') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-tabs-color($color);\n    }\n    @if $density != null {\n      @include _mat-tabs-density($density);\n    }\n    @if $typography != null {\n      @include mat-tabs-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n// Minimum height for toolbar's in the highest density is difficult to determine because\n// developers can project arbitrary content. We use a minimum value that ensures that most\n// common content (e.g. icon buttons) does not exceed the row boundaries in highest density.\n$mat-toolbar-minimum-height: 44px !default;\n\n$mat-toolbar-height-desktop: 64px !default;\n$mat-toolbar-maximum-height-desktop: $mat-toolbar-height-desktop !default;\n$mat-toolbar-minimum-height-desktop: $mat-toolbar-minimum-height !default;\n\n$mat-toolbar-height-mobile: 56px !default;\n$mat-toolbar-maximum-height-mobile: $mat-toolbar-height-mobile !default;\n$mat-toolbar-minimum-height-mobile: $mat-toolbar-minimum-height !default;\n\n$mat-toolbar-desktop-density-config: (\n  height: (\n    default: $mat-toolbar-height-desktop,\n    maximum: $mat-toolbar-maximum-height-desktop,\n    minimum: $mat-toolbar-minimum-height-desktop,\n  )\n) !default;\n\n$mat-toolbar-mobile-density-config: (\n  height: (\n    default: $mat-toolbar-height-mobile,\n    maximum: $mat-toolbar-maximum-height-mobile,\n    minimum: $mat-toolbar-minimum-height-mobile,\n  )\n) !default;\n\n\n@mixin _mat-toolbar-height($height) {\n  .mat-toolbar-multiple-rows {\n    min-height: $height;\n  }\n  .mat-toolbar-row, .mat-toolbar-single-row {\n    height: $height;\n  }\n}\n\n@mixin _mat-toolbar-color($palette) {\n  background: mat-color($palette);\n  color: mat-color($palette, default-contrast);\n}\n\n@mixin _mat-toolbar-form-field-overrides {\n  .mat-form-field-underline,\n  .mat-form-field-ripple,\n  .mat-focused .mat-form-field-ripple {\n    background-color: currentColor;\n  }\n\n  .mat-form-field-label,\n  .mat-focused .mat-form-field-label,\n  .mat-select-value,\n  .mat-select-arrow,\n  .mat-form-field.mat-focused .mat-select-arrow {\n    color: inherit;\n  }\n\n  .mat-input-element {\n    caret-color: currentColor;\n  }\n}\n\n@mixin mat-toolbar-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-toolbar {\n    background: mat-color($background, app-bar);\n    color: mat-color($foreground, text);\n\n    &.mat-primary {\n      @include _mat-toolbar-color($primary);\n    }\n\n    &.mat-accent {\n      @include _mat-toolbar-color($accent);\n    }\n\n    &.mat-warn {\n      @include _mat-toolbar-color($warn);\n    }\n\n    @include _mat-toolbar-form-field-overrides;\n  }\n}\n\n@mixin mat-toolbar-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-toolbar,\n  .mat-toolbar h1,\n  .mat-toolbar h2,\n  .mat-toolbar h3,\n  .mat-toolbar h4,\n  .mat-toolbar h5,\n  .mat-toolbar h6 {\n    @include mat-typography-level-to-styles($config, title);\n    margin: 0;\n  }\n}\n\n@mixin _mat-toolbar-density($config-or-theme) {\n  $density-scale: mat-get-density-config($config-or-theme);\n  $height-desktop: _mat-density-prop-value(\n      $mat-toolbar-desktop-density-config, $density-scale, height);\n  $height-mobile: _mat-density-prop-value(\n      $mat-toolbar-mobile-density-config, $density-scale, height);\n\n  @include _mat-density-legacy-compatibility() {\n    // Set the default height for the toolbar.\n    @include _mat-toolbar-height($height-desktop);\n\n    // As per specs, toolbars should have a different height in mobile devices. This has been\n    // specified in the old guidelines and is still observable in the new specifications by\n    // looking at the spec images. See: https://material.io/design/components/app-bars-top.html#anatomy\n    @media ($mat-xsmall) {\n      @include _mat-toolbar-height($height-mobile);\n    }\n  }\n}\n\n@mixin mat-toolbar-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-toolbar') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-toolbar-color($color);\n    }\n    @if $density != null {\n      @include _mat-toolbar-density($density);\n    }\n    @if $typography != null {\n      @include mat-toolbar-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n$mat-tooltip-target-height: 22px;\n$mat-tooltip-font-size: 10px;\n$mat-tooltip-vertical-padding: ($mat-tooltip-target-height - $mat-tooltip-font-size) / 2;\n\n$mat-tooltip-handset-target-height: 30px;\n$mat-tooltip-handset-font-size: 14px;\n$mat-tooltip-handset-vertical-padding:\n    ($mat-tooltip-handset-target-height - $mat-tooltip-handset-font-size) / 2;\n\n@mixin mat-tooltip-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n\n  .mat-tooltip {\n    background: mat-color($background, tooltip, 0.9);\n  }\n}\n\n@mixin mat-tooltip-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-tooltip {\n    font-family: mat-font-family($config);\n    font-size: $mat-tooltip-font-size;\n    padding-top: $mat-tooltip-vertical-padding;\n    padding-bottom: $mat-tooltip-vertical-padding;\n  }\n\n  .mat-tooltip-handset {\n    font-size: $mat-tooltip-handset-font-size;\n    padding-top: $mat-tooltip-handset-vertical-padding;\n    padding-bottom: $mat-tooltip-handset-vertical-padding;\n  }\n}\n\n@mixin _mat-tooltip-density($config-or-theme) {}\n\n@mixin mat-tooltip-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-tooltip') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-tooltip-color($color);\n    }\n    @if $density != null {\n      @include _mat-tooltip-density($density);\n    }\n    @if $typography != null {\n      @include mat-tooltip-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n@mixin mat-snack-bar-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $is-dark-theme: map-get($config, is-dark);\n  $accent: map-get($config, accent);\n\n  .mat-snack-bar-container {\n    // Use the primary text on the dark theme, even though the lighter one uses\n    // a secondary, because the contrast on the light primary text is poor.\n    color: if($is-dark-theme, $dark-primary-text, $light-secondary-text);\n    background: if($is-dark-theme, map-get($mat-grey, 50), #323232);\n\n    @include _mat-theme-elevation(6, $config);\n  }\n\n  .mat-simple-snackbar-action {\n    color: if($is-dark-theme, inherit, mat-color($accent, text));\n  }\n}\n\n@mixin mat-snack-bar-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-simple-snackbar {\n    font: {\n      family: mat-font-family($config, body-1);\n      size: mat-font-size($config, body-1);\n    }\n  }\n\n  .mat-simple-snackbar-action {\n    line-height: 1;\n    font: {\n      family: inherit;\n      size: inherit;\n      weight: mat-font-weight($config, button);\n    }\n  }\n}\n\n@mixin _mat-snack-bar-density($config-or-theme) {}\n\n@mixin mat-snack-bar-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-snack-bar') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-snack-bar-color($color);\n    }\n    @if $density != null {\n      @include _mat-snack-bar-density($density);\n    }\n    @if $typography != null {\n      @include mat-snack-bar-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Theme styles that only apply to the fill appearance of the form-field.\n\n@mixin mat-form-field-fill-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $is-dark-theme: map-get($config, is-dark);\n\n  $fill-background: mat-color($foreground, base, if($is-dark-theme, 0.1, 0.04));\n  $fill-disabled-background: mat-color($foreground, base, if($is-dark-theme, 0.05, 0.02));\n  $underline-color: mat-color($foreground, divider, if($is-dark-theme, 0.5, 0.42));\n  $label-disabled-color: mat-color($foreground, disabled-text);\n\n  .mat-form-field-appearance-fill {\n    .mat-form-field-flex {\n      background-color: $fill-background;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-flex {\n      background-color: $fill-disabled-background;\n    }\n\n    .mat-form-field-underline::before {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled {\n      .mat-form-field-label {\n        color: $label-disabled-color;\n      }\n\n      .mat-form-field-underline::before {\n        background-color: transparent;\n      }\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-fill-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-fill-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-fill-dedupe)\n             scale($font-scale);\n  width: 100% / $font-scale + $mat-form-field-fill-dedupe;\n\n  $mat-form-field-fill-dedupe: $mat-form-field-fill-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-fill-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The padding on top of the infix.\n  $infix-padding-top: 0.25em;\n  // The padding below the infix.\n  $infix-padding-bottom: 0.75em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // The amount we offset the label from the input text in the fill appearance.\n  $fill-appearance-label-offset: -0.5em;\n\n  .mat-form-field-appearance-fill {\n    .mat-form-field-infix {\n      padding: $infix-padding-top 0 $infix-padding-bottom 0;\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding-top;\n      margin-top: $fill-appearance-label-offset;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _mat-form-field-fill-label-floating(\n                $subscript-font-scale, $infix-padding-top + $fill-appearance-label-offset,\n                $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-fill-label-floating(\n                $subscript-font-scale, $infix-padding-top + $fill-appearance-label-offset,\n                $infix-margin-top);\n      }\n    }\n  }\n}\n\n@mixin _mat-form-field-fill-density($config-or-theme) {}\n\n@mixin mat-form-field-fill-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-form-field-fill') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-form-field-fill-color($color);\n    }\n    @if $density != null {\n      @include _mat-form-field-fill-density($density);\n    }\n    @if $typography != null {\n      @include mat-form-field-fill-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n// Theme styles that only apply to the legacy appearance of the form-field.\n\n@mixin mat-form-field-legacy-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $is-dark-theme: map-get($config, is-dark);\n\n  $label-color: mat-color($foreground, secondary-text);\n  $underline-color: mat-color($foreground, divider, if($is-dark-theme, 0.7, 0.42));\n\n  .mat-form-field-appearance-legacy {\n    .mat-form-field-label {\n      color: $label-color;\n    }\n\n    .mat-hint {\n      color: $label-color;\n    }\n\n    .mat-form-field-underline {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-underline {\n      @include mat-control-disabled-underline($underline-color);\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-legacy-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-legacy-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  // We use perspective to fix the text blurriness as described here:\n  // http://www.useragentman.com/blog/2014/05/04/fixing-typography-inside-of-2-d-css-transforms/\n  // This results in a small jitter after the label floats on Firefox, which the\n  // translateZ fixes.\n  transform: translateY(-$infix-margin-top - $infix-padding) scale($font-scale) perspective(100px)\n  translateZ(0.001px + $mat-form-field-legacy-dedupe);\n  // The tricks above used to smooth out the animation on chrome and firefox actually make things\n  // worse on IE, so we don't include them in the IE version.\n  -ms-transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-legacy-dedupe)\n                  scale($font-scale);\n\n  width: 100% / $font-scale + $mat-form-field-legacy-dedupe;\n\n  $mat-form-field-legacy-dedupe: $mat-form-field-legacy-dedupe + 0.00001 !global;\n}\n\n// Same as mixin above, but omits the translateZ for printing purposes.\n@mixin _mat-form-field-legacy-label-floating-print($font-scale, $infix-padding, $infix-margin-top) {\n  // This results in a small jitter after the label floats on Firefox, which the\n  // translateZ fixes.\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-legacy-dedupe)\n                  scale($font-scale);\n  // The tricks above used to smooth out the animation on chrome and firefox actually make things\n  // worse on IE, so we don't include them in the IE version.\n  $mat-form-field-legacy-dedupe: $mat-form-field-legacy-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-legacy-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The amount of space between the top of the line and the top of the actual text\n  // (as a fraction of the font-size).\n  $line-spacing: ($line-height - 1) / 2;\n  // The padding on the infix. Mocks show half of the text size, but seem to measure from the edge\n  // of the text itself, not the edge of the line; therefore we subtract off the line spacing.\n  $infix-padding: 0.5em - $line-spacing;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size. We again need to subtract off the line spacing since the mocks measure to the edge of the\n  // text, not the  edge of the line.\n  $subscript-margin-top: 0.5em / $subscript-font-scale - ($line-spacing * 2);\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n\n  .mat-form-field-appearance-legacy {\n    .mat-form-field-wrapper {\n      padding-bottom: $wrapper-padding-bottom;\n    }\n\n    .mat-form-field-infix {\n      padding: $infix-padding 0;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _mat-form-field-legacy-label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n\n      // @breaking-change 8.0.0 will rely on AutofillMonitor instead.\n      .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-legacy-label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-legacy-label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding;\n    }\n\n    .mat-form-field-underline {\n      // We want the underline to start at the end of the content box, not the padding box,\n      // so we move it up by the padding amount.\n      bottom: $wrapper-padding-bottom;\n    }\n\n    .mat-form-field-subscript-wrapper {\n      margin-top: $subscript-margin-top;\n\n      // We want the subscript to start at the end of the content box, not the padding box,\n      // so we move it up by the padding amount (adjusted for the smaller font size);\n      top: calc(100% - #{$wrapper-padding-bottom / $subscript-font-scale});\n    }\n  }\n\n  // translateZ causes the label to not appear while printing, so we override it to not\n  // apply translateZ while printing\n  @media print {\n    .mat-form-field-appearance-legacy {\n      &.mat-form-field-can-float {\n        &.mat-form-field-should-float .mat-form-field-label,\n        .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n          @include _mat-form-field-legacy-label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n\n        // @breaking-change 8.0.0 will rely on AutofillMonitor instead.\n        .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n          @include _mat-form-field-legacy-label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n\n        // Server-side rendered matInput with a label attribute but label not shown\n        // (used as a pure CSS stand-in for mat-form-field-should-float).\n        .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n          @include _mat-form-field-legacy-label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n      }\n    }\n  }\n}\n\n@mixin _mat-form-field-legacy-density($config-or-theme) {}\n\n@mixin mat-form-field-legacy-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-form-field-legacy') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-form-field-legacy-color($color);\n    }\n    @if $density != null {\n      @include _mat-form-field-legacy-density($density);\n    }\n    @if $typography != null {\n      @include mat-form-field-legacy-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n// Theme styles that only apply to the outline appearance of the form-field.\n\n@mixin mat-form-field-outline-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $foreground: map-get($config, foreground);\n  $is-dark-theme: map-get($config, is-dark);\n\n  $label-disabled-color: mat-color($foreground, disabled-text);\n  $outline-color: mat-color($foreground, divider, if($is-dark-theme, 0.3, 0.12));\n  $outline-color-hover: mat-color($foreground, divider, if($is-dark-theme, 1, 0.87));\n  $outline-color-primary: mat-color($primary);\n  $outline-color-accent: mat-color($accent);\n  $outline-color-warn: mat-color($warn);\n  $outline-color-disabled: mat-color($foreground, divider, if($is-dark-theme, 0.15, 0.06));\n\n  .mat-form-field-appearance-outline {\n    .mat-form-field-outline {\n      color: $outline-color;\n    }\n\n    .mat-form-field-outline-thick {\n      color: $outline-color-hover;\n    }\n\n    &.mat-focused {\n      .mat-form-field-outline-thick {\n        color: $outline-color-primary;\n      }\n\n      &.mat-accent .mat-form-field-outline-thick {\n        color: $outline-color-accent;\n      }\n\n      &.mat-warn .mat-form-field-outline-thick {\n        color: $outline-color-warn;\n      }\n    }\n\n    // Class repeated so that rule is specific enough to override focused accent color case.\n    &.mat-form-field-invalid.mat-form-field-invalid {\n      .mat-form-field-outline-thick {\n        color: $outline-color-warn;\n      }\n    }\n\n    &.mat-form-field-disabled {\n      .mat-form-field-label {\n        color: $label-disabled-color;\n      }\n\n      .mat-form-field-outline {\n        color: $outline-color-disabled;\n      }\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-outline-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-outline-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-outline-dedupe)\n  scale($font-scale);\n  width: 100% / $font-scale + $mat-form-field-outline-dedupe;\n\n  $mat-form-field-outline-dedupe: $mat-form-field-outline-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-outline-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The padding above and below the infix.\n  $infix-padding: 1em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size.\n  $subscript-margin-top: 0.5em / $subscript-font-scale;\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n  // The amount we offset the label from the input text in the outline appearance.\n  $outline-appearance-label-offset: -0.25em;\n\n  .mat-form-field-appearance-outline {\n    .mat-form-field-infix {\n      padding: $infix-padding 0 $infix-padding 0;\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding;\n      margin-top: $outline-appearance-label-offset;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _mat-form-field-outline-label-floating(\n                $subscript-font-scale, $infix-padding + $outline-appearance-label-offset,\n                $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-outline-label-floating(\n                $subscript-font-scale, $infix-padding + $outline-appearance-label-offset,\n                $infix-margin-top);\n      }\n    }\n  }\n}\n\n@mixin _mat-form-field-outline-density($config-or-theme) {}\n\n@mixin mat-form-field-outline-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-form-field-outline') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-form-field-outline-color($color);\n    }\n    @if $density != null {\n      @include _mat-form-field-outline-density($density);\n    }\n    @if $typography != null {\n      @include mat-form-field-outline-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n\n// Theme styles that only apply to the standard appearance of the form-field.\n\n@mixin mat-form-field-standard-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $is-dark-theme: map-get($config, is-dark);\n\n  $underline-color: mat-color($foreground, divider, if($is-dark-theme, 0.7, 0.42));\n\n  .mat-form-field-appearance-standard {\n    .mat-form-field-underline {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-underline {\n      @include mat-control-disabled-underline($underline-color);\n    }\n  }\n}\n\n@mixin mat-form-field-standard-typography($config-or-theme) {}\n\n@mixin _mat-form-field-standard-density($config-or-theme) {}\n\n@mixin mat-form-field-standard-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-form-field-standard') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-form-field-standard-color($color);\n    }\n    @if $density != null {\n      @include _mat-form-field-standard-density($density);\n    }\n    @if $typography != null {\n      @include mat-form-field-standard-typography($typography);\n    }\n  }\n}\n\n\n// Color styles that apply to all appearances of the form-field.\n@mixin mat-form-field-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n  $is-dark-theme: map-get($config, is-dark);\n\n  // Label colors. Required is used for the `*` star shown in the label.\n  $label-color: mat-color($foreground, secondary-text, if($is-dark-theme, 0.7, 0.6));\n  $focused-label-color: mat-color($primary, text);\n  $required-label-color: mat-color($accent, text);\n\n  // Underline colors.\n  $underline-color-base: mat-color($foreground, divider, if($is-dark-theme, 1, 0.87));\n  $underline-color-accent: mat-color($accent, text);\n  $underline-color-warn: mat-color($warn, text);\n  $underline-focused-color: mat-color($primary, text);\n\n  .mat-form-field-label {\n    color: $label-color;\n  }\n\n  .mat-hint {\n    color: $label-color;\n  }\n\n  .mat-form-field.mat-focused .mat-form-field-label {\n    color: $focused-label-color;\n\n    &.mat-accent {\n      color: $underline-color-accent;\n    }\n\n    &.mat-warn {\n      color: $underline-color-warn;\n    }\n  }\n\n  .mat-focused .mat-form-field-required-marker {\n    color: $required-label-color;\n  }\n\n  .mat-form-field-ripple {\n    background-color: $underline-color-base;\n  }\n\n  .mat-form-field.mat-focused {\n    .mat-form-field-ripple {\n      background-color: $underline-focused-color;\n\n      &.mat-accent {\n        background-color: $underline-color-accent;\n      }\n\n      &.mat-warn {\n        background-color: $underline-color-warn;\n      }\n    }\n  }\n\n  .mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid) {\n    .mat-form-field-infix::after {\n      color: $underline-focused-color;\n    }\n\n    &.mat-accent .mat-form-field-infix::after {\n      color: $underline-color-accent;\n    }\n\n    &.mat-warn .mat-form-field-infix::after {\n      color: $underline-color-warn;\n    }\n  }\n\n  // Styling for the error state of the form field. Note that while the same can be\n  // achieved with the ng-* classes, we use this approach in order to ensure that the same\n  // logic is used to style the error state and to show the error messages.\n  .mat-form-field.mat-form-field-invalid {\n    .mat-form-field-label {\n      color: $underline-color-warn;\n\n      &.mat-accent,\n      .mat-form-field-required-marker {\n        color: $underline-color-warn;\n      }\n    }\n\n    .mat-form-field-ripple,\n    .mat-form-field-ripple.mat-accent {\n      background-color: $underline-color-warn;\n    }\n  }\n\n  .mat-error {\n    color: $underline-color-warn;\n  }\n\n  @include mat-form-field-legacy-color($config);\n  @include mat-form-field-standard-color($config);\n  @include mat-form-field-fill-color($config);\n  @include mat-form-field-outline-color($config);\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-dedupe)\n             scale($font-scale);\n  width: 100% / $font-scale + $mat-form-field-dedupe;\n\n  $mat-form-field-dedupe: $mat-form-field-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The amount to scale the font for the prefix and suffix icons.\n  $prefix-suffix-icon-font-scale: 1.5;\n\n  // The padding on the infix. Mocks show half of the text size.\n  $infix-padding: 0.5em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // Font size to use for the label and subscript text.\n  $subscript-font-size: $subscript-font-scale * 100%;\n  // Font size to use for the for the prefix and suffix icons.\n  $prefix-suffix-icon-font-size: $prefix-suffix-icon-font-scale * 100%;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size.\n  $subscript-margin-top: 0.5em / $subscript-font-scale;\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n\n  .mat-form-field {\n    @include mat-typography-level-to-styles($config, input);\n  }\n\n  .mat-form-field-wrapper {\n    padding-bottom: $wrapper-padding-bottom;\n  }\n\n  .mat-form-field-prefix,\n  .mat-form-field-suffix {\n    // Allow icons in a prefix or suffix to adapt to the correct size.\n    .mat-icon {\n      font-size: $prefix-suffix-icon-font-size;\n      line-height: $line-height;\n    }\n\n    // Allow icon buttons in a prefix or suffix to adapt to the correct size.\n    .mat-icon-button {\n      height: $prefix-suffix-icon-font-scale * 1em;\n      width: $prefix-suffix-icon-font-scale * 1em;\n\n      .mat-icon {\n        height: $line-height * 1em;\n        line-height: $line-height;\n      }\n    }\n  }\n\n  .mat-form-field-infix {\n    padding: $infix-padding 0;\n    // Throws off the baseline if we do it as a real margin, so we do it as a border instead.\n    border-top: $infix-margin-top solid transparent;\n  }\n\n  .mat-form-field-can-float {\n    &.mat-form-field-should-float .mat-form-field-label,\n    .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n      @include _mat-form-field-label-floating(\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\n    }\n\n    // Server-side rendered matInput with a label attribute but label not shown\n    // (used as a pure CSS stand-in for mat-form-field-should-float).\n    .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n      @include _mat-form-field-label-floating(\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\n    }\n  }\n\n  .mat-form-field-label-wrapper {\n    top: -$infix-margin-top;\n    padding-top: $infix-margin-top;\n  }\n\n  .mat-form-field-label {\n    top: $infix-margin-top + $infix-padding;\n  }\n\n  .mat-form-field-underline {\n    // We want the underline to start at the end of the content box, not the padding box,\n    // so we move it up by the padding amount.\n    bottom: $wrapper-padding-bottom;\n  }\n\n  .mat-form-field-subscript-wrapper {\n    font-size: $subscript-font-size;\n    margin-top: $subscript-margin-top;\n\n    // We want the subscript to start at the end of the content box, not the padding box,\n    // so we move it up by the padding amount (adjusted for the smaller font size);\n    top: calc(100% - #{$wrapper-padding-bottom / $subscript-font-scale});\n  }\n\n  @include mat-form-field-legacy-typography($config);\n  @include mat-form-field-standard-typography($config);\n  @include mat-form-field-fill-typography($config);\n  @include mat-form-field-outline-typography($config);\n}\n\n@mixin _mat-form-field-density($config-or-theme) {\n  $density-scale: mat-get-density-config($config-or-theme);\n  @include _mat-form-field-legacy-density($density-scale);\n  @include _mat-form-field-standard-density($density-scale);\n  @include _mat-form-field-fill-density($density-scale);\n  @include _mat-form-field-outline-density($density-scale);\n}\n\n@mixin mat-form-field-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-form-field') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-form-field-color($color);\n    }\n    @if $density != null {\n      @include _mat-form-field-density($density);\n    }\n    @if $typography != null {\n      @include mat-form-field-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n$mat-tree-node-height: 48px !default;\n// Minimum height for tree nodes in highest density is difficult to determine as\n// developers can display arbitrary content. We use a minimum height which ensures\n// that common content placed in tree nodes does not exceed (e.g. icons, checkboxes).\n$mat-tree-node-minimum-height: 24px !default;\n$mat-tree-node-maximum-height: $mat-tree-node-height !default;\n\n$mat-tree-density-config: (\n  height: (\n    default: $mat-tree-node-height,\n    maximum: $mat-tree-node-maximum-height,\n    minimum: $mat-tree-node-minimum-height,\n  )\n) !default;\n\n\n@mixin mat-tree-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-tree {\n    background: mat-color($background, 'card');\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-tree-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-tree {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    font-weight: mat-font-weight($config, body-1);\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n@mixin _mat-tree-density($config-or-theme) {\n  $density-scale: mat-get-density-config($config-or-theme);\n  $height: _mat-density-prop-value($mat-tree-density-config, $density-scale, height);\n\n  @include _mat-density-legacy-compatibility() {\n    .mat-tree-node {\n      min-height: $height;\n    }\n  }\n}\n\n@mixin mat-tree-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-tree') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-tree-color($color);\n    }\n    @if $density != null {\n      @include _mat-tree-density($density);\n    }\n    @if $typography != null {\n      @include mat-tree-typography($typography);\n    }\n  }\n}\n\n\n\n\n// Includes all of the typographic styles.\n@mixin angular-material-typography($config-or-theme: null) {\n  $config: if(_mat-is-theme-object($config-or-theme),\n      mat-get-typography-config($config-or-theme), $config-or-theme);\n\n  // If no actual color configuration has been specified, create a default one.\n  @if not $config {\n    $config: mat-typography-config();\n  }\n\n  // TODO: COMP-309: Do not use individual mixins. Instead, use the all-theme mixin and only\n  // specify a `typography` config while setting `color` and `density` to `null`. This is currently\n  // not possible as it would introduce a circular dependency for typography because the `mat-core`\n  // mixin that is transitively loaded by the `all-theme` file, imports `all-typography` which\n  // would then load `all-theme` again. This ultimately results a circular dependency.\n\n  @include mat-badge-typography($config);\n  @include mat-base-typography($config);\n  @include mat-autocomplete-typography($config);\n  @include mat-bottom-sheet-typography($config);\n  @include mat-button-typography($config);\n  @include mat-button-toggle-typography($config);\n  @include mat-card-typography($config);\n  @include mat-checkbox-typography($config);\n  @include mat-chips-typography($config);\n  @include mat-divider-typography($config);\n  @include mat-table-typography($config);\n  @include mat-datepicker-typography($config);\n  @include mat-dialog-typography($config);\n  @include mat-expansion-panel-typography($config);\n  @include mat-form-field-typography($config);\n  @include mat-grid-list-typography($config);\n  @include mat-icon-typography($config);\n  @include mat-input-typography($config);\n  @include mat-menu-typography($config);\n  @include mat-paginator-typography($config);\n  @include mat-progress-bar-typography($config);\n  @include mat-progress-spinner-typography($config);\n  @include mat-radio-typography($config);\n  @include mat-select-typography($config);\n  @include mat-sidenav-typography($config);\n  @include mat-slide-toggle-typography($config);\n  @include mat-slider-typography($config);\n  @include mat-stepper-typography($config);\n  @include mat-sort-typography($config);\n  @include mat-tabs-typography($config);\n  @include mat-toolbar-typography($config);\n  @include mat-tooltip-typography($config);\n  @include mat-list-typography($config);\n  @include mat-option-typography($config);\n  @include mat-optgroup-typography($config);\n  @include mat-snack-bar-typography($config);\n  @include mat-tree-typography($config);\n}\n\n\n// Mixin that renders all of the core styles that are not theme-dependent.\n@mixin mat-core($typography-config: null) {\n  @include angular-material-typography($typography-config);\n  @include mat-ripple();\n  @include cdk-a11y();\n  @include cdk-overlay();\n  @include cdk-text-field();\n\n  @include _mat-strong-focus-indicators-positioning();\n  @include _mat-mdc-core();\n}\n\n@mixin mat-core-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  // Wrapper element that provides the theme background when the user's content isn't\n  // inside of a `mat-sidenav-container`. Note that we need to exclude the ampersand\n  // selector in case the mixin is included at the top level.\n  .mat-app-background#{if(&, ', &.mat-app-background', '')} {\n    $background: map-get($config, background);\n    $foreground: map-get($config, foreground);\n\n    background-color: mat-color($background, background);\n    color: mat-color($foreground, text);\n  }\n\n  // Provides external CSS classes for each elevation value. Each CSS class is formatted as\n  // `mat-elevation-z$zValue` where `$zValue` corresponds to the z-space to which the element is\n  // elevated.\n  @for $zValue from 0 through 24 {\n    .#{$_mat-elevation-prefix}#{$zValue} {\n      @include _mat-theme-elevation($zValue, $config);\n    }\n  }\n\n  // Marker that is used to determine whether the user has added a theme to their page.\n  @at-root {\n    .mat-theme-loaded-marker {\n      display: none;\n    }\n  }\n}\n\n// Mixin that renders all of the core styles that depend on the theme.\n@mixin mat-core-theme($theme-or-color-config) {\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\n  // Wrap the sub-theme includes in the duplicate theme styles mixin. This ensures that\n  // there won't be multiple warnings. e.g. if `mat-core-theme` reports a warning, then\n  // the imported themes (such as `mat-ripple-theme`) should not report again.\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-core') {\n    @include mat-ripple-theme($theme);\n    @include mat-option-theme($theme);\n    @include mat-optgroup-theme($theme);\n    @include mat-pseudo-checkbox-theme($theme);\n\n    $color: mat-get-color-config($theme);\n    @if $color != null {\n      @include mat-core-color($color);\n    }\n  }\n}\n\n// Mixin that renders all of the core MDC styles. Private mixin included with `mat-core`.\n@mixin _mat-mdc-core() {\n  @include _mat-mdc-strong-focus-indicators-positioning();\n}\n\n// Mixin that ensures focus indicator host elements are positioned so that the focus indicator\n// pseudo element within is positioned relative to the host. Private mixin included within\n// `_mat-mdc-core`.\n@mixin _mat-mdc-strong-focus-indicators-positioning() {\n  .mat-mdc-focus-indicator {\n    position: relative;\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Create a theme.\n@mixin angular-material-theme($theme-or-color-config) {\n  @include _mat-check-duplicate-theme-styles($theme-or-color-config, 'angular-material-theme') {\n    @include mat-core-theme($theme-or-color-config);\n    @include mat-autocomplete-theme($theme-or-color-config);\n    @include mat-badge-theme($theme-or-color-config);\n    @include mat-bottom-sheet-theme($theme-or-color-config);\n    @include mat-button-theme($theme-or-color-config);\n    @include mat-button-toggle-theme($theme-or-color-config);\n    @include mat-card-theme($theme-or-color-config);\n    @include mat-checkbox-theme($theme-or-color-config);\n    @include mat-chips-theme($theme-or-color-config);\n    @include mat-table-theme($theme-or-color-config);\n    @include mat-datepicker-theme($theme-or-color-config);\n    @include mat-dialog-theme($theme-or-color-config);\n    @include mat-divider-theme($theme-or-color-config);\n    @include mat-expansion-panel-theme($theme-or-color-config);\n    @include mat-form-field-theme($theme-or-color-config);\n    @include mat-grid-list-theme($theme-or-color-config);\n    @include mat-icon-theme($theme-or-color-config);\n    @include mat-input-theme($theme-or-color-config);\n    @include mat-list-theme($theme-or-color-config);\n    @include mat-menu-theme($theme-or-color-config);\n    @include mat-paginator-theme($theme-or-color-config);\n    @include mat-progress-bar-theme($theme-or-color-config);\n    @include mat-progress-spinner-theme($theme-or-color-config);\n    @include mat-radio-theme($theme-or-color-config);\n    @include mat-select-theme($theme-or-color-config);\n    @include mat-sidenav-theme($theme-or-color-config);\n    @include mat-slide-toggle-theme($theme-or-color-config);\n    @include mat-slider-theme($theme-or-color-config);\n    @include mat-stepper-theme($theme-or-color-config);\n    @include mat-sort-theme($theme-or-color-config);\n    @include mat-tabs-theme($theme-or-color-config);\n    @include mat-toolbar-theme($theme-or-color-config);\n    @include mat-tooltip-theme($theme-or-color-config);\n    @include mat-tree-theme($theme-or-color-config);\n    @include mat-snack-bar-theme($theme-or-color-config);\n  }\n}\n\n\n// Includes all of the color styles.\n@mixin angular-material-color($config-or-theme) {\n  // In case a theme object has been passed instead of a configuration for\n  // the color system, extract the color config from the theme object.\n  $config: if(_mat-is-theme-object($config-or-theme),\n      mat-get-color-config($config-or-theme), $config-or-theme);\n\n  @if $config == null {\n    @error 'No color configuration specified.';\n  }\n\n  @include angular-material-theme((\n    color: $config,\n    typography: null,\n    density: null,\n  ));\n}\n\n\n\n// Includes all of the density styles.\n@mixin _angular-material-density($config-or-theme) {\n  // In case a theme object has been passed instead of a configuration for\n  // the density system, extract the density config from the theme object.\n  $config: if(_mat-is-theme-object($config-or-theme),\n      mat-get-density-config($config-or-theme), $config-or-theme);\n\n  @if $config == null {\n    @error 'No density configuration specified.';\n  }\n\n  @include angular-material-theme((\n    color: null,\n    typography: null,\n    density: $config,\n  ));\n}\n\n\n\n","@import 'variables';\n@import 'mixins';\n\n$material-design-icons-font-directory-path: './fonts/' !default;\n$material-design-icons-font-file-name: 'MaterialIcons-Regular' !default;\n$material-design-icons-font-file-path: $material-design-icons-font-directory-path + $material-design-icons-font-file-name !default;\n$material-design-icons-class-icons-generate-codepoints: true !default;\n$material-design-icons-class-icons-prefix: '' !default;\n\n@font-face {\n  font-family: 'Material Icons';\n  font-style: normal;\n  font-weight: 400;\n  font-display: block;\n  src: url(\"#{$material-design-icons-font-file-path}.eot\"); /* For IE6-8 */\n  src: local('☺'),\n  url(\"#{$material-design-icons-font-file-path}.woff2\") format('woff2'),\n  url(\"#{$material-design-icons-font-file-path}.woff\") format('woff'),\n  url(\"#{$material-design-icons-font-file-path}.ttf\") format('truetype');\n}\n\n.material-icons {\n  font-family: 'Material Icons';\n  font-weight: normal;\n  font-style: normal;\n  font-size: 24px; /* Preferred icon size */\n  display: inline-block;\n  line-height: 1;\n  text-transform: none;\n  letter-spacing: normal;\n  word-wrap: normal;\n  white-space: nowrap;\n  direction: ltr;\n\n  /* Support for all WebKit browsers. */\n  -webkit-font-smoothing: antialiased;\n  /* Support for Safari and Chrome. */\n  text-rendering: optimizeLegibility;\n  /* Support for Firefox. */\n  -moz-osx-font-smoothing: grayscale;\n  /* Support for IE. */\n  font-feature-settings: 'liga';\n\n  @if $material-design-icons-class-icons-generate-codepoints {\n    @each $name, $codepoint in $material-icons-codepoints {\n      $codepoint: map-get($material-icons-codepoints, $name);\n\n      $class-name: $material-design-icons-class-icons-prefix + $name;\n      $class-name: normalize-class-name($class-name);\n\n      &.#{$class-name} {\n        &:before {\n          content: material-icons-content($codepoint);\n        }\n      }\n    }\n  }\n}\n\n","/*\n * Global application theme.\n * Framework overrides and customization goes here.\n */\n\n// stylelint-disable-next-line selector-max-universal\n* {\n  box-sizing: border-box;\n}\n\nhtml,\nbody {\n  display: flex;\n  flex-direction: column;\n  margin: 0;\n  height: 100%;\n}\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ __webpack_exports__["default"] = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "q+Kr":
/*!***********************!*\
  !*** ./src/main.scss ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var api = __webpack_require__(/*! ../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "LboF");
            var content = __webpack_require__(/*! !../node_modules/css-loader/dist/cjs.js??ref--13-1!../node_modules/postcss-loader/src??embedded!../node_modules/resolve-url-loader??ref--13-3!../node_modules/sass-loader/dist/cjs.js??ref--13-4!./main.scss */ "iN72");

            content = content.__esModule ? content.default : content;

            if (typeof content === 'string') {
              content = [[module.i, content, '']];
            }

var options = {};

options.insert = "head";
options.singleton = false;

var update = api(content, options);



module.exports = content.locals || {};

/***/ })

},[[2,"runtime"]]]);
//# sourceMappingURL=styles.js.map